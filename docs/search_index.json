[["index.html", "IOBR (Immuno-Oncology Biological Research) Introduction 0.1  Introduction 0.2  License 0.3  Citations 0.4 ⏳ Major Updates 0.5 ✉️ Reporting bugs", " IOBR (Immuno-Oncology Biological Research) Dongqiang Zeng, Yiran Fang 2025-05-16 Introduction Preface Figure 0.1: The workflow of IOBR 0.1  Introduction IOBR is the acronym for Immuno-Oncology Biological Research. Recent advances in next-generation sequencing have triggered the rapid accumulation of publicly available multi-omics data. The application of integrated omics to explore robust signatures for clinical translation is increasingly highlighted in immuno-oncology, but poses computational and biological challenges. This vignette aims to demonstrate how to use the package named IOBR to perform multi-omics immuno-oncology biological research to decipher tumour microenvironment and signatures for clinical translation. This R package integrates 8 published methods for decoding the tumour microenvironment (TME) context: CIBERSORT, TIMER, xCell, MCPcounter, ESITMATE, EPIC, IPS, quanTIseq. In addition, 264 published signature gene sets have been collected by IOBR covering tumour microenvironment, tumour metabolism, m6A, exosomes, microsatellite instability and tertiary lymphoid structure. The signature_collection_citation function is run to obtain the source papers, and the signature_collection function returns the detailed signature genes of all given signatures. IOBR then uses three computational methods to calculate the signature score, including PCA, z-score and ssGSEA. Note that IOBR collected and used several approaches for variable transition, visualisation, batch survival analysis, feature selection and statistical analysis. Batch analysis and visualisation of results are supported. The details of how IOBR works are described below. 0.2  License IOBR was released under the GPL v3.0 license. See LICENSE for details. The code contained in this book is simultaneously available under the GPL license; this means that you are free to use it in your packages, as long as you cite the source. The online version of this book is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License. 0.3  Citations Zeng DQ, Fang YR, … , Yu GC, Liao WJ. Enhancing Immuno-Oncology Investigations Through Multidimensional Decoding of Tumour Microenvironment with IOBR 2.0, Cell Reports Methods, 2024 https://doi.org/10.1016/j.crmeth.2024.100910 Fang YR, …, Liao WJ, Zeng DQ, Systematic Investigation of Tumor Microenvironment and Antitumor Immunity With IOBR, Med Research, 2025, DOI:10.1002/mdr2.70001 0.4 ⏳ Major Updates Figure 0.2: The workflow of IOBR 0.5 ✉️ Reporting bugs Please report bugs to the Github issues page E-mail any questions to Dr. Fang fyr_nate@163.com or Dr. Zeng interlaken@smu.edu.cn "],["how-to-install-iobr.html", "Chapter 1 How to install IOBR 1.1 ⏳ Install Dependency Packages 1.2  Install IOBR package 1.3  How to update IOBR", " Chapter 1 How to install IOBR 1.1 ⏳ Install Dependency Packages It is essential that you have R 3.6.3 or above already installed on your computer or server. IOBR is a pipeline that utilizes many other R packages that are currently available from CRAN, Bioconductor and GitHub. if (!requireNamespace(&quot;BiocManager&quot;, quietly = TRUE)) install.packages(&quot;BiocManager&quot;) depens&lt;-c(&#39;tibble&#39;, &#39;survival&#39;, &#39;survminer&#39;, &#39;limma&#39;, &quot;DESeq2&quot;,&quot;devtools&quot;, &#39;limSolve&#39;, &#39;GSVA&#39;, &#39;e1071&#39;, &#39;preprocessCore&#39;, &quot;devtools&quot;, &quot;tidyHeatmap&quot;, &quot;caret&quot;, &quot;glmnet&quot;, &quot;ppcor&quot;, &quot;timeROC&quot;, &quot;pracma&quot;, &quot;factoextra&quot;, &quot;FactoMineR&quot;, &quot;WGCNA&quot;, &quot;patchwork&quot;, &#39;ggplot2&#39;, &quot;biomaRt&quot;, &#39;ggpubr&#39;, &quot;PMCMRplus&quot;) for(i in 1:length(depens)){ depen&lt;-depens[i] if (!requireNamespace(depen, quietly = TRUE)) BiocManager::install(depen,update = FALSE) } 1.2  Install IOBR package When the dependent environments are built, users are able to install IOBR from github by typing the following code into your R session: if (!requireNamespace(&quot;IOBR&quot;, quietly = TRUE)) devtools::install_github(&quot;IOBR/IOBR&quot;) library(IOBR) 1.3  How to update IOBR detach(&quot;package:IOBR&quot;) path&lt;-.libPaths() remove.packages(c(&#39;IOBR&#39;), lib=file.path(path)) devtools::install_github(&quot;IOBR/IOBR&quot;) "],["how-to-use-iobr.html", "Chapter 2 How to use IOBR 2.1  The main pipeline of IOBR 2.2  Main Functions of IOBR 2.3  Current working environment", " Chapter 2 How to use IOBR 2.1  The main pipeline of IOBR Figure 2.1: The main pipeline of IOBR 2.2  Main Functions of IOBR Data Preparation: data annotation and transformation count2tpm(): transform gene expression count data into Transcripts Per Million (TPM) values. This function supports gene IDs of type “Ensembl”, “Entrez”, or “Symbol”, and retrieves gene length information using either an online connection to the bioMart database or a local dataset (specified by the source parameter). anno_eset(): annotate an ExpressionSet object (eset) with gene symbols using the provided annotation data. It retains only the rows with probes that have matching identifiers in the annotation data. The function handles duplicates according to the specified method. The output is an annotated and cleaned expression set. remove_duplicate_genes(): remove duplicate gene symbols from gene expression data. The retention of gene symbols is based either on their mean values (if method is set as “mean”) or standard deviation values (if method is set as “sd”). mouse2human_eset(): convert mouse gene symbols to human gene symbols of expression set. find_outlier_samples(): analyze gene expression data and identify potential outlier samples based on connectivity analysis. By utilizing the “WGCNA” package, this function calculates the normalized adjacency and connectivity z-scores for each sample. It also offers multiple parameters to customize analysis and visualization. remove_batcheffect(): remove batch effects from given expression datasets and visualize the corrected data using principal component analysis (PCA). It takes three expression datasets as input and performs batch effect correction using the “sva::ComBat” or “sva::ComBat_seq” methods. The function then generates PCA plots to compare the data before and after correction. TME Deconvolution Module: integrate multiple algorithms to decode immune contexture deconvo_tme(): decode the TME infiltration using various deconvolution methodologies, based on bulk RNAseq, microarray or single cell RNAseq data. It currently supports methods include “CIBERSORT”, “MCPcounter”, “EPIC”, “xCell”, “IPS”, “estimate”, “quanTIseq”, “TIMER”, “SVR” and “lsei”. generateRef(): generate a novel gene reference data for specific feature deconvolution, such as infiltrating cell, utilizing different methods to identify differentially expressed genes (DEGs) . The function supports both “limma” and “DESeq2” methods.The resulting gene reference data can be used for deconvo_tme() with the “svr” and “lsei” algorithms. generateRef_seurat(): take a Seurat object “sce” and additional parameters to perform various operations for generating reference gene expression data. It allows for specifying cell types, proportions, assays, preprocessing options, and statistical testing parameters.The resulting gene reference data can be used for deconvo_tme() with the “svr” and “lsei” algorithms. Signature Module: calculating signature scores, estimate phenotype related signatures and corresponding genes, and evaluate signatures generated from single-cell RNA sequencing data calculate_sig_score(): estimate the interested signatures enrolled in IOBR R package, which involves TME-associated, tumor-metabolism, and tumor-intrinsic signatures.The supported methods for signature score calculation include “PCA”, “ssGSEA”, “z-score”, and Integration. feature_manipulation(): manipulate features including the cell fraction and signatures generated from multi-omics data for latter analysis and model construction. Remove missing values, outliers and variables without significant variance. format_signatures(): generate the object for calculate_sig_score() function, by inputting a data frame with signatures as column names of corresponding gene sets, and return a list contain the signature information for calculating multiple signature scores. format_msigdb(): transform the signature gene sets data with gmt format, which is not included in the signature collection and might be downloaded in the MSgiDB website, into the object of calculate_sig_score() function. sig_gsea(): conduct Gene Set Enrichment Analysis (GSEA) to identify significant gene sets based on differential gene expression data. This function performs GSEA using the fgsea package and provides visualizations and results in the form of tables and plots. It supports the utilization of user-defined gene sets or the use of predefined gene sets from MSigDB. get_sig_sc(): get top gene signatures from single-cell differential analysis for calculate_sig_score() function. The input is a matrix containing a ranked list of putative markers, and associated statistics (p-values, ROC score, etc.) Batch Analysis and Visualization: batch survival analysis and batch correlation analysis and other batch statistical analyses batch_surv(): perform batch survival analysis. It calculates hazard ratios and confidence intervals for the specified variables based on the given data containing time-related information. subgroup_survival(): extract hazard ratio and confidence intervals from a coxph object of subgroup analysis. batch_cor(): batch analysis of correlation between two continuous variables using Pearson correlation coefficient or Spearman’s rank correlation coefficient. batch_wilcoxon(): perform Wilcoxon rank-sum tests on a given data set to compare the distribution of a specified feature between two groups. It computes the p-values and ranks the significant features based on the p-values. It returns a data frame with the feature names, p-values, adjusted p-values, logarithm of p-values, and a star rating based on the p-value ranges. batch_pcc(): provide a batch way to calculate the partial correlation coefficient between feature and others when controlling a third variable. iobr_cor_plot(): visualization of batch correlation analysis of signatures from “sig_group”. Visualize the correlation between signature or phenotype with expression of gene sets in target signature is also supported. cell_bar_plot(): batch visualization of TME cell fraction, supporting input of deconvolution results from “CIBERSORT”, “EPIC” and “quanTIseq” methodologies to further compare the TME cell distributions within one sample or among different samples. iobr_pca(): perform Principal Component Analysis (PCA), which reduces the dimensionality of data while maintaining most of the original variance, and visualizes the PCA results on a scatter plot. iobr_deg(): perform differential expression analysis on gene expression data using the DESeq2 or limma method. It filters low count data, calculates fold changes and adjusted p-values, and identifies DEGs based on specified cutoffs. It also provides optional visualization tools such as volcano plots and heatmaps. get_cor(): calculate and visualize the correlation between two variables in a dataset. It provides options to scale the data, handle missing values, and incorporate additional data. The function supports various correlation methods. It generates a correlation plot with optional subtypes or categories, including a regression line. get_cor_matrix(): calculate and visualize the correlation matrix between two sets of variables in a dataset. It provides flexibility in defining correlation methods, handling missing values, and incorporating additional data. The function supports various correlation methods, such as Pearson correlation, and displays the correlation result in a customizable plot. roc_time(): generate a Receiver Operating Characteristic (ROC) plot over time to assess the predictive performance of one or more variables in survival analysis. It calculates the Area Under the Curve (AUC) for each specified time point and variable combination, and creates a multi-line ROC plot with corresponding AUC values annotated. sig_box(): generate a boxplot with optional statistical comparisons. It takes in various parameters such as data, signature, variable, and more to customize the plot. It can be used to visualize and analyze data in a Seurat object or any other data frame. sig_heatmap(): generate a heatmap plot based on input data, grouping variables, and optional conditions. The function allows customization of various parameters such as palette selection, scaling, color boxes, plot dimensions, and more. It provides flexibility in visualizing relationships between variables and groups in a concise and informative manner. sig_forest(): create a forest plot for visualizing survival analysis results generated by “batch_surv”. sig_roc(): plot multiple ROC curves in a single graph, facilitating the comparison of different variables in terms of their ability to predict a binary response. sig_surv_plot(): generat multiple Kaplan-Meier (KM) survival plots for a given signature or gene. It allows for detailed customization and is structured to handle various aspects of survival analysis. find_markers_in_bulk(): find relevant results from the given gene expression data and meta information. It leverages the “Seurat” package to identify significant markers across multiple groups within the given data. The supported methods for comparison include “bootstrap”, “delong” and “venkatraman”. Signature Associated Mutation Module: identify and analyze mutations relevant to targeted signatures make_mut_matrix(): transform the mutation data with MAF format(contain the columns of gene ID and the corresponding gene alterations which including SNP, indel and frameshift) into a mutation matrix in a suitable manner for further investigating signature relevant mutations. find_mutations(): identify mutations associated with a distinct phenotype or signature. The function conducts the Cuzick test, Wilcoxon test, or both (when the method is set to “multi”). It generates box plots for the top genes identified through these statistical tests and creates oncoprints to graphically represent the mutation landscape across samples. Model Construction Module: feature selection and fast model construct to predict clinical phenotype BinomialModel(): select features and construct a model to predict a binary phenotype. It accepts a dataset (x and y) as input and performs data processing, splitting into training and testing sets, and model fitting using both Lasso and Ridge regression techniques. PrognosticMode(): select features and construct a model to predict clinical survival outcome. It primarily focuses on developing Lasso and Ridge regression models within the Cox proportional hazards framework. combine_pd_eset(): combine the expression set (eset) with phenotype data (pdata). percent_bar_plot(): create a percent bar plot based on the given data. The input is a data frame, with x and y-axis variables specified. 2.3  Current working environment library(IOBR) sessionInfo() ## R version 4.4.1 (2024-06-14 ucrt) ## Platform: x86_64-w64-mingw32/x64 ## Running under: Windows 11 x64 (build 26100) ## ## Matrix products: default ## ## ## locale: ## [1] LC_COLLATE=Chinese (Simplified)_China.utf8 ## [2] LC_CTYPE=Chinese (Simplified)_China.utf8 ## [3] LC_MONETARY=Chinese (Simplified)_China.utf8 ## [4] LC_NUMERIC=C ## [5] LC_TIME=Chinese (Simplified)_China.utf8 ## ## time zone: Asia/Shanghai ## tzcode source: internal ## ## attached base packages: ## [1] grid stats graphics grDevices utils datasets methods ## [8] base ## ## other attached packages: ## [1] IOBR_0.99.0 GSVA_1.52.3 e1071_1.7-16 ## [4] preprocessCore_1.66.0 limSolve_1.5.7.1 limma_3.60.6 ## [7] lubridate_1.9.3 forcats_1.0.0 stringr_1.5.1 ## [10] purrr_1.0.2 readr_2.1.5 tidyr_1.3.1 ## [13] tidyverse_2.0.0 survminer_0.4.9 patchwork_1.3.0 ## [16] clusterProfiler_4.12.6 tidyHeatmap_1.8.1 ComplexHeatmap_2.20.0 ## [19] survival_3.6-4 ggpubr_0.6.0 ggplot2_3.5.1 ## [22] dplyr_1.1.4 tibble_3.2.1 ## ## loaded via a namespace (and not attached): ## [1] SpatialExperiment_1.14.0 IRanges_2.38.1 ## [3] R.methodsS3_1.8.2 GSEABase_1.66.0 ## [5] goftest_1.2-3 HDF5Array_1.32.1 ## [7] Biostrings_2.72.1 vctrs_0.6.5 ## [9] spatstat.random_3.3-2 digest_0.6.37 ## [11] png_0.1-8 shape_1.4.6.1 ## [13] proxy_0.4-27 ggrepel_0.9.6 ## [15] deldir_2.0-4 parallelly_1.38.0 ## [17] magick_2.8.5 MASS_7.3-60.2 ## [19] reshape2_1.4.4 httpuv_1.6.15 ## [21] foreach_1.5.2 BiocGenerics_0.50.0 ## [23] qvalue_2.36.0 withr_3.0.2 ## [25] xfun_0.48 ggfun_0.1.7 ## [27] memoise_2.0.1 gson_0.1.0 ## [29] tidytree_0.4.6 zoo_1.8-12 ## [31] GlobalOptions_0.1.2 pbapply_1.7-2 ## [33] R.oo_1.26.0 Formula_1.2-5 ## [35] KEGGREST_1.44.1 promises_1.3.0 ## [37] httr_1.4.7 rstatix_0.7.2 ## [39] rhdf5filters_1.16.0 globals_0.16.3 ## [41] fitdistrplus_1.2-1 rhdf5_2.48.0 ## [43] rstudioapi_0.17.1 UCSC.utils_1.0.0 ## [45] miniUI_0.1.1.1 generics_0.1.3 ## [47] DOSE_3.30.5 S4Vectors_0.42.1 ## [49] zlibbioc_1.50.0 ScaledMatrix_1.12.0 ## [51] ggraph_2.2.1 polyclip_1.10-7 ## [53] GenomeInfoDbData_1.2.12 quadprog_1.5-8 ## [55] SparseArray_1.4.8 xtable_1.8-4 ## [57] doParallel_1.0.17 evaluate_1.0.1 ## [59] S4Arrays_1.4.1 hms_1.1.3 ## [61] glmnet_4.1-8 GenomicRanges_1.56.2 ## [63] bookdown_0.41.1 irlba_2.3.5.1 ## [65] colorspace_2.1-1 ROCR_1.0-11 ## [67] reticulate_1.39.0 spatstat.data_3.1-2 ## [69] magrittr_2.0.3 lmtest_0.9-40 ## [71] later_1.3.2 viridis_0.6.5 ## [73] ggtree_3.12.0 lattice_0.22-6 ## [75] spatstat.geom_3.3-3 future.apply_1.11.3 ## [77] XML_3.99-0.17 scattermore_1.2 ## [79] shadowtext_0.1.4 cowplot_1.1.3 ## [81] matrixStats_1.4.1 RcppAnnoy_0.0.22 ## [83] class_7.3-22 pillar_1.9.0 ## [85] nlme_3.1-166 iterators_1.0.14 ## [87] beachmat_2.20.0 compiler_4.4.1 ## [89] RSpectra_0.16-2 stringi_1.8.4 ## [91] tensor_1.5 SummarizedExperiment_1.34.0 ## [93] dendextend_1.18.1 plyr_1.8.9 ## [95] crayon_1.5.3 abind_1.4-8 ## [97] gridGraphics_0.5-1 locfit_1.5-9.10 ## [99] sp_2.1-4 graphlayouts_1.2.0 ## [101] bit_4.5.0 fastmatch_1.1-4 ## [103] codetools_0.2-20 BiocSingular_1.20.0 ## [105] pec_2023.04.12 bslib_0.8.0 ## [107] GetoptLong_1.0.5 plotly_4.10.4 ## [109] mime_0.12 splines_4.4.1 ## [111] circlize_0.4.16 Rcpp_1.0.13 ## [113] fastDummies_1.7.4 sparseMatrixStats_1.16.0 ## [115] knitr_1.48 blob_1.2.4 ## [117] utf8_1.2.4 clue_0.3-65 ## [119] fs_1.6.4 listenv_0.9.1 ## [121] ggsignif_0.6.4 ggplotify_0.1.2 ## [123] Matrix_1.7-0 statmod_1.5.0 ## [125] tzdb_0.4.0 lpSolve_5.6.21 ## [127] tweenr_2.0.3 pkgconfig_2.0.3 ## [129] tools_4.4.1 cachem_1.1.0 ## [131] RSQLite_2.3.7 viridisLite_0.4.2 ## [133] DBI_1.2.3 numDeriv_2016.8-1.1 ## [135] fastmap_1.2.0 rmarkdown_2.28 ## [137] scales_1.3.0 ica_1.0-3 ## [139] Seurat_5.1.0 broom_1.0.7 ## [141] sass_0.4.9 dotCall64_1.2 ## [143] graph_1.82.0 carData_3.0-5 ## [145] RANN_2.6.2 farver_2.1.2 ## [147] tidygraph_1.3.1 scatterpie_0.2.4 ## [149] yaml_2.3.10 MatrixGenerics_1.16.0 ## [151] cli_3.6.3 stats4_4.4.1 ## [153] leiden_0.4.3.1 lifecycle_1.0.4 ## [155] uwot_0.2.2 Biobase_2.64.0 ## [157] mvtnorm_1.3-1 lava_1.8.0 ## [159] backports_1.5.0 annotate_1.82.0 ## [161] BiocParallel_1.38.0 timechange_0.3.0 ## [163] gtable_0.3.6 rjson_0.2.23 ## [165] ggridges_0.5.6 progressr_0.14.0 ## [167] parallel_4.4.1 ape_5.8 ## [169] jsonlite_1.8.9 RcppHNSW_0.6.0 ## [171] bit64_4.5.2 assertthat_0.2.1 ## [173] Rtsne_0.17 yulab.utils_0.1.7 ## [175] spatstat.utils_3.1-0 SeuratObject_5.0.2 ## [177] jquerylib_0.1.4 highr_0.11 ## [179] GOSemSim_2.30.2 survMisc_0.5.6 ## [181] spatstat.univar_3.0-1 R.utils_2.12.3 ## [183] lazyeval_0.2.2 shiny_1.9.1 ## [185] htmltools_0.5.8.1 enrichplot_1.24.4 ## [187] KMsurv_0.1-5 GO.db_3.19.1 ## [189] sctransform_0.4.1 rappdirs_0.3.3 ## [191] glue_1.8.0 timereg_2.0.6 ## [193] spam_2.11-0 httr2_1.0.5 ## [195] XVector_0.44.0 treeio_1.28.0 ## [197] gridExtra_2.3 igraph_2.1.1 ## [199] R6_2.5.1 SingleCellExperiment_1.26.0 ## [201] DESeq2_1.44.0 km.ci_0.5-6 ## [203] cluster_2.1.6 Rhdf5lib_1.26.0 ## [205] aplot_0.2.3 GenomeInfoDb_1.40.1 ## [207] DelayedArray_0.30.1 tidyselect_1.2.1 ## [209] ggforce_0.4.2 car_3.1-3 ## [211] AnnotationDbi_1.66.0 future_1.34.0 ## [213] emo_0.0.0.9000 rsvd_1.0.5 ## [215] munsell_0.5.1 KernSmooth_2.23-24 ## [217] data.table_1.16.2 htmlwidgets_1.6.4 ## [219] fgsea_1.30.0 RColorBrewer_1.1-3 ## [221] rlang_1.1.4 spatstat.sparse_3.1-0 ## [223] spatstat.explore_3.3-3 fansi_1.0.6 ## [225] timeROC_0.4 prodlim_2024.06.25 "],["rna-data-preprocessing.html", "Chapter 3 RNA Data preprocessing 3.1 Introduction 3.2 Loading packages 3.3 Gene Annotation 3.4 Download array data using GEOquery 3.5 Download RNAseq data using UCSCXenaTools 3.6 Normalization and Gene annotation 3.7 Identifying outlier samples 3.8 PCA analysis of molecular subtypes 3.9 Batch effect correction 3.10 References", " Chapter 3 RNA Data preprocessing 3.1 Introduction Transcriptomic data primarily encompasses microarray data and RNA-seq data. Microarray data are predominantly derived from platforms such as Affymetrix and Illumina, while RNA-seq data are largely generated using second-generation sequencing technologies, with third-generation sequencing becoming increasingly available. When performing TME analysis and calculating signature scores, it is essential to first annotate and normalize the gene expression matrix. The IOBR package offers a suite of functions designed to facilitate rapid preprocessing of transcriptomic data, including: count2tpm: Performs gene annotation, removes duplicate genes, and applies TPM normalization. anno_eset: Handles duplicate gene removal and gene annotation. find_outlier_samples: Identifies and removes outlier samples. iobr_pca: Visualizes batch effects and examines biological variability. remove_batcheffect: Removes batch effects and integrates multiple datasets. Streamlining Gene Annotation for Downstream Analysis Since downstream TME analysis tools and scoring functions in IOBR primarily recognize gene symbols rather than probe IDs, Ensembl IDs, or Entrez IDs, the anno_eset() function simplifies the annotation process. It enables efficient annotation of microarray data (e.g., Affymetrix and Illumina) and RNA-seq data (e.g., Ensembl and Entrez IDs), converting these identifiers into the more familiar gene symbols. Improving Inter-Sample Comparability Through Normalization In RNA-seq data analysis, TPM (transcripts per million) is a widely adopted normalization method that converts raw read counts into relative abundance or expression levels. TPM normalization accounts not only for the read count of each gene but also for the gene length, providing a more accurate comparison of expression levels across genes. This method effectively addresses the bias introduced by varying gene lengths, improving the comparability of expression levels between different genes. IOBR offers the count2tpm() function for TPM conversion of RNA-seq count data. For microarray data, which is typically pre-normalized, packages such as affy and limma are commonly used for preprocessing. However, due to the higher cost and relatively limited information content of microarrays, RNA-seq has become the dominant technology in transcriptomic studies. 3.2 Loading packages Load the IOBR package in your R session after the installation is complete: library(IOBR) library(tidyverse) library(clusterProfiler) 3.3 Gene Annotation Annotation of genes in the expression matrix and removal of duplicate genes. # Load the annotation file `anno_hug133plus2` in IOBR. head(anno_hug133plus2) ## # A tibble: 6 × 2 ## probe_id symbol ## &lt;fct&gt; &lt;fct&gt; ## 1 1007_s_at MIR4640 ## 2 1053_at RFC2 ## 3 117_at HSPA6 ## 4 121_at PAX8 ## 5 1255_g_at GUCA1A ## 6 1294_at MIR5193 # Load the annotation file `anno_grch38` in IOBR. head(anno_grch38) ## id eff_length gc entrez symbol chr start end ## 1 ENSG00000000003 4536 0.3992504 7105 TSPAN6 X 100627109 100639991 ## 2 ENSG00000000005 1476 0.4241192 64102 TNMD X 100584802 100599885 ## 3 ENSG00000000419 9276 0.4252911 8813 DPM1 20 50934867 50958555 ## 4 ENSG00000000457 6883 0.4117391 57147 SCYL3 1 169849631 169894267 ## 5 ENSG00000000460 5970 0.4298157 55732 C1orf112 1 169662007 169854080 ## 6 ENSG00000000938 3382 0.5644589 2268 FGR 1 27612064 27635277 ## strand biotype ## 1 -1 protein_coding ## 2 1 protein_coding ## 3 -1 protein_coding ## 4 -1 protein_coding ## 5 1 protein_coding ## 6 -1 protein_coding ## description ## 1 tetraspanin 6 [Source:HGNC Symbol;Acc:HGNC:11858] ## 2 tenomodulin [Source:HGNC Symbol;Acc:HGNC:17757] ## 3 dolichyl-phosphate mannosyltransferase polypeptide 1, catalytic subunit [Source:HGNC Symbol;Acc:HGNC:3005] ## 4 SCY1-like, kinase-like 3 [Source:HGNC Symbol;Acc:HGNC:19285] ## 5 chromosome 1 open reading frame 112 [Source:HGNC Symbol;Acc:HGNC:25565] ## 6 FGR proto-oncogene, Src family tyrosine kinase [Source:HGNC Symbol;Acc:HGNC:3697] # Load the annotation file `anno_gc_vm32` in IOBR for mouse RNAseq data head(anno_gc_vm32) ## id eff_length gc symbol mgi_id gene_type ## 1 ENSMUSG00000000001 3262 0.4350092 Gnai3 MGI:95773 protein_coding ## 2 ENSMUSG00000000003 902 0.3481153 Pbsn MGI:1860484 protein_coding ## 3 ENSMUSG00000000028 3506 0.4962921 Cdc45 MGI:1338073 protein_coding ## 4 ENSMUSG00000000031 2625 0.5588571 H19 MGI:95891 lncRNA ## 5 ENSMUSG00000000037 6397 0.4377052 Scml2 MGI:1340042 protein_coding ## 6 ENSMUSG00000000049 1594 0.5050188 Apoh MGI:88058 protein_coding ## start end transcript_id ont ## 1 108014596 108053462 &lt;NA&gt; &lt;NA&gt; ## 2 76881507 76897229 &lt;NA&gt; &lt;NA&gt; ## 3 18599197 18630737 &lt;NA&gt; &lt;NA&gt; ## 4 142129262 142131886 &lt;NA&gt; &lt;NA&gt; ## 5 159865521 160041209 &lt;NA&gt; &lt;NA&gt; ## 6 108234180 108305222 &lt;NA&gt; &lt;NA&gt; 3.4 Download array data using GEOquery Obtaining data set from GEO Gastric cancer: GSE62254 using GEOquery R package. if (!requireNamespace(&quot;GEOquery&quot;, quietly = TRUE)) BiocManager::install(&quot;GEOquery&quot;) library(&quot;GEOquery&quot;) # NOTE: This process may take a few minutes which depends on the internet connection speed. Please wait for its completion. eset_geo&lt;-getGEO(GEO = &quot;GSE62254&quot;, getGPL = F, destdir = &quot;./&quot;) eset &lt;-eset_geo[[1]] eset &lt;-exprs(eset) eset[1:5,1:5] ## GSM1523727 GSM1523728 GSM1523729 GSM1523744 GSM1523745 ## 1007_s_at 3.2176645 3.0624323 3.0279131 2.921683 2.8456013 ## 1053_at 2.4050109 2.4394879 2.2442708 2.345916 2.4328582 ## 117_at 1.4933412 1.8067380 1.5959665 1.839822 1.8326058 ## 121_at 2.1965561 2.2812181 2.1865556 2.258599 2.1874363 ## 1255_g_at 0.8698382 0.9502466 0.8125414 1.012860 0.9441993 3.4.1 For Array data: HGU133PLUS-2 (Affaymetrix) # Conduct gene annotation using `anno_hug133plus2` file; If identical gene symbols exists, these genes would be ordered by the mean expression levels. The gene symbol with highest mean expression level is selected and remove others. eset&lt;-anno_eset(eset = eset, annotation = anno_hug133plus2, symbol = &quot;symbol&quot;, probe = &quot;probe_id&quot;, method = &quot;mean&quot;) eset[1:5, 1:3] ## GSM1523727 GSM1523728 GSM1523729 ## SH3KBP1 4.327974 4.316195 4.351425 ## RPL41 4.246149 4.246808 4.257940 ## EEF1A1 4.293762 4.291038 4.262199 ## COX2 4.250288 4.283714 4.270508 ## LOC101928826 4.219303 4.219670 4.213252 3.5 Download RNAseq data using UCSCXenaTools In this section, we are going to download RNA-seq data from The Cancer Genome Atlas (TCGA) for applying the downstream analysis workflow of IOBR. Particularly, we will use the convenient R package UCSCXenaTools to query and download the RNA-seq data of TCGA stomach cancer cohort. Use the following code to check and install UCSCXenaTools. if (!requireNamespace(&quot;UCSCXenaTools&quot;, quietly = TRUE)) BiocManager::install(&quot;ropensci/UCSCXenaTools&quot;) UCSCXenaTools provides an R interface to access public cancer datasets from UCSC Xena data hubs, including multiple pan-cancer studies like TCGA and PCAWG. You can directly access information of all datasets in R. library(UCSCXenaTools) ## Warning: package &#39;UCSCXenaTools&#39; was built under R version 4.4.2 ## ========================================================================================= ## UCSCXenaTools version 1.4.8 ## Project URL: https://github.com/ropensci/UCSCXenaTools ## Usages: https://cran.r-project.org/web/packages/UCSCXenaTools/vignettes/USCSXenaTools.html ## ## If you use it in published research, please cite: ## Wang et al., (2019). The UCSCXenaTools R package: a toolkit for accessing genomics data ## from UCSC Xena platform, from cancer multi-omics to single-cell RNA-seq. ## Journal of Open Source Software, 4(40), 1627, https://doi.org/10.21105/joss.01627 ## ========================================================================================= ## --Enjoy it-- ## ## Attaching package: &#39;UCSCXenaTools&#39; ## The following object is masked from &#39;package:Biobase&#39;: ## ## samples data(XenaData) head(XenaData) ## # A tibble: 6 × 17 ## XenaHosts XenaHostNames XenaCohorts XenaDatasets SampleCount DataSubtype Label ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; ## 1 https://… publicHub Breast Can… ucsfNeve_pu… 51 gene expre… Neve… ## 2 https://… publicHub Breast Can… ucsfNeve_pu… 57 phenotype Phen… ## 3 https://… publicHub Glioma (Ko… kotliarov20… 194 copy number Kotl… ## 4 https://… publicHub Glioma (Ko… kotliarov20… 194 phenotype Phen… ## 5 https://… publicHub Lung Cance… weir2007_pu… 383 copy number CGH ## 6 https://… publicHub Lung Cance… weir2007_pu… 383 phenotype Phen… ## # ℹ 10 more variables: Type &lt;chr&gt;, AnatomicalOrigin &lt;chr&gt;, SampleType &lt;chr&gt;, ## # Tags &lt;chr&gt;, ProbeMap &lt;chr&gt;, LongTitle &lt;chr&gt;, Citation &lt;chr&gt;, Version &lt;chr&gt;, ## # Unit &lt;chr&gt;, Platform &lt;chr&gt; # You can use view(XenaData) to find your dataset of interest UCSCXenaTools provides workflow functions to generate object, filter, query, download and load the dataset(s) of interest. The following code show a standardized UCSCXenaTools data workflow to query the data from UCSC Xena data hub and load it into R. library(UCSCXenaTools) # NOTE: This process may take a few minutes which depends on the internet connection speed. Please wait for its completion. eset_stad&lt;-XenaGenerate(subset = XenaCohorts ==&quot;GDC TCGA Stomach Cancer (STAD)&quot;) %&gt;% XenaFilter(filterDatasets = &quot;TCGA-STAD.star_counts.tsv&quot;) %&gt;% XenaQuery() %&gt;% XenaDownload() %&gt;% XenaPrepare() eset_stad[1:5, 1:3] As the metadata of this dataset have been stored in the XeneData data.frame. You can easily recheck the dataset with code. dplyr::filter(XenaData, XenaDatasets == &quot;TCGA-STAD.star_counts.tsv&quot;) |&gt; as.list() 3.6 Normalization and Gene annotation Transform gene expression matrix into TPM format, and conduct subsequent annotation. # Remove Ensembl IDs with the suffix &#39;_PAR_Y&#39;. eset_stad&lt;- eset_stad[!grepl(&quot;_PAR_Y$&quot;, eset_stad$Ensembl_ID), ] # Remove the version numbers in Ensembl ID. eset_stad$Ensembl_ID&lt;-substring(eset_stad$Ensembl_ID, 1, 15) eset_stad&lt;-column_to_rownames(eset_stad, var = &quot;Ensembl_ID&quot;) # Revert back to original format because the data from UCSC was log2(x+1)transformed. eset_stad&lt;-(2^eset_stad)+1 eset_stad&lt;-count2tpm(countMat = eset_stad, idType = &quot;Ensembl&quot;, org=&quot;hsa&quot;, source = &quot;local&quot; ) eset_stad[1:5,1:5] 3.7 Identifying outlier samples Take ACRG microarray data for example res &lt;- find_outlier_samples(eset = eset, project = &quot;ACRG&quot;, show_plot = TRUE) ## [1] &quot;GSM1523817&quot; &quot;GSM1523858&quot; &quot;GSM1523984&quot; &quot;GSM1523988&quot; &quot;GSM1524030&quot; Removing potential outlier samples eset1 &lt;- eset[, !colnames(eset)%in%res] 3.8 PCA analysis of molecular subtypes data(&quot;pdata_acrg&quot;, package = &quot;IOBR&quot;) res&lt;- iobr_pca(data = eset1, is.matrix = TRUE, scale = TRUE, is.log = FALSE, pdata = pdata_acrg, id_pdata = &quot;ID&quot;, group = &quot;Subtype&quot;, geom.ind = &quot;point&quot;, cols = &quot;normal&quot;, palette = &quot;jama&quot;, repel = FALSE, ncp = 5, axes = c(1, 2), addEllipses = TRUE) ## ## CIN EBV EMT GS MSI MSS/TP53- MSS/TP53+ ## 0 0 42 0 68 106 79 ## [1] &quot;&gt;&gt;== colors for group: &quot; res 3.9 Batch effect correction 3.9.1 For microarray data Obtaining another data set from GEO Gastric cancer: GSE57303 using GEOquery R package. # NOTE: This process may take a few minutes which depends on the internet connection speed. Please wait for its completion. eset_geo&lt;-getGEO(GEO = &quot;GSE57303&quot;, getGPL = F, destdir = &quot;./&quot;) eset2 &lt;-eset_geo[[1]] eset2 &lt;-exprs(eset2) eset2[1:5,1:5] ## GSM1379261 GSM1379262 GSM1379263 GSM1379264 GSM1379265 ## 1007_s_at 8.34746 9.67994 8.62643 8.59301 8.63046 ## 1053_at 5.07972 4.46377 5.29685 5.78983 4.33359 ## 117_at 5.65558 4.48732 4.21615 5.47984 5.20816 ## 121_at 5.95123 7.09056 6.19903 5.89872 5.91323 ## 1255_g_at 1.66923 1.98758 1.73083 1.56687 1.63332 Annotation of genes in the expression matrix and removal of duplicate genes. eset2&lt;-anno_eset(eset = eset2, annotation = anno_hug133plus2, symbol = &quot;symbol&quot;, probe = &quot;probe_id&quot;, method = &quot;mean&quot;) eset2[1:5, 1:5] ## GSM1379261 GSM1379262 GSM1379263 GSM1379264 GSM1379265 ## ND4 13.1695 13.1804 13.0600 12.4544 13.0457 ## ATP6 13.1433 13.0814 13.0502 12.4831 13.1168 ## SH3KBP1 12.9390 13.1620 12.9773 12.8745 13.1169 ## COX2 13.0184 13.0489 12.8621 12.7489 12.9732 ## RPL41 13.0201 12.6034 12.7929 13.0153 12.9404 eset_com &lt;- remove_batcheffect( eset1 = eset1, eset2 = eset2, eset3 = NULL, id_type = &quot;symbol&quot;, data_type = &quot;array&quot;, cols = &quot;normal&quot;, palette = &quot;jama&quot;, log2 = TRUE, check_eset = TRUE, adjust_eset = TRUE, repel = FALSE, path = &quot;result&quot;) ## ## eset1 eset2 ## 295 70 ## [1] &quot;&gt;&gt;== colors for group: &quot; ## ## eset1 eset2 ## 295 70 ## [1] &quot;&gt;&gt;== colors for group: &quot; dim(eset_com) ## [1] 21752 365 3.9.2 For RNAseq count data data(&quot;eset_stad&quot;, package = &quot;IOBR&quot;) head(eset_stad) ## TCGA-BR-6455 TCGA-BR-7196 TCGA-BR-8371 TCGA-BR-8380 ## ENSG00000000003 8006 2114 767 1556 ## ENSG00000000005 1 0 5 5 ## ENSG00000000419 3831 2600 1729 1760 ## ENSG00000000457 1126 745 1040 1260 ## ENSG00000000460 857 463 231 432 ## ENSG00000000938 758 1126 557 557 ## TCGA-BR-8592 TCGA-BR-8686 TCGA-BR-A4IV TCGA-BR-A4J4 ## ENSG00000000003 2806 2923 1524 7208 ## ENSG00000000005 60 1 22 2 ## ENSG00000000419 2273 1934 2838 4418 ## ENSG00000000457 1814 707 1683 1335 ## ENSG00000000460 635 323 270 423 ## ENSG00000000938 828 666 760 597 ## TCGA-BR-A4J9 TCGA-FP-7916 ## ENSG00000000003 711 2747 ## ENSG00000000005 0 3 ## ENSG00000000419 2426 2824 ## ENSG00000000457 1590 1672 ## ENSG00000000460 276 773 ## ENSG00000000938 370 688 data(&quot;eset_blca&quot;, package = &quot;IOBR&quot;) head(eset_blca) ## TCGA-2F-A9KO TCGA-2F-A9KP TCGA-2F-A9KQ TCGA-2F-A9KR ## ENSG00000000003 6092 11652 5426 4383 ## ENSG00000000005 0 4 1 1 ## ENSG00000000419 3072 2656 1983 2061 ## ENSG00000000457 1302 984 1134 1092 ## ENSG00000000460 779 924 421 386 ## ENSG00000000938 436 116 312 590 ## TCGA-2F-A9KT ## ENSG00000000003 3334 ## ENSG00000000005 0 ## ENSG00000000419 2930 ## ENSG00000000457 496 ## ENSG00000000460 318 ## ENSG00000000938 362 eset_com &lt;- remove_batcheffect(eset_stad, eset_blca, id_type = &quot;ensembl&quot;, data_type = &quot;count&quot;) ## Found 2 batches ## Using null model in ComBat-seq. ## Adjusting for 0 covariate(s) or covariate level(s) ## Estimating dispersions ## Fitting the GLM model ## Shrinkage off - using GLM estimates for parameters ## Adjusting the data ## Warning in count2tpm(countMat = combined.expr.combat, idType = id_type, : ## &gt;&gt;&gt;--- Omit 1263 genes of which length is not available ! ## ## eset1 eset2 ## 10 5 ## [1] &quot;&gt;&gt;== colors for group: &quot; ## ## eset1 eset2 ## 10 5 ## [1] &quot;&gt;&gt;== colors for group: &quot; ## ## eset1 eset2 ## 10 5 ## [1] &quot;&gt;&gt;== colors for group: &quot; # The returned matrix is the count matrix after removing the batches. head(eset_com) ## TCGA-BR-6455 TCGA-BR-7196 TCGA-BR-8371 TCGA-BR-8380 ## ENSG00000000003 10264 3536 1710 2964 ## ENSG00000000005 1 0 4 5 ## ENSG00000000419 4500 3099 2111 2167 ## ENSG00000000457 1203 707 1106 1353 ## ENSG00000000460 1059 590 310 560 ## ENSG00000000938 731 1202 507 485 ## TCGA-BR-8592 TCGA-BR-8686 TCGA-BR-A4IV TCGA-BR-A4J4 ## ENSG00000000003 4761 3964 3115 9565 ## ENSG00000000005 33 1 14 3 ## ENSG00000000419 2782 2270 3444 5176 ## ENSG00000000457 2089 817 1845 1469 ## ENSG00000000460 810 405 368 548 ## ENSG00000000938 769 723 677 532 ## TCGA-BR-A4J9 TCGA-FP-7916 TCGA-2F-A9KO TCGA-2F-A9KP ## ENSG00000000003 1739 4371 2812 6796 ## ENSG00000000005 0 3 0 10 ## ENSG00000000419 2943 3362 2189 1849 ## ENSG00000000457 1804 2044 994 817 ## ENSG00000000460 371 959 495 584 ## ENSG00000000938 281 654 456 156 ## TCGA-2F-A9KQ TCGA-2F-A9KR TCGA-2F-A9KT ## ENSG00000000003 1971 1429 1057 ## ENSG00000000005 1 1 0 ## ENSG00000000419 1355 1420 2094 ## ENSG00000000457 916 876 438 ## ENSG00000000460 251 230 190 ## ENSG00000000938 353 604 383 3.10 References Wang et al., (2019). The UCSCXenaTools R package: a toolkit for accessing genomics data from UCSC Xena platform, from cancer multi-omics to single-cell RNA-seq. Journal of Open Source Software, 4(40), 1627, https://doi.org/10.21105/joss.01627 Zhang et al., ComBat-seq: batch effect adjustment for RNA-seq count data, NAR Genomics and Bioinformatics, Volume 2, Issue 3, September 2020, lqaa078, https://doi.org/10.1093/nargab/lqaa078 Leek, J. T., et al., (2012). The sva package for removing batch effects and other unwanted variation in high-throughput experiments. Bioinformatics, 28(6), 882-883. "],["signature-score-calculation.html", "Chapter 4 Signature Score Calculation 4.1 Loading packages 4.2 Downloading data for example 4.3 Signature score estimation 4.4 Estimation of signature using PCA method 4.5 Estimated using the ssGSEA methodology 4.6 Calculated using the z-score function. 4.7 Calculated using all three methods at the same time 4.8 Classification of signatures 4.9 How to customise the signature gene list for calculate_signature_score 4.10 How to export gene signature 4.11 References", " Chapter 4 Signature Score Calculation The calculate_sig_score function integrates three gene set scoring methods: ssGSEA, PCA, and z-score.By inputting preprocessed transcriptomic data, the function can batch-calculate signature scores for each sample. This streamlined approach enables efficient and flexible scoring of gene signatures, supporting diverse research needs in transcriptomic data analysis. 4.1 Loading packages Load the IOBR package in your R session after the installation is complete: library(IOBR) library(survminer) library(tidyverse) 4.2 Downloading data for example Obtaining data set from GEO Gastric cancer: GSE62254 using GEOquery R package. if (!requireNamespace(&quot;GEOquery&quot;, quietly = TRUE)) BiocManager::install(&quot;GEOquery&quot;) library(&quot;GEOquery&quot;) # NOTE: This process may take a few minutes which depends on the internet connection speed. Please wait for its completion. eset_geo &lt;- getGEO(GEO = &quot;GSE62254&quot;, getGPL = F, destdir = &quot;./&quot;) eset &lt;-eset_geo[[1]] eset &lt;-exprs(eset) eset[1:5,1:5] ## GSM1523727 GSM1523728 GSM1523729 GSM1523744 GSM1523745 ## 1007_s_at 3.2176645 3.0624323 3.0279131 2.921683 2.8456013 ## 1053_at 2.4050109 2.4394879 2.2442708 2.345916 2.4328582 ## 117_at 1.4933412 1.8067380 1.5959665 1.839822 1.8326058 ## 121_at 2.1965561 2.2812181 2.1865556 2.258599 2.1874363 ## 1255_g_at 0.8698382 0.9502466 0.8125414 1.012860 0.9441993 Annotation of genes in the expression matrix and removal of duplicate genes. # Load the annotation file `anno_hug133plus2` in IOBR. head(anno_hug133plus2) ## # A tibble: 6 × 2 ## probe_id symbol ## &lt;fct&gt; &lt;fct&gt; ## 1 1007_s_at MIR4640 ## 2 1053_at RFC2 ## 3 117_at HSPA6 ## 4 121_at PAX8 ## 5 1255_g_at GUCA1A ## 6 1294_at MIR5193 # Conduct gene annotation using `anno_hug133plus2` file; If identical gene symbols exists, these genes would be ordered by the mean expression levels. The gene symbol with highest mean expression level is selected and remove others. eset&lt;-anno_eset(eset = eset, annotation = anno_hug133plus2, symbol = &quot;symbol&quot;, probe = &quot;probe_id&quot;, method = &quot;mean&quot;) eset[1:5, 1:3] ## GSM1523727 GSM1523728 GSM1523729 ## SH3KBP1 4.327974 4.316195 4.351425 ## RPL41 4.246149 4.246808 4.257940 ## EEF1A1 4.293762 4.291038 4.262199 ## COX2 4.250288 4.283714 4.270508 ## LOC101928826 4.219303 4.219670 4.213252 4.3 Signature score estimation 4.3.1 Signature collection of IOBR 322 reported gene signatures are collected in IOBR, including those related to the TME, metabolism, gene signatures derived from single-cell RNA-seq data, and others. The extensive signature collection is categorized into three distinct groups: TME-associated, tumour-metabolism, and tumour-intrinsic signatures. # Return available parameter options of signature estimation. signature_score_calculation_methods ## PCA ssGSEA z-score Integration ## &quot;pca&quot; &quot;ssgsea&quot; &quot;zscore&quot; &quot;integration&quot; #TME associated signatures names(signature_tme)[1:20] ## [1] &quot;CD_8_T_effector&quot; &quot;DDR&quot; ## [3] &quot;APM&quot; &quot;Immune_Checkpoint&quot; ## [5] &quot;CellCycle_Reg&quot; &quot;Pan_F_TBRs&quot; ## [7] &quot;Histones&quot; &quot;EMT1&quot; ## [9] &quot;EMT2&quot; &quot;EMT3&quot; ## [11] &quot;WNT_target&quot; &quot;FGFR3_related&quot; ## [13] &quot;Cell_cycle&quot; &quot;Mismatch_Repair&quot; ## [15] &quot;Homologous_recombination&quot; &quot;Nucleotide_excision_repair&quot; ## [17] &quot;DNA_replication&quot; &quot;Base_excision_repair&quot; ## [19] &quot;TMEscoreA_CIR&quot; &quot;TMEscoreB_CIR&quot; #Metabolism related signatures names(signature_metabolism)[1:20] ## [1] &quot;Cardiolipin_Metabolism&quot; ## [2] &quot;Cardiolipin_Biosynthesis&quot; ## [3] &quot;Cholesterol_Biosynthesis&quot; ## [4] &quot;Citric_Acid_Cycle&quot; ## [5] &quot;Cyclooxygenase_Arachidonic_Acid_Metabolism&quot; ## [6] &quot;Prostaglandin_Biosynthesis&quot; ## [7] &quot;Purine_Biosynthesis&quot; ## [8] &quot;Pyrimidine_Biosynthesis&quot; ## [9] &quot;Dopamine_Biosynthesis&quot; ## [10] &quot;Epinephrine_Biosynthesis&quot; ## [11] &quot;Norepinephrine_Biosynthesis&quot; ## [12] &quot;Fatty_Acid_Degradation&quot; ## [13] &quot;Fatty_Acid_Elongation&quot; ## [14] &quot;Fatty_Acid_Biosynthesis&quot; ## [15] &quot;Folate_One_Carbon_Metabolism&quot; ## [16] &quot;Folate_biosynthesis&quot; ## [17] &quot;Gluconeogenesis&quot; ## [18] &quot;Glycolysis&quot; ## [19] &quot;Glycogen_Biosynthesis&quot; ## [20] &quot;Glycogen_Degradation&quot; Signatures associated with basic biomedical research, such as m6A, TLS, ferroptosis and exosomes. names(signature_tumor) ## [1] &quot;Nature_metabolism_Hypoxia&quot; ## [2] &quot;Winter_hypoxia_signature&quot; ## [3] &quot;Hu_hypoxia_signature&quot; ## [4] &quot;Molecular_Cancer_m6A&quot; ## [5] &quot;MT_exosome&quot; ## [6] &quot;SR_exosome&quot; ## [7] &quot;Positive_regulation_of_exosomal_secretion&quot; ## [8] &quot;Negative_regulation_of_exosomal_secretion&quot; ## [9] &quot;Exosomal_secretion&quot; ## [10] &quot;Exosome_assembly&quot; ## [11] &quot;Extracellular_vesicle_biogenesis&quot; ## [12] &quot;MC_Review_Exosome1&quot; ## [13] &quot;MC_Review_Exosome2&quot; ## [14] &quot;CMLS_Review_Exosome&quot; ## [15] &quot;Ferroptosis&quot; ## [16] &quot;EV_Cell_2020&quot; signature_collection including all aforementioned signatures names(signature_collection)[1:20] ## [1] &quot;CD_8_T_effector&quot; &quot;DDR&quot; ## [3] &quot;APM&quot; &quot;Immune_Checkpoint&quot; ## [5] &quot;CellCycle_Reg&quot; &quot;Pan_F_TBRs&quot; ## [7] &quot;Histones&quot; &quot;EMT1&quot; ## [9] &quot;EMT2&quot; &quot;EMT3&quot; ## [11] &quot;WNT_target&quot; &quot;FGFR3_related&quot; ## [13] &quot;Cell_cycle&quot; &quot;Mismatch_Repair&quot; ## [15] &quot;Homologous_recombination&quot; &quot;Nucleotide_excision_repair&quot; ## [17] &quot;DNA_replication&quot; &quot;Base_excision_repair&quot; ## [19] &quot;TMEscoreA_CIR&quot; &quot;TMEscoreB_CIR&quot; #citation of signatures signature_collection_citation[1:20, ] ## # A tibble: 20 × 6 ## Signatures `Published year` Journal Title PMID DOI ## &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 CD_8_T_effector 2018 Nature TGFβ… 2944… 10.1… ## 2 DDR 2018 Nature TGFβ… 2944… 10.1… ## 3 APM 2018 Nature TGFβ… 2944… 10.1… ## 4 Immune_Checkpoint 2018 Nature TGFβ… 2944… 10.1… ## 5 CellCycle_Reg 2018 Nature TGFβ… 2944… 10.1… ## 6 Pan_F_TBRs 2018 Nature TGFβ… 2944… 10.1… ## 7 Histones 2018 Nature TGFβ… 2944… 10.1… ## 8 EMT1 2018 Nature TGFβ… 2944… 10.1… ## 9 EMT2 2018 Nature TGFβ… 2944… 10.1… ## 10 EMT3 2018 Nature TGFβ… 2944… 10.1… ## 11 WNT_target 2018 Nature TGFβ… 2944… 10.1… ## 12 FGFR3_related 2018 Nature TGFβ… 2944… 10.1… ## 13 Cell_cycle 2018 Nature TGFβ… 2944… 10.1… ## 14 Mismatch_Repair 2018 Nature TGFβ… 2944… 10.1… ## 15 Homologous_recombination 2018 Nature TGFβ… 2944… 10.1… ## 16 Nucleotide_excision_repair 2018 Nature TGFβ… 2944… 10.1… ## 17 DNA_replication 2018 Nature TGFβ… 2944… 10.1… ## 18 Base_excision_repair 2018 Nature TGFβ… 2944… 10.1… ## 19 TMEscoreA_CIR 2019 Cancer Immunol… Tumo… 3084… 10.1… ## 20 TMEscoreB_CIR 2019 Cancer Immunol… Tumo… 3084… 10.1… The evaluation of signature scores involved three methodologies: Single-sample Gene Set Enrichment Analysis (ssGSEA), Principal Component Analysis (PCA), and Z-score. 4.4 Estimation of signature using PCA method The PCA method is ideal for gene sets with co-expression. Heatmaps and correlation matrices can be used to determine if co-expression is present in the applicable gene set. sig_tme&lt;-calculate_sig_score(pdata = NULL, eset = eset, signature = signature_collection, method = &quot;pca&quot;, mini_gene_count = 2) sig_tme &lt;- t(column_to_rownames(sig_tme, var = &quot;ID&quot;)) sig_tme[1:5, 1:3] ## GSM1523727 GSM1523728 GSM1523729 ## CD_8_T_effector -2.5513794 0.7789141 -2.1770675 ## DDR -0.8747614 0.7425162 -1.3272054 ## APM 1.1098368 2.1988688 -0.9516419 ## Immune_Checkpoint -2.3701787 0.9455120 -1.4844104 ## CellCycle_Reg 0.1063358 0.7583302 -0.3649795 4.5 Estimated using the ssGSEA methodology This method is appropriate for gene sets that contain a large number of genes (&gt; 30 genes), such as those of GO, KEGG, REACTOME gene sets. Figure 4.1: Gene sets of MSigDb sig_tme&lt;-calculate_sig_score(pdata = NULL, eset = eset, signature = go_bp, method = &quot;ssgsea&quot;, mini_gene_count = 2) 4.6 Calculated using the z-score function. sig_tme&lt;-calculate_sig_score(pdata = NULL, eset = eset, signature = signature_collection, method = &quot;zscore&quot;, mini_gene_count = 2) 4.7 Calculated using all three methods at the same time sig_tme&lt;-calculate_sig_score(pdata = NULL, eset = eset, signature = signature_collection, method = &quot;integration&quot;, mini_gene_count = 2) The same signature in this case will be scored using all three methods simultaneously. colnames(sig_tme)[grep(colnames(sig_tme), pattern = &quot;CD_8_T_effector&quot;)] The select_method() function allows the user to extract data using various methods. sig_tme_pca &lt;- select_method(data = sig_tme, method = &quot;pca&quot;) colnames(sig_tme_pca)[grep(colnames(sig_tme_pca), pattern = &quot;CD_8_T_effector&quot;)] 4.8 Classification of signatures As more signatures related to the tumour microenvironment were collected in IOBR, and we may continue to add gene signatures related to the tumour microenvironment in the future, we have made a basic classification of these signatures by combining them with our analysis experience. Users can compare the signatures in the same group during the analysis process to improve the reliability and consistency of the conclusions. sig_group[1:8] 4.9 How to customise the signature gene list for calculate_signature_score To overcome the limitations of fixed signatures in IOBR, users are now allowed to create customized gene signature lists for the calculate_sig_score function, enabling more flexible transcriptomic data analysis tailored to specific research goals. 4.9.1 Method-1: Use excel for storage and construction Users can collect gene signatures using either an Excel or CSV file. The format should have the name of the signature in the first row, followed by the genes contained in each signature from the second row onwards. Once imported, the function format_signature can be used to transform the data into a gene list of signatures required for calculate_signature_score. To import the file into R, users can use the functions read.csv or read_excel. It is important to note here that the user needs to use the longest signature as a criterion and then replace all the vacant grids using NA, otherwise an error may be reported when reading into R. Here we provide a sample data sig_excel, please refer to this format to construct the required csv or excel files. data(&quot;sig_excel&quot;, package = &quot;IOBR&quot;) sig &lt;- format_signatures(sig_excel) print(sig[1:5]) ## $Tcell_co_inhibitors ## [1] &quot;ADORA2A&quot; &quot;BTLA&quot; &quot;BTN2A2&quot; &quot;BTN3A1&quot; &quot;BTN3A2&quot; &quot;BTNL2&quot; ## [7] &quot;C10orf54&quot; &quot;CSF1R&quot; &quot;HAVCR2&quot; &quot;IDO1&quot; &quot;IL10&quot; &quot;IL10RB&quot; ## [13] &quot;KDR&quot; &quot;KIR2DL1&quot; &quot;SLAMF7&quot; &quot;TGFB1&quot; &quot;TIGIT&quot; &quot;VRCN1&quot; ## [19] &quot;VTCN1&quot; &quot;CD247&quot; &quot;CTLA4&quot; &quot;CD160&quot; &quot;CD244&quot; &quot;CD274&quot; ## [25] &quot;CD276&quot; &quot;CD48&quot; &quot;CD96&quot; &quot;KIR2DL2&quot; &quot;KIR2DL3&quot; &quot;LAG3&quot; ## [31] &quot;LAIR1&quot; &quot;LGALS9&quot; &quot;PVRL2&quot; &quot;PDCD1&quot; &quot;PDCD1LG2&quot; ## ## $Tcell_co_stimuiations ## [1] &quot;BTNL8&quot; &quot;CD226&quot; &quot;CD27&quot; &quot;CD28&quot; &quot;CD40&quot; &quot;CD58&quot; ## [7] &quot;CD70&quot; &quot;SLAMF1&quot; &quot;TMIGD2&quot; &quot;TNFRSF13B&quot; &quot;TNFRSF13C&quot; &quot;TNFRSF14&quot; ## [13] &quot;TNFRSF4&quot; &quot;TNFRSF8&quot; &quot;TNFSF8&quot; &quot;TNFSF9&quot; &quot;ENTPD1&quot; &quot;NT5E&quot; ## [19] &quot;ICOS&quot; &quot;TNFSF4&quot; &quot;TNFSF15&quot; &quot;CD80&quot; &quot;CD86&quot; &quot;EGFR&quot; ## [25] &quot;HAVCR1&quot; &quot;TNFSF18&quot; &quot;ICOSLG&quot; &quot;TNFSF13B&quot; &quot;TNFRSF9&quot; &quot;TNFSF13&quot; ## ## $Tcell_function ## [1] &quot;CD3E&quot; &quot;CD4&quot; &quot;CD8B&quot; &quot;FOXP3&quot; &quot;GZMB&quot; &quot;PRF1&quot; &quot;TBX21&quot; &quot;IL2RA&quot; &quot;IKZF2&quot; ## ## $Tcell_checkpoint ## [1] &quot;CD274&quot; &quot;CTLA4&quot; &quot;LAG3&quot; &quot;TIM3&quot; &quot;TNFRSF9&quot; &quot;TIGIT&quot; ## [7] &quot;CD226&quot; &quot;CD7&quot; &quot;GZMB&quot; &quot;PRF1&quot; &quot;TNFRSF18&quot; &quot;TNFRSF4&quot; ## [13] &quot;HAVCR2&quot; &quot;NLG1&quot; &quot;CD4&quot; &quot;CD8A&quot; &quot;CD8B&quot; &quot;FOXP3&quot; ## [19] &quot;IL2&quot; &quot;CXCL8&quot; &quot;PDCD1&quot; &quot;IFNG&quot; ## ## $Teffctore_score ## [1] &quot;CD8A&quot; &quot;CXCL10&quot; &quot;CXCL9&quot; &quot;GZMA&quot; &quot;GZMB&quot; &quot;IFNG&quot; &quot;PRF1&quot; &quot;TBX21&quot; For simple structures or when the number of signatures to be added is relatively small, the following two methods can also be used. 4.9.2 Method-2: Build the list structure directly sig &lt;- list(&quot;CD8&quot; = c(&quot;CD8A&quot;, &quot;CXCL10&quot;, &quot;CXCL9&quot;, &quot;GZMA&quot;, &quot;GZMB&quot;, &quot;IFNG&quot;, &quot;PRF1&quot;, &quot;TBX21&quot;), &quot;ICB&quot; = c(&quot;CD274&quot;, &quot;PDCD1LG2&quot;, &quot;CTLA4&quot;, &quot;PDCD1&quot;, &quot;LAG3&quot;, &quot;HAVCR2&quot;, &quot;TIGIT&quot; )) sig ## $CD8 ## [1] &quot;CD8A&quot; &quot;CXCL10&quot; &quot;CXCL9&quot; &quot;GZMA&quot; &quot;GZMB&quot; &quot;IFNG&quot; &quot;PRF1&quot; &quot;TBX21&quot; ## ## $ICB ## [1] &quot;CD274&quot; &quot;PDCD1LG2&quot; &quot;CTLA4&quot; &quot;PDCD1&quot; &quot;LAG3&quot; &quot;HAVCR2&quot; &quot;TIGIT&quot; 4.9.3 Method-3: Add the new signature to the existing gene list sig&lt;- signature_tumor sig$CD8 &lt;- c(&quot;CD8A&quot;, &quot;CXCL10&quot;, &quot;CXCL9&quot;, &quot;GZMA&quot;, &quot;GZMB&quot;, &quot;IFNG&quot;, &quot;PRF1&quot;, &quot;TBX21&quot;) sig ## $Nature_metabolism_Hypoxia ## [1] &quot;ACOT7&quot; &quot;SLC2A1&quot; &quot;ALDOA&quot; &quot;CDKN3&quot; &quot;ENO1&quot; &quot;LDHA&quot; &quot;MIF&quot; &quot;MRPS17&quot; ## [9] &quot;NDRG1&quot; &quot;P4HA1&quot; &quot;PGAM1&quot; &quot;TPI1&quot; &quot;TUBB6&quot; &quot;VEGFA&quot; &quot;ADM&quot; ## ## $Winter_hypoxia_signature ## [1] &quot;VEGF&quot; &quot;GLUT1&quot; &quot;PDK-1&quot; &quot;EN01&quot; &quot;HK2&quot; &quot;CA9&quot; &quot;AK3&quot; &quot;CCNG2&quot; &quot;PFKB3&quot; ## ## $Hu_hypoxia_signature ## [1] &quot;FABP5&quot; &quot;UCHL1&quot; &quot;GAL&quot; &quot;PLODDDIT4&quot; &quot;VEGF&quot; &quot;ADM&quot; ## [7] &quot;ANGPTL4&quot; &quot;NDRG1&quot; &quot;NP&quot; &quot;SLC16A3&quot; &quot;C14ORF58&quot; &quot;RRAGD&quot; ## ## $Molecular_Cancer_m6A ## [1] &quot;METTL3&quot; &quot;METTL14&quot; &quot;RBM15&quot; &quot;RBM15B&quot; &quot;WTAP&quot; &quot;KIAA1429&quot; ## [7] &quot;CBLL1&quot; &quot;ZC3H13&quot; &quot;ALKBH5&quot; &quot;FTO&quot; &quot;YTHDC1&quot; &quot;YTHDC2&quot; ## [13] &quot;YTHDF1&quot; &quot;YTHDF2&quot; &quot;YTHDF3&quot; &quot;IGF2BP1&quot; &quot;HNRNPA2B1&quot; &quot;HNRNPC&quot; ## [19] &quot;FMR1&quot; &quot;LRPPRC&quot; &quot;ELAVL1&quot; ## ## $MT_exosome ## [1] &quot;YWHAG&quot; &quot;YWHAQ&quot; &quot;CLTC&quot; &quot;NCKAP1&quot; &quot;CFL1&quot; &quot;ACTB&quot; &quot;CCT4&quot; &quot;RDX&quot; ## [9] &quot;GNA13&quot; &quot;CTNNB1&quot; ## ## $SR_exosome ## [1] &quot;HSP70&quot; &quot;HSP90&quot; &quot;CD9&quot; &quot;CD63&quot; &quot;CD81&quot; &quot;CD82&quot; ## ## $Positive_regulation_of_exosomal_secretion ## [1] &quot;ATP13A2&quot; &quot;CHMP2A&quot; &quot;HGS&quot; &quot;MYO5B&quot; &quot;PDCD6IP&quot; &quot;RAB7&quot; &quot;SDC1&quot; ## [8] &quot;SDC4&quot; &quot;SDCBP&quot; &quot;SMPD3&quot; &quot;SNF8&quot; &quot;STAM&quot; &quot;TSG101&quot; &quot;VPS4A&quot; ## ## $Negative_regulation_of_exosomal_secretion ## [1] &quot;VPS4B&quot; &quot;PRKN&quot; &quot;RAB7&quot; ## ## $Exosomal_secretion ## [1] &quot;STEAP3&quot; &quot;TSG101&quot; &quot;RAB11A&quot; &quot;RAB27A&quot; &quot;COPS5&quot; ## ## $Exosome_assembly ## [1] &quot;CD34&quot; &quot;PDCD6IP&quot; &quot;SDC1&quot; &quot;SDC4&quot; &quot;SDCBP&quot; &quot;STAM&quot; &quot;TSG101&quot; ## ## $Extracellular_vesicle_biogenesis ## [1] &quot;ARRDC1&quot; &quot;ARRDC4&quot; &quot;ATP13A2&quot; &quot;CD34&quot; &quot;CHMP2A&quot; &quot;COPS5&quot; &quot;HGS&quot; ## [8] &quot;MYO5B&quot; &quot;PDCD6IP&quot; &quot;PRKN&quot; &quot;RAB7&quot; &quot;RAB11A&quot; &quot;RAB27A&quot; &quot;SDC1&quot; ## [15] &quot;SDC4&quot; &quot;SDCBP&quot; &quot;SMPD3&quot; &quot;SNF8&quot; &quot;STAM&quot; &quot;STEAP3&quot; &quot;TSG101&quot; ## [22] &quot;VPS4B&quot; ## ## $MC_Review_Exosome1 ## [1] &quot;TSG101&quot; &quot;CD9&quot; &quot;CD81&quot; &quot;CD63&quot; &quot;FLOT1&quot; &quot;ITGB1&quot; &quot;ITGA1&quot; ## [8] &quot;HSP70&quot; &quot;AIP1&quot; &quot;ALIX&quot; &quot;PDCD6IP&quot; ## ## $MC_Review_Exosome2 ## [1] &quot;RAB27A&quot; &quot;RAB27B&quot; &quot;PIKFYVE&quot; &quot;HRS&quot; &quot;SYT7&quot; &quot;CTTN&quot; &quot;STAT3&quot; ## [8] &quot;PKM2&quot; &quot;UNC13D&quot; &quot;miR-155&quot; &quot;EGFR&quot; &quot;RAS&quot; &quot;EIF3C&quot; &quot;LKB1&quot; ## [15] &quot;STK11&quot; ## ## $CMLS_Review_Exosome ## [1] &quot;HRS&quot; &quot;STAM1&quot; &quot;TSG101&quot; &quot;CHMP4C&quot; &quot;ALIX&quot; &quot;VAT1&quot; ## [7] &quot;VPS4&quot; &quot;CD9&quot; &quot;CD82&quot; &quot;CD63&quot; &quot;LMP1&quot; &quot;TSPAN8&quot; ## [13] &quot;VAMP7&quot; &quot;YKT6&quot; &quot;PKM2&quot; &quot;SNAP-23&quot; &quot;RALA&quot; &quot;RALB&quot; ## [19] &quot;RAB2B&quot; &quot;RAB5A&quot; &quot;RAB9A&quot; &quot;RAB7&quot; &quot;RAB11&quot; &quot;RAB27A&quot; ## [25] &quot;RAB27B&quot; &quot;RAB35&quot; &quot;DGKA&quot; &quot;PLD2&quot; &quot;ARF6&quot; &quot;ATG12&quot; ## [31] &quot;ATG7&quot; &quot;PIKFYVE&quot; &quot;BST2&quot; &quot;ATP6V0A4&quot; ## ## $Ferroptosis ## [1] &quot;ACSL4&quot; &quot;AKR1C1-3&quot; &quot;ALOXs&quot; &quot;ATP5G3&quot; &quot;CARS&quot; ## [6] &quot;CBS&quot; &quot;CD44v&quot; &quot;CHAC1&quot; &quot;CISD1&quot; &quot;CS&quot; ## [11] &quot;DPP4&quot; &quot;FANCD2&quot; &quot;GCLC/GCLM&quot; &quot;GLS2&quot; &quot;GPX4&quot; ## [16] &quot;GSS&quot; &quot;HMGCR&quot; &quot;HSPB1/5&quot; &quot;KOD&quot; &quot;LPCAT3&quot; ## [21] &quot;MT1G&quot; &quot;NCOA4&quot; &quot;NFE2L2&quot; &quot;PTGS2&quot; &quot;RPL8&quot; ## [26] &quot;SAT1&quot; &quot;SLC7A11&quot; &quot;SQS&quot; &quot;TFRC&quot; &quot;TP53&quot; ## [31] &quot;TTC35/EMC2&quot; &quot;MESH1&quot; ## ## $EV_Cell_2020 ## [1] &quot;HSP90AB1&quot; &quot;HSP90AA1&quot; &quot;CD9&quot; &quot;ALIX&quot; &quot;FLOT1&quot; &quot;FLOT2&quot; ## [7] &quot;TSG101&quot; &quot;HSPA8&quot; &quot;CD81&quot; &quot;CD63&quot; &quot;HBB&quot; &quot;JCHAIN&quot; ## [13] &quot;A2M&quot; &quot;B2M&quot; &quot;FN1&quot; &quot;RAP1B&quot; &quot;LGALS3BP&quot; &quot;GSN&quot; ## [19] &quot;MSN&quot; &quot;FLNA&quot; &quot;ACTB&quot; &quot;STOM&quot; &quot;PRDX2&quot; ## ## $CD8 ## [1] &quot;CD8A&quot; &quot;CXCL10&quot; &quot;CXCL9&quot; &quot;GZMA&quot; &quot;GZMB&quot; &quot;IFNG&quot; &quot;PRF1&quot; &quot;TBX21&quot; 4.9.4 Method-4: Construct cell-specific gene signatures from single-cell differential analysis results data(&#39;deg&#39;, package = &quot;IOBR&quot;) sig &lt;- get_sig_sc(deg, cluster = &quot;cluster&quot;, gene = &quot;gene&quot;, avg_log2FC = &quot;avg_log2FC&quot;, n = 100) sig ## $`Epithelial cells 11` ## [1] &quot;AQP4&quot; &quot;BCAT1&quot; &quot;RGS16&quot; &quot;LRRN4&quot; &quot;TIMP3&quot; ## [6] &quot;SUSD2&quot; &quot;AQP1&quot; &quot;CYP4B1&quot; &quot;AGER&quot; &quot;FAM46B&quot; ## [11] &quot;SCGB3A1&quot; &quot;PEG10&quot; &quot;AK1&quot; &quot;DLX3&quot; &quot;GSTM3&quot; ## [16] &quot;BTG2&quot; &quot;GDF15&quot; &quot;CTSE&quot; &quot;CLDN18&quot; &quot;EFNA1&quot; ## [21] &quot;DEGS2&quot; &quot;CYR61&quot; &quot;CKB&quot; &quot;KLHL35&quot; &quot;ARL4D&quot; ## [26] &quot;C4BPA&quot; &quot;SRRM2&quot; &quot;HMGN2&quot; &quot;SFTPB&quot; &quot;RNASE1&quot; ## [31] &quot;EGR1&quot; &quot;C16orf89&quot; &quot;IFIT1&quot; &quot;FBLN5&quot; &quot;SFTA2&quot; ## [36] &quot;IRX5&quot; &quot;GGH&quot; &quot;FABP3&quot; &quot;SULT1A2&quot; &quot;SLC34A2&quot; ## [41] &quot;CDKN2A&quot; &quot;HMGN3&quot; &quot;RSRP1&quot; &quot;C12orf65&quot; &quot;SFTPD&quot; ## [46] &quot;ARHGAP24&quot; &quot;TMEM37&quot; &quot;NAPSA&quot; &quot;IGFBP2&quot; &quot;TUBA4A&quot; ## [51] &quot;CA2&quot; &quot;PIFO&quot; &quot;MLF1&quot; &quot;THUMPD3-AS1&quot; &quot;CLU&quot; ## [56] &quot;TRA2A&quot; &quot;IFI27&quot; &quot;ATHL1&quot; &quot;ARHGEF2&quot; &quot;CYP51A1&quot; ## [61] &quot;STMN1&quot; &quot;PGC&quot; &quot;SFPQ&quot; &quot;CDKN1C&quot; &quot;ACBD3&quot; ## [66] &quot;DGKD&quot; &quot;C19orf53&quot; &quot;FAM177A1&quot; &quot;HIST1H2AM&quot; &quot;SCGB3A2&quot; ## [71] &quot;ZNF593&quot; &quot;ARHGEF17&quot; &quot;ATP13A4-AS1&quot; &quot;ISG15&quot; &quot;MMP15&quot; ## [76] &quot;GADD45GIP1&quot; &quot;PEBP4&quot; &quot;ZFAND2A&quot; &quot;PARP1&quot; &quot;TPPP3&quot; ## [81] &quot;GADD45G&quot; &quot;CD55&quot; &quot;SERTAD1&quot; &quot;RDH10&quot; &quot;OSR2&quot; ## [86] &quot;CLIC3&quot; &quot;TPPP&quot; &quot;SNRNP25&quot; &quot;C4BPB&quot; &quot;RANBP10&quot; ## [91] &quot;TNNC1&quot; &quot;CRYM&quot; &quot;PHLDA2&quot; &quot;TFAP2C&quot; &quot;EPHX1&quot; ## [96] &quot;SFN&quot; &quot;MRPL2&quot; &quot;ZNF493&quot; &quot;SNX22&quot; &quot;ALKBH4&quot; ## ## $`Epithelial cells 15` ## [1] &quot;SFTPC&quot; &quot;SFTPA1&quot; &quot;SFTPA2&quot; &quot;FABP5&quot; &quot;SFTPD&quot; ## [6] &quot;SFTPB&quot; &quot;PEBP4&quot; &quot;ABCA3&quot; &quot;CSF3R&quot; &quot;NAPSA&quot; ## [11] &quot;PGC&quot; &quot;WIF1&quot; &quot;MACROD2&quot; &quot;CLDN18&quot; &quot;SLPI&quot; ## [16] &quot;HP&quot; &quot;DUOX1&quot; &quot;C16orf89&quot; &quot;AQP1&quot; &quot;AK1&quot; ## [21] &quot;SCGB3A1&quot; &quot;CA2&quot; &quot;SCGB3A2&quot; &quot;SCD&quot; &quot;AFF3&quot; ## [26] &quot;NECAB1&quot; &quot;FGG&quot; &quot;SLC34A2&quot; &quot;MFSD2A&quot; &quot;GADD45G&quot; ## [31] &quot;SFTA2&quot; &quot;PTPN13&quot; &quot;RASGRF1&quot; &quot;AQP4&quot; &quot;C1R&quot; ## [36] &quot;ACOXL&quot; &quot;NR0B2&quot; &quot;PLA2G4F&quot; &quot;DCXR&quot; &quot;SUSD2&quot; ## [41] &quot;ADIRF&quot; &quot;FILIP1&quot; &quot;RGS16&quot; &quot;MYLK&quot; &quot;HLA-DQB2&quot; ## [46] &quot;ORM1&quot; &quot;ETV5&quot; &quot;TSPAN7&quot; &quot;CXCL17&quot; &quot;PHYHD1&quot; ## [51] &quot;RNASE1&quot; &quot;TTN&quot; &quot;SNX30&quot; &quot;C4BPA&quot; &quot;CHI3L1&quot; ## [56] &quot;IFITM1&quot; &quot;FAM46C&quot; &quot;SFTA1P&quot; &quot;CHI3L2&quot; &quot;GUCY1A3&quot; ## [61] &quot;CLIC3&quot; &quot;GOLIM4&quot; &quot;EGR1&quot; &quot;TPPP3&quot; &quot;SULT1A2&quot; ## [66] &quot;CYP4B1&quot; &quot;ATP13A4-AS1&quot; &quot;KCNJ2&quot; &quot;SLC5A2&quot; &quot;TMEM37&quot; ## [71] &quot;PLLP&quot; &quot;PTTG1&quot; &quot;ARL4D&quot; &quot;PLIN5&quot; &quot;HMGN2&quot; ## [76] &quot;PMM1&quot; &quot;RSRP1&quot; &quot;CLU&quot; &quot;PIGR&quot; &quot;QDPR&quot; ## [81] &quot;AGER&quot; &quot;DMBT1&quot; &quot;PEG10&quot; &quot;RSBN1&quot; &quot;CKB&quot; ## [86] &quot;RMDN2&quot; &quot;CYR61&quot; &quot;NUDT14&quot; &quot;F3&quot; &quot;CTSE&quot; ## [91] &quot;C3&quot; &quot;TUBA4A&quot; &quot;IRX5&quot; &quot;C12orf65&quot; &quot;CCND3&quot; ## [96] &quot;TMEM116&quot; &quot;TUBA1B&quot; &quot;PLEKHB1&quot; &quot;IVD&quot; &quot;ACP5&quot; ## ## $`Epithelial cells 2` ## [1] &quot;IGFBP3&quot; &quot;PCDH7&quot; &quot;PTPRN2&quot; &quot;ADAM28&quot; &quot;CASP1&quot; &quot;TRAF2&quot; ## [7] &quot;CYBA&quot; &quot;SERPINE1&quot; &quot;IL32&quot; &quot;RFK&quot; &quot;TRIM16&quot; &quot;FXYD5&quot; ## [13] &quot;RAMP1&quot; &quot;EGFL7&quot; &quot;SNAP23&quot; &quot;ATP6V1E1&quot; &quot;HSD11B2&quot; &quot;BATF&quot; ## [19] &quot;UACA&quot; &quot;TCTN3&quot; &quot;HSPA9&quot; &quot;BIK&quot; &quot;ACSL1&quot; &quot;POLR3K&quot; ## [25] &quot;CCL28&quot; &quot;AUH&quot; &quot;CMC4&quot; &quot;PRPS1&quot; &quot;EFHD2&quot; &quot;RAB24&quot; ## [31] &quot;RER1&quot; &quot;HN1&quot; &quot;MTCH2&quot; &quot;NTMT1&quot; &quot;COMTD1&quot; &quot;KRT16&quot; ## [37] &quot;STX7&quot; &quot;PDCD6IP&quot; &quot;UBTD2&quot; &quot;CHMP1B&quot; &quot;DSC2&quot; &quot;UBA7&quot; ## [43] &quot;VTA1&quot; &quot;P4HA1&quot; &quot;UFM1&quot; &quot;PTP4A1&quot; &quot;CEBPG&quot; &quot;AMZ2&quot; ## [49] &quot;PLIN2&quot; &quot;PRPS2&quot; &quot;RNASEH1&quot; &quot;KATNBL1&quot; &quot;PSMD5&quot; &quot;MECR&quot; ## [55] &quot;DCUN1D1&quot; &quot;PEX19&quot; &quot;TIMM17A&quot; &quot;SGMS1&quot; &quot;C7orf73&quot; &quot;ORC5&quot; ## [61] &quot;UBQLN1&quot; &quot;VAPA&quot; &quot;PAFAH1B3&quot; &quot;PEX11B&quot; &quot;DRG1&quot; &quot;ADSL&quot; ## [67] &quot;UBN1&quot; &quot;CLNS1A&quot; &quot;SUMF1&quot; &quot;NSMCE1&quot; &quot;COG7&quot; &quot;DGAT1&quot; ## [73] &quot;NDUFS3&quot; &quot;YIPF5&quot; &quot;CCDC78&quot; &quot;RAB6A&quot; &quot;LPP&quot; &quot;CHMP2B&quot; ## [79] &quot;G3BP1&quot; &quot;AAAS&quot; &quot;MOV10&quot; &quot;C3&quot; &quot;CRIP1&quot; &quot;LSG1&quot; ## [85] &quot;RSPH3&quot; &quot;SNRPA1&quot; &quot;DNAJA3&quot; &quot;HIGD1A&quot; &quot;ARHGDIB&quot; &quot;PIGG&quot; ## [91] &quot;CCT4&quot; &quot;TES&quot; &quot;CCNJL&quot; &quot;LEPROT&quot; &quot;ATP6V1D&quot; &quot;AFMID&quot; ## [97] &quot;TALDO1&quot; &quot;NGRN&quot; &quot;PSG5&quot; &quot;CD55&quot; ## ## $`Epithelial cells 23` ## [1] &quot;NECAB1&quot; &quot;SFTPC&quot; &quot;SFTPA1&quot; &quot;PGC&quot; &quot;SFTPA2&quot; ## [6] &quot;CA2&quot; &quot;PEBP4&quot; &quot;ABCA3&quot; &quot;ETV5&quot; &quot;HNRNPH1&quot; ## [11] &quot;CHI3L2&quot; &quot;SAR1A&quot; &quot;MFSD2A&quot; &quot;C4BPA&quot; &quot;C1R&quot; ## [16] &quot;LTF&quot; &quot;F3&quot; &quot;CXCL2&quot; &quot;NR0B2&quot; &quot;PIGR&quot; ## [21] &quot;FABP5&quot; &quot;SFTPD&quot; &quot;NAPSA&quot; &quot;EGR1&quot; &quot;PTPN13&quot; ## [26] &quot;SFTPB&quot; &quot;CLU&quot; &quot;RRAD&quot; &quot;WIF1&quot; &quot;DUOX1&quot; ## [31] &quot;AQP1&quot; &quot;NFKBIZ&quot; &quot;TOB1&quot; &quot;SLC34A2&quot; &quot;TRA2A&quot; ## [36] &quot;RASGRF1&quot; &quot;UGCG&quot; &quot;HACD1&quot; &quot;PHYHD1&quot; &quot;AFF3&quot; ## [41] &quot;CHI3L1&quot; &quot;GOLIM4&quot; &quot;CD274&quot; &quot;KCNJ2&quot; &quot;SLC38A2&quot; ## [46] &quot;PPP3CA&quot; &quot;C16orf89&quot; &quot;ACOXL&quot; &quot;SCD&quot; &quot;SKIL&quot; ## [51] &quot;RDH10&quot; &quot;WTAP&quot; &quot;TSC22D2&quot; &quot;SCGB3A1&quot; &quot;ARGLU1&quot; ## [56] &quot;DMBT1&quot; &quot;AZGP1&quot; &quot;C8orf4&quot; &quot;NNMT&quot; &quot;RNASE1&quot; ## [61] &quot;PLA2G4F&quot; &quot;NUCKS1&quot; &quot;FGG&quot; &quot;LRRC75A-AS1&quot; &quot;UBE2B&quot; ## [66] &quot;SERTAD1&quot; &quot;HMGCS1&quot; &quot;MBNL1&quot; &quot;PLIN5&quot; &quot;ADAM17&quot; ## [71] &quot;DDX3X&quot; &quot;CTNNB1&quot; &quot;FAM46B&quot; &quot;PPP1CB&quot; &quot;CLDN18&quot; ## [76] &quot;ATP13A4-AS1&quot; &quot;SNX30&quot; &quot;CYP51A1&quot; &quot;PTP4A1&quot; &quot;SUSD2&quot; ## [81] &quot;TFAP2C&quot; &quot;HP&quot; &quot;STOM&quot; &quot;STAM&quot; &quot;RAB21&quot; ## [86] &quot;MPZL3&quot; &quot;CRIM1&quot; &quot;MACROD2&quot; &quot;STK17A&quot; &quot;UGDH&quot; ## [91] &quot;KCTD9&quot; &quot;ALDH6A1&quot; &quot;FNIP1&quot; &quot;ZC3H4&quot; &quot;DUSP14&quot; ## [96] &quot;CXCL17&quot; &quot;DCBLD2&quot; &quot;PPP6R3&quot; &quot;ARL8B&quot; &quot;SLMO2&quot; ## ## $`Epithelial cells 25` ## [1] &quot;LYPD2&quot; &quot;REG1A&quot; &quot;SERPINB3&quot; &quot;SERPINB5&quot; &quot;CLDN10&quot; ## [6] &quot;ARL14&quot; &quot;SERPINB4&quot; &quot;MUC5AC&quot; &quot;AKR1C2&quot; &quot;KRT17&quot; ## [11] &quot;IL1RN&quot; &quot;ALDH3A1&quot; &quot;C12orf75&quot; &quot;SERPINA3&quot; &quot;KRT6A&quot; ## [16] &quot;BASP1&quot; &quot;BPIFB1&quot; &quot;PRKCDBP&quot; &quot;CDKN2A&quot; &quot;HNRNPH1&quot; ## [21] &quot;SFN&quot; &quot;MUC5B&quot; &quot;CXCL1&quot; &quot;RARRES1&quot; &quot;F3&quot; ## [26] &quot;IFITM1&quot; &quot;NUCKS1&quot; &quot;MLF1&quot; &quot;ST6GAL1&quot; &quot;EREG&quot; ## [31] &quot;OXCT1&quot; &quot;MAFIP&quot; &quot;IFI27&quot; &quot;KLK11&quot; &quot;PHLDA2&quot; ## [36] &quot;TIMP1&quot; &quot;TOB1&quot; &quot;LRRC75A-AS1&quot; &quot;S100A2&quot; &quot;EEF1B2&quot; ## [41] &quot;PADI2&quot; &quot;AEN&quot; &quot;BCL10&quot; &quot;EGR1&quot; &quot;HMGCS1&quot; ## [46] &quot;WTAP&quot; &quot;TRA2A&quot; &quot;HACD1&quot; &quot;BTG2&quot; &quot;AKR1C1&quot; ## [51] &quot;SKIL&quot; &quot;OLFM1&quot; &quot;MPRIP&quot; &quot;SNRPB&quot; &quot;WEE1&quot; ## [56] &quot;JAG1&quot; &quot;SLC7A5P2&quot; &quot;ATHL1&quot; &quot;EFHD2&quot; &quot;GMDS&quot; ## [61] &quot;C12orf57&quot; &quot;IL17RB&quot; &quot;GGH&quot; &quot;UGCG&quot; &quot;MIR205HG&quot; ## [66] &quot;STAT2&quot; &quot;SERTAD1&quot; &quot;R3HDM2&quot; &quot;CTNNB1&quot; &quot;NCOR1&quot; ## [71] &quot;ARGLU1&quot; &quot;PDCD4&quot; &quot;CLTB&quot; &quot;GMNN&quot; &quot;RIN2&quot; ## [76] &quot;PPP3CA&quot; &quot;UBE2B&quot; &quot;SLC5A2&quot; &quot;PPP1CB&quot; &quot;STON2&quot; ## [81] &quot;DST&quot; &quot;KIAA1217&quot; &quot;ARFIP2&quot; &quot;FAM208B&quot; &quot;RASSF6&quot; ## [86] &quot;HIST1H2AM&quot; &quot;SMURF2&quot; &quot;FKBP9&quot; &quot;ARL8B&quot; &quot;RREB1&quot; ## [91] &quot;UGDH&quot; &quot;HIST1H4C&quot; &quot;HMGN3&quot; &quot;BIK&quot; &quot;B3GALNT2&quot; ## [96] &quot;C4BPB&quot; &quot;TRIM16&quot; &quot;PDGFA&quot; &quot;ZC3H4&quot; &quot;HMGCR&quot; ## ## $`Epithelial cells 26` ## [1] &quot;ITLN2&quot; &quot;FMO2&quot; &quot;RTKN2&quot; &quot;AGER&quot; &quot;HEG1&quot; &quot;CRYAB&quot; ## [7] &quot;IGFBP7&quot; &quot;CLDN18&quot; &quot;SPOCK2&quot; &quot;UPK3B&quot; &quot;CYP4B1&quot; &quot;TNNC1&quot; ## [13] &quot;PDPN&quot; &quot;ADIRF&quot; &quot;SFTA1P&quot; &quot;TIMP3&quot; &quot;KLK11&quot; &quot;COL4A2&quot; ## [19] &quot;AQP4&quot; &quot;ABCA1&quot; &quot;PLLP&quot; &quot;CLIC3&quot; &quot;RGCC&quot; &quot;CCND2&quot; ## [25] &quot;TAGLN&quot; &quot;SUSD2&quot; &quot;SBSPON&quot; &quot;RNASE1&quot; &quot;WFS1&quot; &quot;MGLL&quot; ## [31] &quot;MAP2&quot; &quot;SULT1A2&quot; &quot;TUBA1A&quot; &quot;UNC13D&quot; &quot;IFI27&quot; &quot;CD55&quot; ## [37] &quot;FKBP1B&quot; &quot;AKR1C1&quot; &quot;RIN2&quot; &quot;F3&quot; &quot;FILIP1&quot; &quot;FN1&quot; ## [43] &quot;PEBP4&quot; &quot;FAM46B&quot; &quot;SFTA2&quot; &quot;PRKCDBP&quot; &quot;CRIP1&quot; &quot;TMEM98&quot; ## [49] &quot;CEACAM6&quot; &quot;CKB&quot; &quot;FBLN5&quot; &quot;PHACTR2&quot; &quot;EPB41L5&quot; &quot;DST&quot; ## [55] &quot;ARHGAP24&quot; &quot;PEG10&quot; &quot;ABI3BP&quot; &quot;LRRN4&quot; &quot;TSPAN7&quot; &quot;CTGF&quot; ## [61] &quot;FBXL15&quot; &quot;STOM&quot; &quot;HMGN2&quot; &quot;SDC1&quot; &quot;STON2&quot; &quot;QKI&quot; ## [67] &quot;RFC1&quot; &quot;PDGFA&quot; &quot;FAS&quot; &quot;IFT43&quot; &quot;TXNRD2&quot; &quot;DUOX1&quot; ## [73] &quot;ARL8B&quot; &quot;NHLRC3&quot; &quot;TERF1&quot; &quot;SNX22&quot; &quot;CYR61&quot; &quot;RBM17&quot; ## [79] &quot;TJP1&quot; &quot;SAP30BP&quot; &quot;SGMS1&quot; &quot;ARAP2&quot; &quot;HSD17B8&quot; &quot;MICA&quot; ## [85] &quot;STX7&quot; &quot;TRIM5&quot; &quot;VPS4B&quot; &quot;PDS5B&quot; &quot;NUCKS1&quot; &quot;PCMTD1&quot; ## [91] &quot;SFTPB&quot; &quot;MDM4&quot; &quot;FAM134A&quot; &quot;ACAA2&quot; &quot;CTSE&quot; &quot;ABCA7&quot; ## [97] &quot;SNRPB&quot; &quot;CIAPIN1&quot; &quot;HNRNPA0&quot; &quot;PHF10&quot; ## ## $`Epithelial cells 27` ## [1] &quot;APOBEC3H&quot; &quot;ALDH3A1&quot; &quot;LDHD&quot; ## [4] &quot;AZGP1&quot; &quot;SCGB3A2&quot; &quot;MT1G&quot; ## [7] &quot;KLK11&quot; &quot;TPPP3&quot; &quot;TMEM37&quot; ## [10] &quot;RASL11A&quot; &quot;CTSE&quot; &quot;CEACAM5&quot; ## [13] &quot;DEGS2&quot; &quot;ITPR2&quot; &quot;NHS&quot; ## [16] &quot;LL22NC03-75H12.2&quot; &quot;TMEM98&quot; &quot;C16orf89&quot; ## [19] &quot;C4BPA&quot; &quot;HLA-DQB2&quot; &quot;SLC1A7&quot; ## [22] &quot;GSTA1&quot; &quot;AKR7A2&quot; &quot;BTG2&quot; ## [25] &quot;CXCL17&quot; &quot;RARRES2&quot; &quot;IGFBP2&quot; ## [28] &quot;TMEM230&quot; &quot;SUSD2&quot; &quot;CYP4B1&quot; ## [31] &quot;PPIE&quot; &quot;SYT2&quot; &quot;LINC00578&quot; ## [34] &quot;TERF2IP&quot; &quot;SRRM2&quot; &quot;SFTA2&quot; ## [37] &quot;PMM1&quot; &quot;DHRS4-AS1&quot; &quot;GDF15&quot; ## [40] &quot;SFTPB&quot; &quot;NME3&quot; &quot;CXCL14&quot; ## [43] &quot;PLLP&quot; &quot;CLU&quot; &quot;ELOVL1&quot; ## [46] &quot;SFTPD&quot; &quot;PEMT&quot; &quot;MLF1&quot; ## [49] &quot;IFI27&quot; &quot;MRPL57&quot; &quot;NGDN&quot; ## [52] &quot;SNRPB&quot; &quot;SNRNP25&quot; &quot;MTSS1L&quot; ## [55] &quot;UBE2I&quot; &quot;MAFIP&quot; &quot;AQP4&quot; ## [58] &quot;SCGB3A1&quot; &quot;CHMP4A&quot; &quot;PIGR&quot; ## [61] &quot;ITPA&quot; &quot;IRX5&quot; &quot;CEACAM6&quot; ## [64] &quot;SZT2&quot; &quot;TMEM205&quot; &quot;RGS16&quot; ## [67] &quot;DNAJA3&quot; &quot;NAPSA&quot; &quot;TMEM52&quot; ## [70] &quot;POLR3K&quot; &quot;GFRA3&quot; &quot;MSRB1&quot; ## [73] &quot;CCDC101&quot; &quot;IVD&quot; &quot;PCNA&quot; ## [76] &quot;NUDT16L1&quot; &quot;HLA-DOB&quot; &quot;BCL6&quot; ## [79] &quot;FTO&quot; &quot;SFTA1P&quot; &quot;C10orf32&quot; ## [82] &quot;MLYCD&quot; &quot;AK1&quot; &quot;CCDC115&quot; ## [85] &quot;DMBT1&quot; &quot;RNASE1&quot; &quot;CIAPIN1&quot; ## [88] &quot;FAM71E1&quot; &quot;COQ9&quot; &quot;CPAMD8&quot; ## [91] &quot;ALDH6A1&quot; &quot;MMP15&quot; &quot;PLEKHB1&quot; ## [94] &quot;RMDN2&quot; &quot;LYRM1&quot; &quot;HSD17B8&quot; ## [97] &quot;YRDC&quot; &quot;ERAL1&quot; &quot;SLC5A2&quot; ## [100] &quot;MMP7&quot; ## ## $`Epithelial cells 28` ## [1] &quot;UPK1B&quot; &quot;BPIFB1&quot; &quot;KLK6&quot; &quot;PSG3&quot; &quot;PPBP&quot; ## [6] &quot;LDLRAD1&quot; &quot;PADI2&quot; &quot;MSMB&quot; &quot;ADGRE2&quot; &quot;PSG5&quot; ## [11] &quot;IGFBP3&quot; &quot;SLC30A2&quot; &quot;APOD&quot; &quot;TALDO1&quot; &quot;KRT6A&quot; ## [16] &quot;KRT16&quot; &quot;TMEM140&quot; &quot;IL3RA&quot; &quot;KRT4&quot; &quot;CHMP1B&quot; ## [21] &quot;ZNF793-AS1&quot; &quot;TRIM16&quot; &quot;P4HA1&quot; &quot;APOL2&quot; &quot;WFS1&quot; ## [26] &quot;KRT17&quot; &quot;MARCKS&quot; &quot;KRT13&quot; &quot;MOV10&quot; &quot;HDAC9&quot; ## [31] &quot;CLN5&quot; &quot;RNF13&quot; &quot;CLP1&quot; &quot;DAZAP2&quot; &quot;WEE1&quot; ## [36] &quot;BIK&quot; &quot;UACA&quot; &quot;RNF114&quot; &quot;DYNLL1&quot; &quot;S100A9&quot; ## [41] &quot;NDRG3&quot; &quot;TMEM106C&quot; &quot;QRICH1&quot; &quot;SUMF1&quot; &quot;CSTF1&quot; ## [46] &quot;PPAP2B&quot; &quot;P4HTM&quot; &quot;LOC283788&quot; &quot;CHID1&quot; &quot;UBE2D1&quot; ## [51] &quot;ARFIP2&quot; &quot;RARRES1&quot; &quot;UNG&quot; &quot;TBC1D1&quot; &quot;SERPINE1&quot; ## [56] &quot;PEX11B&quot; &quot;TMTC3&quot; &quot;TOMM34&quot; &quot;NARS&quot; &quot;STOM&quot; ## [61] &quot;UBQLN1&quot; &quot;PIGG&quot; &quot;COMMD7&quot; &quot;RFK&quot; &quot;BLOC1S4&quot; ## [66] &quot;ADAM10&quot; &quot;TFAP2C&quot; &quot;CTNNB1&quot; &quot;FUBP1&quot; &quot;HAT1&quot; ## [71] &quot;CRIP1&quot; &quot;C3&quot; &quot;HNRNPC&quot; &quot;VTA1&quot; &quot;CCT4&quot; ## [76] &quot;PDCD6IP&quot; &quot;LSG1&quot; &quot;SNAP23&quot; &quot;HIGD1A&quot; &quot;PAFAH1B3&quot; ## [81] &quot;AAAS&quot; &quot;PIP4K2C&quot; &quot;CLIC3&quot; &quot;RER1&quot; &quot;UBA7&quot; ## [86] &quot;RSPH3&quot; &quot;UFM1&quot; &quot;AUH&quot; &quot;CEACAM5&quot; &quot;VPS41&quot; ## [91] &quot;TCTN3&quot; &quot;TJP1&quot; &quot;IFIT2&quot; &quot;CCL28&quot; &quot;CHMP2B&quot; ## [96] &quot;COG7&quot; &quot;ACTR10&quot; &quot;FXYD5&quot; &quot;PTP4A1&quot; &quot;HSPA9&quot; ## ## $`Epithelial cells 29` ## [1] &quot;PRSS2&quot; &quot;PRSS1&quot; &quot;PRSS3&quot; &quot;ATG9B&quot; &quot;PLA1A&quot; ## [6] &quot;PAEP&quot; &quot;AZGP1&quot; &quot;UBE2C&quot; &quot;TNFRSF18&quot; &quot;G0S2&quot; ## [11] &quot;CDA&quot; &quot;ALDOC&quot; &quot;NME1-NME2&quot; &quot;MIR205HG&quot; &quot;CDKN2A&quot; ## [16] &quot;AKR1B1&quot; &quot;CHI3L1&quot; &quot;C4orf48&quot; &quot;YEATS4&quot; &quot;MAP1B&quot; ## [21] &quot;TNNC2&quot; &quot;RGS17&quot; &quot;PPAT&quot; &quot;MSRB1&quot; &quot;ZNF593&quot; ## [26] &quot;LAGE3&quot; &quot;RAN&quot; &quot;ICT1&quot; &quot;NOP16&quot; &quot;RASSF3&quot; ## [31] &quot;EEF1B2&quot; &quot;SLC27A5&quot; &quot;MYEOV2&quot; &quot;GEMIN6&quot; &quot;TIMP1&quot; ## [36] &quot;CEACAM5&quot; &quot;CD320&quot; &quot;HN1&quot; &quot;MRPL13&quot; &quot;APOD&quot; ## [41] &quot;S100A2&quot; &quot;MRPL32&quot; &quot;MRPL21&quot; &quot;PAFAH1B3&quot; &quot;GDF15&quot; ## [46] &quot;GADD45GIP1&quot; &quot;PHLDA2&quot; &quot;QTRTD1&quot; &quot;ANGPTL4&quot; &quot;C19orf24&quot; ## [51] &quot;POLE4&quot; &quot;SUPT4H1&quot; &quot;MTIF2&quot; &quot;MRPL57&quot; &quot;DDX18&quot; ## [56] &quot;ACOX2&quot; &quot;SDC1&quot; &quot;CCDC59&quot; &quot;DST&quot; &quot;ATP5D&quot; ## [61] &quot;SNHG17&quot; &quot;SLC34A2&quot; &quot;DCBLD2&quot; &quot;SNRNP25&quot; &quot;NIFK&quot; ## [66] &quot;MPHOSPH10&quot; &quot;NAA10&quot; &quot;TBCB&quot; &quot;S100A9&quot; &quot;PLIN2&quot; ## [71] &quot;MRPL40&quot; &quot;ITPA&quot; &quot;TFAM&quot; &quot;TMEM61&quot; &quot;TMEM98&quot; ## [76] &quot;GPATCH4&quot; &quot;TRMT10C&quot; &quot;SLMO2&quot; &quot;RPS19BP1&quot; &quot;RPP21&quot; ## [81] &quot;NUFIP2&quot; &quot;NAPSA&quot; &quot;RAMP1&quot; &quot;MEA1&quot; &quot;NSMCE1&quot; ## [86] &quot;CEBPZOS&quot; &quot;APOL2&quot; &quot;TMEM14A&quot; &quot;COMTD1&quot; &quot;PSMD9&quot; ## [91] &quot;DTYMK&quot; &quot;SNHG11&quot; &quot;HINT2&quot; &quot;NT5C&quot; &quot;TMEM91&quot; ## [96] &quot;SFTA2&quot; &quot;AP1AR&quot; &quot;POLR3K&quot; &quot;GOLT1A&quot; &quot;SMIM6&quot; ## ## $`Epithelial cells 6` ## [1] &quot;PTN&quot; &quot;CHGB&quot; &quot;NR2F1-AS1&quot; &quot;CRLF1&quot; &quot;PGF&quot; ## [6] &quot;MUC5B&quot; &quot;MGP&quot; &quot;COL1A1&quot; &quot;CCDC80&quot; &quot;KRT81&quot; ## [11] &quot;MIR205HG&quot; &quot;CEACAM6&quot; &quot;IFITM1&quot; &quot;NHS&quot; &quot;EREG&quot; ## [16] &quot;RGS17&quot; &quot;CDKN2A&quot; &quot;CCL2&quot; &quot;CAMK1D&quot; &quot;S100A9&quot; ## [21] &quot;IFI27&quot; &quot;PHGDH&quot; &quot;SNHG18&quot; &quot;DMBT1&quot; &quot;CEMIP&quot; ## [26] &quot;NNMT&quot; &quot;ARL4A&quot; &quot;CXCL14&quot; &quot;OXCT1&quot; &quot;CEACAM5&quot; ## [31] &quot;TNFRSF18&quot; &quot;TGM2&quot; &quot;THBS1&quot; &quot;CYSLTR1&quot; &quot;COL17A1&quot; ## [36] &quot;HDGFRP3&quot; &quot;LOC648987&quot; &quot;EMB&quot; &quot;TNFSF10&quot; &quot;SPON2&quot; ## [41] &quot;ARHGDIB&quot; &quot;PIGR&quot; &quot;NR1D1&quot; &quot;CLEC2D&quot; &quot;RN7SK&quot; ## [46] &quot;RNASE1&quot; &quot;TIMP1&quot; &quot;SLC38A1&quot; &quot;CXCL1&quot; &quot;CDKN1C&quot; ## [51] &quot;ATHL1&quot; &quot;TGFBI&quot; &quot;MARCKS&quot; &quot;SLC12A2&quot; &quot;GUCY1A3&quot; ## [56] &quot;PHLDA2&quot; &quot;TRA2A&quot; &quot;EXOC3-AS1&quot; &quot;LRRC37A4P&quot; &quot;C4orf48&quot; ## [61] &quot;C21orf2&quot; &quot;WEE1&quot; &quot;PIP4K2C&quot; &quot;CD320&quot; &quot;C12orf57&quot; ## [66] &quot;IGFBP2&quot; &quot;C8orf4&quot; &quot;TMEM205&quot; &quot;XRRA1&quot; &quot;IRF2BPL&quot; ## [71] &quot;STON2&quot; &quot;RRAD&quot; &quot;SNHG1&quot; &quot;EPHX1&quot; &quot;ISG15&quot; ## [76] &quot;TMEM238&quot; &quot;MRPL39&quot; &quot;IRF7&quot; &quot;CHI3L1&quot; &quot;NFKBIZ&quot; ## [81] &quot;CCDC85B&quot; &quot;YBEY&quot; &quot;LINC00649&quot; &quot;C4BPB&quot; &quot;ZNF195&quot; ## [86] &quot;KRT17&quot; &quot;ATP5D&quot; &quot;PDK3&quot; &quot;CAPS&quot; &quot;PMAIP1&quot; ## [91] &quot;IVD&quot; &quot;DST&quot; &quot;HSPA6&quot; &quot;SAC3D1&quot; &quot;UBE2S&quot; ## [96] &quot;ABCA7&quot; &quot;SEPT11&quot; &quot;C19orf60&quot; &quot;HPGD&quot; &quot;GADD45GIP1&quot; 4.10 How to export gene signature Using the output_sig function, user can export the signatures of the list structure to a csv file for other purposes. This step is exactly the reverse of format_signatures. sig &lt;- output_sig(signatures = signature_sc, format = &quot;csv&quot;, file.name = &quot;sc_signature&quot;) sig[1:8, 1:5] ## CD4_c0_Tcm CD4_c1_Treg CD4_c10_Tn_LEF1_ANKRD55 CD4_c11_Tisg CD4_c2_Tn ## 1 ANXA1 FOXP3 ANKRD55 ISG15 NBEAL1 ## 2 LMNA IL2RA LEF1 IFI6 CCR7 ## 3 VIM TNFRSF4 TCF7 IFI44L GLTSCR2 ## 4 KLRB1 TIGIT NOSIP MX1 TCF7 ## 5 IL7R CARD16 SELL IFIT3 GNB2L1 ## 6 ZFP36 TNFRSF18 IL6ST IFIT1 SELL ## 7 ZFP36L2 BATF LDLRAP1 RSAD2 C6orf48 ## 8 GPR183 CTLA4 RIPOR2 STAT1 TMEM66 4.11 References ssgsea: Barbie, D.A. et al (2009). Systematic RNA interference reveals that oncogenic KRAS-driven cancers require TBK1. Nature, 462(5):108-112. gsva: Hänzelmann, S., Castelo, R. and Guinney, J. (2013). GSVA: Gene set variation analysis for microarray and RNA-Seq data. BMC Bioinformatics, 14(1):7. zscore: Lee, E. et al (2008). Inferring pathway activity toward precise disease classification. PLoS Comp Biol, 4(11):e1000217. PCA method: Mariathasan S, Turley SJ, Nickles D, et al. TGFβ attenuates tumour response to PD-L1 blockade by contributing to exclusion of T cells. Nature. 2018 Feb 22;554(7693):544-548. MSigDB:Dolgalev I (2022). msigdbr: MSigDB Gene Sets for Multiple Organisms in a Tidy Data Format. R package version 7.5.1. (https://www.gsea-msigdb.org/gsea/msigdb/) "],["tme-deconvolution.html", "Chapter 5 TME deconvolution 5.1 Loading packages 5.2 Downloading data for example 5.3 Available Methods to Decode TME Contexture 5.4 Method 1: CIBERSORT 5.5 Method 2: EPIC 5.6 Method 3: MCPcounter 5.7 Method 4: xCELL 5.8 Method 5: ESTIMATE 5.9 Method 6: TIMER 5.10 Method 7: quanTIseq 5.11 Method 8: IPS 5.12 Combination of above deconvolution results 5.13 How to customise the signature matrix for SVR and lesi algorithm 5.14 References", " Chapter 5 TME deconvolution This section demonstrates various algorithms for parsing the tumour microenvironment using data from the bulk transcriptome. We also describe how to construct the reference signature matrix for the popular SVR algorithm (CIBERSORT) from single-cell data. 5.1 Loading packages Load the IOBR package in your R session after the installation is complete: library(IOBR) library(survminer) library(tidyverse) options(future.globals.maxSize = 8 * 1024^3) 5.2 Downloading data for example Obtaining data set from GEO Gastric cancer: GSE62254 using GEOquery R package. if (!requireNamespace(&quot;GEOquery&quot;, quietly = TRUE)) BiocManager::install(&quot;GEOquery&quot;) library(&quot;GEOquery&quot;) # NOTE: This process may take a few minutes which depends on the internet connection speed. Please wait for its completion. eset_geo &lt;- getGEO(GEO = &quot;GSE62254&quot;, getGPL = F, destdir = &quot;./&quot;) eset &lt;- eset_geo[[1]] eset &lt;- exprs(eset) eset[1:5, 1:5] ## GSM1523727 GSM1523728 GSM1523729 GSM1523744 GSM1523745 ## 1007_s_at 3.2176645 3.0624323 3.0279131 2.921683 2.8456013 ## 1053_at 2.4050109 2.4394879 2.2442708 2.345916 2.4328582 ## 117_at 1.4933412 1.8067380 1.5959665 1.839822 1.8326058 ## 121_at 2.1965561 2.2812181 2.1865556 2.258599 2.1874363 ## 1255_g_at 0.8698382 0.9502466 0.8125414 1.012860 0.9441993 Annotation of genes in the expression matrix and removal of duplicate genes. library(IOBR) # Load the annotation file `anno_hug133plus2` in IOBR. head(anno_hug133plus2) ## # A tibble: 6 × 2 ## probe_id symbol ## &lt;fct&gt; &lt;fct&gt; ## 1 1007_s_at MIR4640 ## 2 1053_at RFC2 ## 3 117_at HSPA6 ## 4 121_at PAX8 ## 5 1255_g_at GUCA1A ## 6 1294_at MIR5193 # Conduct gene annotation using `anno_hug133plus2` file; If identical gene symbols exists, these genes would be ordered by the mean expression levels. The gene symbol with highest mean expression level is selected and remove others. eset&lt;-anno_eset(eset = eset, annotation = anno_hug133plus2, symbol = &quot;symbol&quot;, probe = &quot;probe_id&quot;, method = &quot;mean&quot;) eset[1:5, 1:3] ## GSM1523727 GSM1523728 GSM1523729 ## SH3KBP1 4.327974 4.316195 4.351425 ## RPL41 4.246149 4.246808 4.257940 ## EEF1A1 4.293762 4.291038 4.262199 ## COX2 4.250288 4.283714 4.270508 ## LOC101928826 4.219303 4.219670 4.213252 5.3 Available Methods to Decode TME Contexture tme_deconvolution_methods ## MCPcounter EPIC xCell CIBERSORT ## &quot;mcpcounter&quot; &quot;epic&quot; &quot;xcell&quot; &quot;cibersort&quot; ## CIBERSORT Absolute IPS ESTIMATE SVR ## &quot;cibersort_abs&quot; &quot;ips&quot; &quot;estimate&quot; &quot;svr&quot; ## lsei TIMER quanTIseq ## &quot;lsei&quot; &quot;timer&quot; &quot;quantiseq&quot; # Return available parameter options of deconvolution methods The input data is a matrix subseted from ESET of ACRG cohort, with genes in rows and samples in columns. The row name must be HGNC symbols and the column name must be sample names. eset_acrg &lt;- eset[, 1:50] eset_acrg[1:5, 1:3] ## GSM1523727 GSM1523728 GSM1523729 ## SH3KBP1 4.327974 4.316195 4.351425 ## RPL41 4.246149 4.246808 4.257940 ## EEF1A1 4.293762 4.291038 4.262199 ## COX2 4.250288 4.283714 4.270508 ## LOC101928826 4.219303 4.219670 4.213252 Check detail parameters of the function # help(deconvo_tme) 5.4 Method 1: CIBERSORT cibersort&lt;-deconvo_tme(eset = eset_acrg, method = &quot;cibersort&quot;, arrays = TRUE, perm = 100 ) ## ## &gt;&gt;&gt; Running CIBERSORT # head(cibersort) res&lt;-cell_bar_plot(input = cibersort[1:12,], features = colnames(cibersort)[3:24], title = &quot;CIBERSORT Cell Fraction&quot;) ## There are seven categories you can choose: box, continue2, continue, random, heatmap, heatmap3, tidyheatmap ## &gt;&gt;&gt;&gt;=== Palette option for random: 1: palette1; 2: palette2; 3: palette3; 4: palette4 5.5 Method 2: EPIC # help(deconvo_epic) epic&lt;-deconvo_tme(eset = eset_acrg, method = &quot;epic&quot;, arrays = TRUE) ## ## &gt;&gt;&gt; Running EPIC ## Warning in IOBR::EPIC(bulk = eset, reference = ref, mRNA_cell = NULL, scaleExprs = TRUE): The optimization didn&#39;t fully converge for some samples: ## GSM1523744; GSM1523746; GSM1523781; GSM1523786 ## - check fit.gof for the convergeCode and convergeMessage ## Warning in IOBR::EPIC(bulk = eset, reference = ref, mRNA_cell = NULL, ## scaleExprs = TRUE): mRNA_cell value unknown for some cell types: CAFs, ## Endothelial - using the default value of 0.4 for these but this might bias the ## true cell proportions from all cell types. head(epic) ## # A tibble: 6 × 9 ## ID Bcells_EPIC CAFs_EPIC CD4_Tcells_EPIC CD8_Tcells_EPIC Endothelial_EPIC ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 GSM152… 0.0292 0.00888 0.145 0.0756 0.0876 ## 2 GSM152… 0.0293 0.0109 0.159 0.0745 0.0954 ## 3 GSM152… 0.0308 0.0106 0.149 0.0732 0.0941 ## 4 GSM152… 0.0273 0.0108 0.145 0.0704 0.0860 ## 5 GSM152… 0.0280 0.0111 0.151 0.0707 0.0928 ## 6 GSM152… 0.0320 0.00958 0.148 0.0716 0.0907 ## # ℹ 3 more variables: Macrophages_EPIC &lt;dbl&gt;, NKcells_EPIC &lt;dbl&gt;, ## # otherCells_EPIC &lt;dbl&gt; 5.6 Method 3: MCPcounter mcp&lt;-deconvo_tme(eset = eset_acrg, method = &quot;mcpcounter&quot;) ## ## &gt;&gt;&gt; Running MCP-counter head(mcp) ## # A tibble: 6 × 11 ## ID T_cells_MCPcounter CD8_T_cells_MCPcounter Cytotoxic_lymphocytes_M…¹ ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 GSM1523727 1.47 1.11 1.33 ## 2 GSM1523728 1.53 1.05 1.60 ## 3 GSM1523729 1.47 1.07 1.37 ## 4 GSM1523744 1.46 1.02 1.44 ## 5 GSM1523745 1.51 1.10 1.49 ## 6 GSM1523746 1.51 0.992 1.40 ## # ℹ abbreviated name: ¹​Cytotoxic_lymphocytes_MCPcounter ## # ℹ 7 more variables: B_lineage_MCPcounter &lt;dbl&gt;, NK_cells_MCPcounter &lt;dbl&gt;, ## # Monocytic_lineage_MCPcounter &lt;dbl&gt;, ## # Myeloid_dendritic_cells_MCPcounter &lt;dbl&gt;, Neutrophils_MCPcounter &lt;dbl&gt;, ## # Endothelial_cells_MCPcounter &lt;dbl&gt;, Fibroblasts_MCPcounter &lt;dbl&gt; 5.7 Method 4: xCELL xcell&lt;-deconvo_tme(eset = eset_acrg, method = &quot;xcell&quot;, arrays = TRUE) head(xcell) ## # A tibble: 6 × 68 ## ID aDC_xCell Adipocytes_xCell Astrocytes_xCell `B-cells_xCell` ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 GSM1523727 0 0.000346 3.06e-20 4.10e- 5 ## 2 GSM1523728 0.000221 0.000255 0 4.89e- 5 ## 3 GSM1523729 0.0000141 0.000490 5.19e-20 5.24e-22 ## 4 GSM1523744 0.000110 0.000395 2.34e-21 6.00e- 5 ## 5 GSM1523745 0.000100 0.000259 0 2.39e- 5 ## 6 GSM1523746 0.0000415 0.000266 3.90e-20 6.37e- 5 ## # ℹ 63 more variables: Basophils_xCell &lt;dbl&gt;, ## # `CD4+_memory_T-cells_xCell` &lt;dbl&gt;, `CD4+_naive_T-cells_xCell` &lt;dbl&gt;, ## # `CD4+_T-cells_xCell` &lt;dbl&gt;, `CD4+_Tcm_xCell` &lt;dbl&gt;, `CD4+_Tem_xCell` &lt;dbl&gt;, ## # `CD8+_naive_T-cells_xCell` &lt;dbl&gt;, `CD8+_T-cells_xCell` &lt;dbl&gt;, ## # `CD8+_Tcm_xCell` &lt;dbl&gt;, `CD8+_Tem_xCell` &lt;dbl&gt;, cDC_xCell &lt;dbl&gt;, ## # Chondrocytes_xCell &lt;dbl&gt;, `Class-switched_memory_B-cells_xCell` &lt;dbl&gt;, ## # CLP_xCell &lt;dbl&gt;, CMP_xCell &lt;dbl&gt;, DC_xCell &lt;dbl&gt;, … 5.8 Method 5: ESTIMATE estimate&lt;-deconvo_tme(eset = eset_acrg, method = &quot;estimate&quot;) ## [1] &quot;Merged dataset includes 9940 genes (472 mismatched).&quot; ## [1] &quot;1 gene set: StromalSignature overlap= 136&quot; ## [1] &quot;2 gene set: ImmuneSignature overlap= 138&quot; head(estimate) ## # A tibble: 6 × 5 ## ID StromalScore_estimate ImmuneScore_estimate ESTIMATEScore_estimate ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 GSM1523727 -1250. 268. -982. ## 2 GSM1523728 197. 1334. 1531. ## 3 GSM1523729 -111. 822. 711. ## 4 GSM1523744 -119. 662. 544. ## 5 GSM1523745 324. 1015. 1339. ## 6 GSM1523746 -594. 621. 27.0 ## # ℹ 1 more variable: TumorPurity_estimate &lt;dbl&gt; 5.9 Method 6: TIMER timer&lt;-deconvo_tme(eset = eset_acrg, method = &quot;timer&quot;, group_list = rep(&quot;stad&quot;,dim(eset_acrg)[2])) ## [1] &quot;Outlier genes: AGR2 B2M COL1A2 COL3A1 COX2 CYAT1 EEF1A1 EIF1 FTH1 GKN1 HUWE1 IGK IGLC1 LIPF LOC101060363 LOC101928826 MIR8071-2 ND4 PABPC1 PABPC3 PGA4 RPL13AP5 RPL37 RPL37A RPL41 RPL7 RPS10 RPS16 RPS17 RPS18 RPS19 S100A6 S100A9 SH3KBP1 SNORD24 SNORD42A SNORD54 SNORD73A SPINK1 SPINK4 TFF1 UQCRFS1&quot; head(timer) ## # A tibble: 6 × 7 ## ID B_cell_TIMER T_cell_CD4_TIMER T_cell_CD8_TIMER Neutrophil_TIMER ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 GSM1523727 0.104 0.128 0.183 0.108 ## 2 GSM1523728 0.103 0.130 0.192 0.118 ## 3 GSM1523729 0.106 0.130 0.190 0.110 ## 4 GSM1523744 0.101 0.126 0.187 0.111 ## 5 GSM1523745 0.104 0.127 0.191 0.116 ## 6 GSM1523746 0.105 0.129 0.192 0.111 ## # ℹ 2 more variables: Macrophage_TIMER &lt;dbl&gt;, DC_TIMER &lt;dbl&gt; 5.10 Method 7: quanTIseq quantiseq&lt;-deconvo_tme(eset = eset_acrg, tumor = TRUE, arrays = TRUE, scale_mrna = TRUE, method = &quot;quantiseq&quot;) ## ## Running quanTIseq deconvolution module ## Gene expression normalization and re-annotation (arrays: TRUE) ## Removing 17 genes with high expression in tumors ## Signature genes found in data set: 152/153 (99.35%) ## Mixture deconvolution (method: lsei) ## Deconvolution sucessful! head(quantiseq) ## # A tibble: 6 × 12 ## ID B_cells_quantiseq Macrophages_M1_quantiseq Macrophages_M2_quantiseq ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 GSM1523727 0.0983 0.0510 0.0598 ## 2 GSM1523728 0.0967 0.0795 0.0607 ## 3 GSM1523729 0.102 0.0450 0.0758 ## 4 GSM1523744 0.0954 0.0725 0.0579 ## 5 GSM1523745 0.0991 0.0669 0.0613 ## 6 GSM1523746 0.105 0.0453 0.0662 ## # ℹ 8 more variables: Monocytes_quantiseq &lt;dbl&gt;, Neutrophils_quantiseq &lt;dbl&gt;, ## # NK_cells_quantiseq &lt;dbl&gt;, T_cells_CD4_quantiseq &lt;dbl&gt;, ## # T_cells_CD8_quantiseq &lt;dbl&gt;, Tregs_quantiseq &lt;dbl&gt;, ## # Dendritic_cells_quantiseq &lt;dbl&gt;, Other_quantiseq &lt;dbl&gt; res&lt;-cell_bar_plot(input = quantiseq[1:12, ], id = &quot;ID&quot;, features = colnames(quantiseq)[2:12], title = &quot;quanTIseq Cell Fraction&quot;) ## There are seven categories you can choose: box, continue2, continue, random, heatmap, heatmap3, tidyheatmap ## &gt;&gt;&gt;&gt;=== Palette option for random: 1: palette1; 2: palette2; 3: palette3; 4: palette4 5.11 Method 8: IPS ips&lt;-deconvo_tme(eset = eset_acrg, method = &quot;ips&quot;, plot= FALSE) head(ips) ## # A tibble: 6 × 7 ## ID MHC_IPS EC_IPS SC_IPS CP_IPS AZ_IPS IPS_IPS ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 GSM1523727 2.25 0.404 -0.192 0.220 2.68 9 ## 2 GSM1523728 2.37 0.608 -0.578 -0.234 2.17 7 ## 3 GSM1523729 2.10 0.480 -0.322 0.0993 2.36 8 ## 4 GSM1523744 2.12 0.535 -0.333 0.0132 2.34 8 ## 5 GSM1523745 1.91 0.559 -0.479 0.0880 2.08 7 ## 6 GSM1523746 1.94 0.458 -0.346 0.261 2.31 8 5.12 Combination of above deconvolution results tme_combine&lt;-cibersort %&gt;% inner_join(.,mcp,by = &quot;ID&quot;) %&gt;% inner_join(.,xcell,by = &quot;ID&quot;) %&gt;% inner_join(.,epic,by = &quot;ID&quot;) %&gt;% inner_join(.,estimate,by = &quot;ID&quot;) %&gt;% inner_join(.,timer,by = &quot;ID&quot;) %&gt;% inner_join(.,quantiseq,by = &quot;ID&quot;) %&gt;% inner_join(.,ips,by = &quot;ID&quot;) dim(tme_combine) ## [1] 50 138 5.13 How to customise the signature matrix for SVR and lesi algorithm The recent surge in single-cell RNA sequencing has enabled us to identify novel microenvironmental cells, tumour microenvironmental characteristics, and tumour clonal signatures with high resolution. It is necessary to scrutinize, confirm and depict these features attained from high-dimensional single-cell information in bulk-seq with extended specimen sizes for clinical phenotyping. This is a demonstration using the results of 10X single-cell sequencing data of PBMC to construct gene signature matrix for deconvo_tme function and estimate the abundance of these cell types in bulk transcriptome data. Download PBMC dataset through: https://cf.10xgenomics.com/samples/cell/pbmc3k/pbmc3k_filtered_gene_bc_matrices.tar.gz Initialize the Seurat object with the raw (non-normalized data). library(Seurat) pbmc.data &lt;- Read10X(data.dir = &quot;./pbmc3k_filtered_gene_bc_matrices/filtered_gene_bc_matrices/hg19&quot;) pbmc &lt;- CreateSeuratObject(counts = pbmc.data, project = &quot;pbmc3k&quot;, min.cells = 3, min.features = 200) Data prepare using Seurat’s standard pipeline. pbmc &lt;- FindVariableFeatures(pbmc, selection.method = &quot;vst&quot;, nfeatures = 2000, verbose = FALSE) pbmc &lt;- NormalizeData(pbmc, normalization.method = &quot;LogNormalize&quot;, scale.factor = 10000, verbose = FALSE) pbmc &lt;- ScaleData(pbmc, features = rownames(pbmc), verbose = FALSE) pbmc &lt;- RunPCA(pbmc, features = VariableFeatures(object = pbmc), verbose = FALSE) pbmc &lt;- FindNeighbors(pbmc, dims = 1:10, verbose = FALSE) pbmc &lt;- FindClusters(pbmc, resolution = 0.5, verbose = FALSE) # Annotate cells according to seurat&#39;s tutorials # https://satijalab.org/seurat/articles/pbmc3k_tutorial new.cluster.ids &lt;- c(&quot;Naive_CD4_T&quot;, &quot;CD14_Mono&quot;, &quot;Memory_CD4_T&quot;, &quot;Bcells&quot;, &quot;CD8_Tcell&quot;, &quot;FCGR3A_Mono&quot;, &quot;NK&quot;, &quot;DC&quot;, &quot;Platelet&quot;) names(new.cluster.ids) &lt;- levels(pbmc$seurat_clusters) pbmc &lt;- RenameIdents(pbmc, new.cluster.ids) pbmc$celltype &lt;- Idents(pbmc) Generate reference matrix using generateRef_seurat function. sm&lt;- generateRef_seurat(sce = pbmc, celltype = &quot;celltype&quot;, slot_out = &quot;data&quot;) ## &gt;&gt;&gt;---Assay used to find markers: ## [1] &quot;&gt;&gt;&gt;&gt;&gt; RNA&quot; ## ## Bcells CD14_Mono CD8_Tcell DC FCGR3A_Mono Memory_CD4_T ## 349 491 339 36 159 467 ## Naive_CD4_T NK Platelet ## 696 148 15 ## &gt;&gt;&gt; Find markers of each celltype... ## p_val avg_log2FC pct.1 pct.2 p_val_adj cluster gene ## RPS6 5.433910e-142 0.6874852 0.999 0.994 7.452065e-138 Naive_CD4_T RPS6 ## RPL32 5.645212e-138 0.6331843 0.999 0.995 7.741843e-134 Naive_CD4_T RPL32 ## RPS12 5.615968e-137 0.7246307 1.000 0.990 7.701739e-133 Naive_CD4_T RPS12 ## RPS27 1.903184e-131 0.7039172 0.999 0.992 2.610026e-127 Naive_CD4_T RPS27 ## RPS25 2.355892e-127 0.7846319 0.997 0.973 3.230871e-123 Naive_CD4_T RPS25 ## RPL31 3.961343e-121 0.7725688 0.996 0.963 5.432585e-117 Naive_CD4_T RPL31 ## # A tibble: 450 × 7 ## # Groups: cluster [9] ## p_val avg_log2FC pct.1 pct.2 p_val_adj cluster gene ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;fct&gt; &lt;chr&gt; ## 1 5.43e-142 0.687 0.999 0.994 7.45e-138 Naive_CD4_T RPS6 ## 2 5.62e-137 0.725 1 0.99 7.70e-133 Naive_CD4_T RPS12 ## 3 1.90e-131 0.704 0.999 0.992 2.61e-127 Naive_CD4_T RPS27 ## 4 2.36e-127 0.785 0.997 0.973 3.23e-123 Naive_CD4_T RPS25 ## 5 3.96e-121 0.773 0.996 0.963 5.43e-117 Naive_CD4_T RPL31 ## 6 1.74e-113 0.743 0.996 0.969 2.38e-109 Naive_CD4_T RPL9 ## 7 1.08e-104 0.779 0.996 0.974 1.48e-100 Naive_CD4_T RPS3A ## 8 3.04e-104 1.11 0.895 0.592 4.16e-100 Naive_CD4_T LDHB ## 9 8.09e-101 0.749 0.996 0.964 1.11e- 96 Naive_CD4_T RPS27A ## 10 5.99e- 90 0.688 0.986 0.956 8.22e- 86 Naive_CD4_T RPS13 ## # ℹ 440 more rows ## &gt;&gt;&gt;-- Aggreating scRNAseq data... ## &gt;&gt;&gt;-- `orig.ident` was set as group. User can define through parameter `celltype` ... Load the bulk RNA-seq data data(eset_stad, package = &quot;IOBR&quot;) eset &lt;- count2tpm(countMat = eset_stad, source = &quot;local&quot;, idType = &quot;ensembl&quot;) svr&lt;- deconvo_tme(eset = eset, reference = sm, method = &quot;svr&quot;, arrays = FALSE, absolute.mode = FALSE, perm = 100) head(svr) ## # A tibble: 6 × 13 ## ID Naive-CD4-T_CIBERSOR…¹ `CD14-Mono_CIBERSORT` Memory-CD4-T_CIBERSO…² ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 TCGA-BR-6… 0.371 0 0 ## 2 TCGA-BR-7… 0 0 0.182 ## 3 TCGA-BR-8… 0.513 0 0 ## 4 TCGA-BR-8… 0.615 0 0 ## 5 TCGA-BR-8… 0.471 0 0 ## 6 TCGA-BR-8… 0 0 0.0917 ## # ℹ abbreviated names: ¹​`Naive-CD4-T_CIBERSORT`, ²​`Memory-CD4-T_CIBERSORT` ## # ℹ 9 more variables: Bcells_CIBERSORT &lt;dbl&gt;, `CD8-Tcell_CIBERSORT` &lt;dbl&gt;, ## # `FCGR3A-Mono_CIBERSORT` &lt;dbl&gt;, NK_CIBERSORT &lt;dbl&gt;, DC_CIBERSORT &lt;dbl&gt;, ## # Platelet_CIBERSORT &lt;dbl&gt;, `P-value_CIBERSORT` &lt;dbl&gt;, ## # Correlation_CIBERSORT &lt;dbl&gt;, RMSE_CIBERSORT &lt;dbl&gt; res&lt;-cell_bar_plot(input = svr, features = colnames(svr)[2:10], title = &quot;SVR Cell Fraction&quot;) 5.14 References If you use this package in your work, please cite both our package and the method(s) you are using. Citation and licenses of these deconvolution methods CIBERSORT; free for non-commerical use only; Newman, A. M., Liu, C. L., Green, M. R., Gentles, A. J., Feng, W., Xu, Y., … Alizadeh, A. A. (2015). Robust enumeration of cell subsets from tissue expression profiles. Nature Methods, 12(5), 453–457. https://doi.org/10.1038/nmeth.3337; ESTIMATE; free (GPL2.0); Vegesna R, Kim H, Torres-Garcia W, …, Verhaak R. (2013). Inferring tumour purity and stromal and immune cell admixture from expression data. Nature Communications 4, 2612. http://doi.org/10.1038/ncomms3612; quanTIseq; free (BSD); Finotello, F., Mayer, C., Plattner, C., Laschober, G., Rieder, D., Hackl, H., …, Sopper, S. (2019). Molecular and pharmacological modulators of the tumor immune contexture revealed by deconvolution of RNA-seq data. Genome medicine, 11(1), 34. https://doi.org/10.1186/s13073-019-0638-6; TIMER; free (GPL 2.0); Li, B., Severson, E., Pignon, J.-C., Zhao, H., Li, T., Novak, J., … Liu, X. S. (2016). Comprehensive analyses of tumor immunity: implications for cancer immunotherapy. Genome Biology, 17(1), 174. https://doi.org/10.1186/s13059-016-1028-7; IPS; free (BSD); P. Charoentong et al., Pan-cancer Immunogenomic Analyses Reveal Genotype-Immunophenotype Relationships and Predictors of Response to Checkpoint Blockade. Cell Reports 18, 248-262 (2017). https://doi.org/10.1016/j.celrep.2016.12.019; MCPCounter; free (GPL 3.0); Becht, E., Giraldo, N. A., Lacroix, L., Buttard, B., Elarouci, N., Petitprez, F., … de Reyniès, A. (2016). Estimating the population abundance of tissue-infiltrating immune and stromal cell populations using gene expression. Genome Biology, 17(1), 218. https://doi.org/10.1186/s13059-016-1070-5; xCell; free (GPL 3.0); Aran, D., Hu, Z., &amp; Butte, A. J. (2017). xCell: digitally portraying the tissue cellular heterogeneity landscape. Genome Biology, 18(1), 220. https://doi.org/10.1186/s13059-017-1349-1; EPIC; free for non-commercial use only (Academic License); Racle, J., de Jonge, K., Baumgaertner, P., Speiser, D. E., &amp; Gfeller, D. (2017). Simultaneous enumeration of cancer and immune cell types from bulk tumor gene expression data. ELife, 6, e26476. https://doi.org/10.7554/eLife.26476; GSVA free (GPL (&gt;= 2)) Hänzelmann S, Castelo R, Guinney J (2013). “GSVA: gene set variation analysis for microarray and RNA-Seq data.” BMC Bioinformatics, 14, 7. doi: 10.1186/1471-2105-14-7, http://www.biomedcentral.com/1471-2105/14/7 "],["signature-score-and-relevant-phenotypes.html", "Chapter 6 Signature Score and Relevant phenotypes 6.1 Loading packages 6.2 Downloading data for example 6.3 Gene Annotation 6.4 Estimation of signatures 6.5 Combining score data and phenotype data 6.6 Identifying features associated with survival 6.7 Visulization using heatmap 6.8 Focus on target signatures 6.9 Survival analysis and visulization 6.10 Batch correlation analysis 6.11 Reference", " Chapter 6 Signature Score and Relevant phenotypes 6.1 Loading packages Load the IOBR package in your R session after the installation is complete: library(IOBR) library(survminer) library(tidyverse) 6.2 Downloading data for example Obtaining data set from GEO Gastric cancer: GSE62254 using GEOquery R package. if (!requireNamespace(&quot;GEOquery&quot;, quietly = TRUE)) BiocManager::install(&quot;GEOquery&quot;) library(&quot;GEOquery&quot;) # NOTE: This process may take a few minutes which depends on the internet connection speed. Please wait for its completion. eset_geo &lt;- getGEO(GEO = &quot;GSE62254&quot;, getGPL = F, destdir = &quot;./&quot;) eset &lt;- eset_geo[[1]] eset &lt;- exprs(eset) eset[1:5,1:5] ## GSM1523727 GSM1523728 GSM1523729 GSM1523744 GSM1523745 ## 1007_s_at 3.2176645 3.0624323 3.0279131 2.921683 2.8456013 ## 1053_at 2.4050109 2.4394879 2.2442708 2.345916 2.4328582 ## 117_at 1.4933412 1.8067380 1.5959665 1.839822 1.8326058 ## 121_at 2.1965561 2.2812181 2.1865556 2.258599 2.1874363 ## 1255_g_at 0.8698382 0.9502466 0.8125414 1.012860 0.9441993 6.3 Gene Annotation Annotation of genes in the expression matrix and removal of duplicate genes. # Load the annotation file `anno_hug133plus2` in IOBR. head(anno_hug133plus2) ## # A tibble: 6 × 2 ## probe_id symbol ## &lt;fct&gt; &lt;fct&gt; ## 1 1007_s_at MIR4640 ## 2 1053_at RFC2 ## 3 117_at HSPA6 ## 4 121_at PAX8 ## 5 1255_g_at GUCA1A ## 6 1294_at MIR5193 # Conduct gene annotation using `anno_hug133plus2` file; If identical gene symbols exists, these genes would be ordered by the mean expression levels. The gene symbol with highest mean expression level is selected and remove others. eset&lt;-anno_eset(eset = eset, annotation = anno_hug133plus2, symbol = &quot;symbol&quot;, probe = &quot;probe_id&quot;, method = &quot;mean&quot;) eset[1:5, 1:3] ## GSM1523727 GSM1523728 GSM1523729 ## SH3KBP1 4.327974 4.316195 4.351425 ## RPL41 4.246149 4.246808 4.257940 ## EEF1A1 4.293762 4.291038 4.262199 ## COX2 4.250288 4.283714 4.270508 ## LOC101928826 4.219303 4.219670 4.213252 6.4 Estimation of signatures sig_tme&lt;-calculate_sig_score(pdata = NULL, eset = eset, signature = signature_collection, method = &quot;pca&quot;, mini_gene_count = 2) sig_tme &lt;- t(column_to_rownames(sig_tme, var = &quot;ID&quot;)) sig_tme[1:5, 1:3] ## GSM1523727 GSM1523728 GSM1523729 ## CD_8_T_effector -2.5513794 0.7789141 -2.1770675 ## DDR -0.8747614 0.7425162 -1.3272054 ## APM 1.1098368 2.1988688 -0.9516419 ## Immune_Checkpoint -2.3701787 0.9455120 -1.4844104 ## CellCycle_Reg 0.1063358 0.7583302 -0.3649795 6.5 Combining score data and phenotype data data(&quot;pdata_acrg&quot;, package = &quot;IOBR&quot;) head(pdata_acrg) ## ID ProjectID Technology platform Gender Age RFS_time ## 71 GSM1523727 GSE62254 Affymetrix HG-U133_Plus_2 M 67 3.97 ## 72 GSM1523728 GSE62254 Affymetrix HG-U133_Plus_2 F 68 4.03 ## 73 GSM1523729 GSE62254 Affymetrix HG-U133_Plus_2 F 42 74.97 ## 74 GSM1523744 GSE62254 Affymetrix HG-U133_Plus_2 M 69 89.77 ## 75 GSM1523745 GSE62254 Affymetrix HG-U133_Plus_2 M 68 84.60 ## 76 GSM1523746 GSE62254 Affymetrix HG-U133_Plus_2 M 56 5.77 ## RFS_status OS_time OS_status Lauren Differtiation AJCC_Stage_confuse ## 71 NA 88.73 0 Intestinal MD 2 ## 72 NA 88.23 0 Intestinal PD 2 ## 73 0 88.23 0 Diffuse PD 2 ## 74 0 105.70 0 Diffuse PD 2 ## 75 0 105.53 0 Diffuse PD 3 ## 76 1 25.50 1 Mixed PD 2 ## T_stage N_stage M_stage Lymph_node_examined Positive_lymph_nodes ## 71 2 1 0 20 3 ## 72 2 1 0 40 1 ## 73 2 1 0 21 1 ## 74 2 1 0 24 3 ## 75 3 2 0 52 11 ## 76 2 1 0 22 5 ## Revisedlocation MSI EBV Hpylori Subtype TP53mutated B.cells.naive ## 71 Body 1 0 NA MSI 0 0.006611704 ## 72 Body 1 NA NA MSI 0 0.000000000 ## 73 Antrum 0 0 0 MSS/TP53+ 1 0.003306927 ## 74 Antrum 1 0 1 MSI 0 0.000000000 ## 75 Antrum 0 0 NA MSS/TP53- 0 0.000000000 ## 76 Antrum 0 0 0 MSS/TP53- 0 0.013619480 ## B.cells.memory Plasma.cells T.cells.CD8 T.cells.CD4.naive ## 71 0.014570868 0.17555729 0.05712737 0 ## 72 0.036202099 0.08523233 0.05336971 0 ## 73 0.020935673 0.10489546 0.00000000 0 ## 74 0.072648177 0.08755997 0.03465107 0 ## 75 0.009798381 0.12251030 0.00000000 0 ## 76 0.012784581 0.15602714 0.00000000 0 ## T.cells.CD4.memory.resting T.cells.CD4.memory.activated ## 71 0.1439895 0.025159835 ## 72 0.1250515 0.049617381 ## 73 0.1849220 0.008407981 ## 74 0.1396439 0.055268600 ## 75 0.1916398 0.036578672 ## 76 0.1905921 0.008992440 ## T.cells.follicular.helper T.cells.regulatory..Tregs. T.cells.gamma.delta ## 71 0.02453957 0 0.00000000 ## 72 0.05318251 0 0.00000000 ## 73 0.05098080 0 0.03714459 ## 74 0.07825130 0 0.00000000 ## 75 0.02223859 0 0.02657259 ## 76 0.04740728 0 0.04283296 ## NK.cells.resting NK.cells.activated Monocytes Macrophages.M0 Macrophages.M1 ## 71 0.000000000 0.049325657 0 0.03865693 0.06910287 ## 72 0.000000000 0.081481924 0 0.07370723 0.08016443 ## 73 0.000000000 0.025252673 0 0.00000000 0.06161940 ## 74 0.000000000 0.016121853 0 0.08866391 0.08173804 ## 75 0.001738259 0.006267907 0 0.15255902 0.07161270 ## 76 0.000000000 0.052117471 0 0.10298038 0.03246627 ## Macrophages.M2 Dendritic.cells.resting Dendritic.cells.activated ## 71 0.1829208 0.0000000 0.022904531 ## 72 0.1320919 0.0000000 0.060491149 ## 73 0.1170839 0.1171129 0.032385282 ## 74 0.1441202 0.0000000 0.060937005 ## 75 0.1919279 0.0000000 0.006087801 ## 76 0.1093805 0.0000000 0.023914527 ## Mast.cells.resting Mast.cells.activated Eosinophils Neutrophils.x P.value ## 71 0.069286038 0.000000000 0.006315889 0.11393115 0 ## 72 0.003322764 0.005197745 0.056141443 0.10474585 0 ## 73 0.052571970 0.000000000 0.104493538 0.07888690 0 ## 74 0.012494201 0.006833953 0.050435095 0.07063272 0 ## 75 0.000000000 0.033928747 0.017164438 0.10937487 0 ## 76 0.014373257 0.002764802 0.115772442 0.07397439 0 ## Pearson.Correlation RMSE T.cells CD8.T.cells Cytotoxic.lymphocytes ## 71 0.3359926 0.9415173 -0.9275804 0.8492914 -1.1005262 ## 72 0.4793134 0.8827802 -0.5306279 -0.2017907 0.1858499 ## 73 0.3638005 0.9308186 -0.9566316 0.2411951 -0.8800338 ## 74 0.3569989 0.9332100 -1.0464552 -0.5771205 -0.5619472 ## 75 0.4226987 0.9062522 -0.6796120 0.6670229 -0.3361456 ## 76 0.4113346 0.9112588 -0.6978480 -1.1110102 -0.7631710 ## NK.cells B.lineage Monocytic.lineage Myeloid.dendritic.cells ## 71 -0.083623737 -0.54974243 -1.40389061 -0.7589211 ## 72 0.156167025 -0.33750363 -0.03696397 -0.6393975 ## 73 0.003538847 0.01597566 -0.67105808 0.7452174 ## 74 -0.010774923 -0.56740438 0.06877240 -0.2511140 ## 75 -0.028429092 -0.73180429 0.21574792 -0.1165082 ## 76 0.466964699 0.15583392 -0.97524359 -0.7448360 ## Neutrophils.y Endothelial.cells Fibroblasts StromalScore ImmuneScore ## 71 -0.9527759 -1.42753593 -1.22754105 -1.8047694 -1.3347047 ## 72 0.5640500 -0.17320689 0.41586717 0.1825225 0.1950604 ## 73 -0.3415288 -0.25784297 0.04110246 -0.1863425 -0.4960305 ## 74 -1.2984378 -1.05394707 0.00743277 -0.2731398 -0.7950682 ## 75 0.4227674 0.03025664 0.32245183 0.3165798 -0.2416774 ## 76 -0.4411653 -0.29582293 -0.68833740 -0.9119449 -0.8475150 ## ESTIMATEScore TumorPurity ProjectID2 TMEscoreA TMEscoreB TMEscore ## 71 -1.70632719 1.1687573 GSE62254 -1.06110812 -1.270222413 0.60585688 ## 72 0.20292720 NA GSE62254 1.14698153 -0.333585646 0.73717229 ## 73 -0.35721073 -1.3859061 GSE62254 -0.89026369 -0.007906066 -0.35452887 ## 74 -0.55795758 -0.9855180 GSE62254 -0.01116022 -0.984841623 0.79880007 ## 75 0.05885805 NA GSE62254 -0.27102383 -0.017592784 -0.09554256 ## 76 -0.94967710 -0.2162267 GSE62254 -0.94526260 0.161818627 -0.51527214 ## TMEscore_binary ## 71 Low ## 72 High ## 73 Low ## 74 High ## 75 Low ## 76 Low input &lt;- combine_pd_eset(eset = sig_tme, pdata = pdata_acrg, scale = T) 6.6 Identifying features associated with survival res&lt;- batch_surv(pdata = input, time = &quot;OS_time&quot;, status = &quot;OS_status&quot;, variable = colnames(input)[69:ncol(input)]) head(res) ## # A tibble: 6 × 5 ## ID P HR CI_low_0.95 CI_up_0.95 ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Folate_biosynthesis 1.00e-10 0.579 0.490 0.683 ## 2 TMEscore_CIR 1.32e- 9 0.640 0.554 0.739 ## 3 Glycogen_Biosynthesis 3.24e- 9 1.52 1.32 1.74 ## 4 Pan_F_TBRs 6.33e- 9 1.55 1.34 1.80 ## 5 TMEscoreB_CIR 7.17e- 9 1.52 1.32 1.75 ## 6 TMEscore_plus 8.08e- 9 0.638 0.547 0.743 Use forest plots sig_forest to show the most relevant variables to overall survival res&lt;- res[nchar(res$ID)&lt;=28, ] p1&lt;- sig_forest(res, signature = &quot;ID&quot;, n = 20) 6.7 Visulization using heatmap Relationship between Signatures and molecular typing. Heatmap visualisation using IOBR’s sig_heatmap p2 &lt;- sig_heatmap(input = input, features = res$ID[1:20], group = &quot;Subtype&quot;, palette_group = &quot;jama&quot;, palette = 6, path = &quot;result&quot; ) 6.8 Focus on target signatures p1 &lt;- sig_box(data = input, signature = &quot;Glycogen_Biosynthesis&quot;, variable = &quot;Subtype&quot;, jitter = FALSE, cols = NULL, palette = &quot;jama&quot;, show_pvalue = TRUE, size_of_pvalue = 5, hjust = 1, angle_x_text = 60, size_of_font = 8) ## # A tibble: 6 × 8 ## .y. group1 group2 p p.adj p.format p.signif method ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 signature EMT MSI 5.39e-15 3.20e-14 5.4e-15 **** Wilcoxon ## 2 signature EMT MSS/TP53- 5.53e-13 2.8 e-12 5.5e-13 **** Wilcoxon ## 3 signature EMT MSS/TP53+ 1.90e-12 7.6 e-12 1.9e-12 **** Wilcoxon ## 4 signature MSI MSS/TP53- 1.14e- 3 3.4 e- 3 0.0011 ** Wilcoxon ## 5 signature MSI MSS/TP53+ 7.05e- 3 1.4 e- 2 0.0071 ** Wilcoxon ## 6 signature MSS/TP53- MSS/TP53+ 7.16e- 1 7.2 e- 1 0.7161 ns Wilcoxon p2 &lt;- sig_box(data = input, signature = &quot;Pan_F_TBRs&quot;, variable = &quot;Subtype&quot;, jitter = FALSE, cols = NULL, palette = &quot;jama&quot;, show_pvalue = TRUE, angle_x_text = 60, hjust = 1, size_of_pvalue = 5, size_of_font = 8) ## # A tibble: 6 × 8 ## .y. group1 group2 p p.adj p.format p.signif method ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 signature EMT MSI 7.98e-17 3.20e-16 &lt;2e-16 **** Wilcoxon ## 2 signature EMT MSS/TP53- 1.70e-17 1 e-16 &lt;2e-16 **** Wilcoxon ## 3 signature EMT MSS/TP53+ 2.57e-17 1.3 e-16 &lt;2e-16 **** Wilcoxon ## 4 signature MSI MSS/TP53- 1.32e- 2 4 e- 2 0.013 * Wilcoxon ## 5 signature MSI MSS/TP53+ 6.99e- 2 1.4 e- 1 0.070 ns Wilcoxon ## 6 signature MSS/TP53- MSS/TP53+ 4.02e- 1 4 e- 1 0.402 ns Wilcoxon p3 &lt;- sig_box(data = input, signature = &quot;Immune_Checkpoint&quot;, variable = &quot;Subtype&quot;, jitter = FALSE, cols = NULL, palette = &quot;jama&quot;, show_pvalue = TRUE, angle_x_text = 60, hjust = 1, size_of_pvalue = 5, size_of_font = 8) ## # A tibble: 6 × 8 ## .y. group1 group2 p p.adj p.format p.signif method ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 signature EMT MSI 2.20e- 2 0.044 0.0220 * Wilcoxon ## 2 signature EMT MSS/TP53- 2.11e- 3 0.0085 0.0021 ** Wilcoxon ## 3 signature EMT MSS/TP53+ 4.03e- 1 0.4 0.4026 ns Wilcoxon ## 4 signature MSI MSS/TP53- 9.13e-10 0.0000000055 9.1e-10 **** Wilcoxon ## 5 signature MSI MSS/TP53+ 5.03e- 4 0.0025 0.0005 *** Wilcoxon ## 6 signature MSS/TP53- MSS/TP53+ 4.82e- 3 0.014 0.0048 ** Wilcoxon p1|p2|p3 6.9 Survival analysis and visulization 6.9.1 Kaplan-Meier plot Displaying the outcomes of survival analyses using Kaplan-Meier plot. Multiple stratifications of the signature were used to judge the efficacy of this metric in predicting patient survival. res &lt;- sig_surv_plot(input_pdata = input, signature = &quot;Glycogen_Biosynthesis&quot;, cols = NULL, palette = &quot;jama&quot;, project = &quot;ACRG&quot;, time = &quot;OS_time&quot;, status = &quot;OS_status&quot;, time_type = &quot;month&quot;, save_path = &quot;result&quot;) ## ID time status Glycogen_Biosynthesis group3 group2 bestcutoff ## 1 GSM1523727 88.73 0 -0.3612213 Middle Low Low ## 2 GSM1523728 88.23 0 -0.6926726 Low Low Low ## 3 GSM1523729 88.23 0 -0.9388531 Low Low Low ## 4 GSM1523744 105.70 0 -1.1825136 Low Low Low ## 5 GSM1523745 105.53 0 -0.3034304 Middle Low Low ## 6 GSM1523746 25.50 1 0.7517934 High High High ## [1] &quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot; res$plots 6.9.2 Time-Dependent ROC curve p1&lt;- roc_time(input = input, vars = &quot;Glycogen_Biosynthesis&quot;, time = &quot;OS_time&quot;, status = &quot;OS_status&quot;, time_point = c(12, 24, 36), time_type = &quot;month&quot;, palette = &quot;jama&quot;, cols = &quot;normal&quot;, seed = 1234, show_col = FALSE, path = &quot;result&quot;, main = &quot;OS&quot;, index = 1, fig.type = &quot;pdf&quot;, width = 5, height = 5.2) ## [1] &quot;&gt;&gt;&gt;-- Range of Time: &quot; ## [1] 1.0 105.7 p2&lt;- roc_time(input = input, vars = &quot;Glycogen_Biosynthesis&quot;, time = &quot;RFS_time&quot;, status = &quot;RFS_status&quot;, time_point = c(12, 24, 36), time_type = &quot;month&quot;, palette = &quot;jama&quot;, cols = &quot;normal&quot;, seed = 1234, show_col = FALSE, path = &quot;result&quot;, main = &quot;OS&quot;, index = 1, fig.type = &quot;pdf&quot;, width = 5, height = 5.2) ## [1] &quot;&gt;&gt;&gt;-- Range of Time: &quot; ## [1] 0.10 100.87 p1|p2 6.10 Batch correlation analysis 6.10.1 Finding continuity variables associated with signatures Identifying genes or signatures related to the target signatures 6.10.1.1 Correlation between two variables res &lt;- batch_cor(data = input, target = &quot;Glycogen_Biosynthesis&quot;, feature = colnames(input)[69:ncol(input)]) ## # A tibble: 6 × 6 ## sig_names p.value statistic p.adj log10pvalue stars ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;fct&gt; ## 1 TMEscoreB_CIR 8.89e-42 0.678 2.79e-39 41.1 **** ## 2 Glycine__Serine_and_Threonine_M… 7.49e-40 -0.666 1.18e-37 39.1 **** ## 3 Ether_Lipid_Metabolism 3.84e-39 0.662 4.02e-37 38.4 **** ## 4 MDSC_Peng_et_al 1.13e-38 0.659 8.88e-37 37.9 **** ## 5 Glycerophospholipid_Metabolism 8.72e-38 -0.653 5.47e-36 37.1 **** ## 6 TIP_Release_of_cancer_cell_anti… 2.32e-37 -0.650 1.21e-35 36.6 **** head(res) ## # A tibble: 6 × 6 ## sig_names p.value statistic p.adj log10pvalue stars ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;fct&gt; ## 1 TMEscoreB_CIR 8.89e-42 0.678 2.79e-39 41.1 **** ## 2 Glycine__Serine_and_Threonine_M… 7.49e-40 -0.666 1.18e-37 39.1 **** ## 3 Ether_Lipid_Metabolism 3.84e-39 0.662 4.02e-37 38.4 **** ## 4 MDSC_Peng_et_al 1.13e-38 0.659 8.88e-37 37.9 **** ## 5 Glycerophospholipid_Metabolism 8.72e-38 -0.653 5.47e-36 37.1 **** ## 6 TIP_Release_of_cancer_cell_anti… 2.32e-37 -0.650 1.21e-35 36.6 **** p1&lt;- get_cor(eset = sig_tme, pdata = pdata_acrg, is.matrix = TRUE, var1 = &quot;Glycogen_Biosynthesis&quot;, var2 = &quot;TMEscore_CIR&quot;, subtype = &quot;Subtype&quot;, palette = &quot;aaas&quot;, path = &quot;result&quot;) ## ## Spearman&#39;s rank correlation rho ## ## data: data[, var1] and data[, var2] ## S = 7282858, p-value &lt; 2.2e-16 ## alternative hypothesis: true rho is not equal to 0 ## sample estimates: ## rho ## -0.6184309 ## ## [1] &quot;&gt;&gt;&gt;--- The exact p value is: 4.78971420439895e-33&quot; ## EMT MSI MSS/TP53- MSS/TP53+ ## 46 68 107 79 p2&lt;- get_cor(eset = sig_tme, pdata = pdata_acrg, is.matrix = TRUE, var1 = &quot;Glycogen_Biosynthesis&quot;, var2 = &quot;TGFβ_myCAF&quot;, subtype = &quot;Subtype&quot;, palette = &quot;aaas&quot;, path = &quot;result&quot;) ## ## Spearman&#39;s rank correlation rho ## ## data: data[, var1] and data[, var2] ## S = 2430178, p-value &lt; 2.2e-16 ## alternative hypothesis: true rho is not equal to 0 ## sample estimates: ## rho ## 0.4599544 ## ## [1] &quot;&gt;&gt;&gt;--- The exact p value is: 4.1228739609711e-17&quot; ## EMT MSI MSS/TP53- MSS/TP53+ ## 46 68 107 79 p1|p2 6.10.1.2 Demonstrate correlation between multiple variables Visualisation via correlation matrix feas1 &lt;- c(&quot;Glycogen_Biosynthesis&quot;, &quot;Ferroptosis&quot;) feas2 &lt;- c(&quot;Glutathione_Metabolism&quot;, &quot;TMEscore_CIR&quot;, &quot;Purine_Metabolism&quot;, &quot;ICB_resistance_Peng_et_al&quot;, &quot;Interleukins_Li_et_al&quot;, &quot;TLS_Nature&quot;) p &lt;- get_cor_matrix(data = input, feas1 = feas2, feas2 = feas1, method = &quot;pearson&quot;, font.size.star = 8, font.size = 15, fill_by_cor = FALSE, round.num = 1, path = &quot;result&quot;) Demonstrate the correlation between signatures and genes input2 &lt;- combine_pd_eset(eset = eset, pdata = input[, c(&quot;ID&quot;, &quot;Glycogen_Biosynthesis&quot;, &quot;TLS_Nature&quot;, &quot;Ferroptosis&quot;)]) feas1 &lt;- c(&quot;Glycogen_Biosynthesis&quot;,&quot;TLS_Nature&quot;, &quot;Ferroptosis&quot;) feas2 &lt;- signature_collection$CD_8_T_effector feas2 ## [1] &quot;CD8A&quot; &quot;GZMA&quot; &quot;GZMB&quot; &quot;IFNG&quot; &quot;CXCL9&quot; &quot;CXCL10&quot; &quot;PRF1&quot; &quot;TBX21&quot; p &lt;- get_cor_matrix(data = input2, feas1 = feas2, feas2 = feas1, method = &quot;pearson&quot;, scale = T, font.size.star = 8, font.size = 15, fill_by_cor = FALSE, round.num = 1, path = &quot;result&quot;) Users can customize the image using parameters. p &lt;- get_cor_matrix(data = input2, feas1 = feas2, feas2 = feas1, method = &quot;pearson&quot;, scale = T, font.size.star = 8, font.size = 15, fill_by_cor = TRUE, round.num = 2, path = &quot;result&quot;) 6.10.2 Identifying Category Variables Linked to Signatures 6.10.2.1 For binary variable res &lt;- batch_wilcoxon(data = input, target = &quot;TMEscore_binary&quot;, feature = colnames(input)[69:ncol(input)]) ## ## High Low ## 71 228 head(res) ## # A tibble: 6 × 8 ## sig_names p.value High Low statistic p.adj log10pvalue stars ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;fct&gt; ## 1 TMEscore_CIR 4.44e-37 1.17 -0.365 1.54 1.40e-34 36.4 **** ## 2 TMEscore_plus 3.97e-34 1.23 -0.380 1.61 6.25e-32 33.4 **** ## 3 TMEscoreA_plus 1.68e-25 1.18 -0.359 1.54 1.77e-23 24.8 **** ## 4 TMEscoreB_CIR 5.59e-24 -0.881 0.279 -1.16 4.13e-22 23.3 **** ## 5 ADP_Ribosylation 6.56e-24 1.06 -0.329 1.39 4.13e-22 23.2 **** ## 6 TMEscoreA_CIR 1.02e-22 1.11 -0.337 1.45 4.68e-21 22.0 **** p1 &lt;- sig_box(data = input, signature = res$sig_names[1], variable = &quot;TMEscore_binary&quot;, jitter = FALSE, cols = NULL, palette = &quot;jco&quot;, show_pvalue = TRUE, size_of_pvalue = 5, hjust = 1, angle_x_text = 60, size_of_font = 8) ## # A tibble: 1 × 8 ## .y. group1 group2 p p.adj p.format p.signif method ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 signature High Low 4.44e-37 4.40e-37 &lt;2e-16 **** Wilcoxon p2 &lt;- sig_box(data = input, signature = res$sig_names[2], variable = &quot;TMEscore_binary&quot;, jitter = FALSE, cols = NULL, palette = &quot;jco&quot;, show_pvalue = TRUE, angle_x_text = 60, hjust = 1, size_of_pvalue = 5, size_of_font = 8) ## # A tibble: 1 × 8 ## .y. group1 group2 p p.adj p.format p.signif method ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 signature High Low 3.97e-34 4e-34 &lt;2e-16 **** Wilcoxon p3 &lt;- sig_box(data = input, signature = res$sig_names[3], variable = &quot;TMEscore_binary&quot;, jitter = FALSE, cols = NULL, palette = &quot;jco&quot;, show_pvalue = TRUE, angle_x_text = 60, hjust = 1, size_of_pvalue = 5, size_of_font = 8) ## # A tibble: 1 × 8 ## .y. group1 group2 p p.adj p.format p.signif method ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 signature High Low 1.68e-25 1.70e-25 &lt;2e-16 **** Wilcoxon p1|p2|p3 6.10.3 For multicategorical variables (&gt;2 subgroups) res &lt;- batch_kruskal(data = input, group = &quot;Subtype&quot;, feature = colnames(input)[69:ncol(input)]) ## ## EMT MSI MSS/TP53- MSS/TP53+ ## 46 68 107 79 head(res) ## # A tibble: 6 × 10 ## sig_names p.value EMT MSI `MSS/TP53-` `MSS/TP53+` mean p.adj ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 TMEscore_CIR 1.35e-28 -1.36 1.00 0.305 0.0577 -0.119 4.26e-26 ## 2 Ether_Lipid_Me… 4.37e-27 1.46 -0.830 -0.253 -0.375 0.165 5.71e-25 ## 3 TMEscoreB_CIR 5.88e-27 1.55 -0.829 -0.420 -0.303 0.169 5.71e-25 ## 4 Inositol_Phosp… 7.25e-27 1.53 -0.808 -0.315 -0.408 0.177 5.71e-25 ## 5 Selenocompound… 1.17e-26 -1.48 0.824 0.328 0.326 -0.163 7.38e-25 ## 6 Folate_biosynt… 1.63e-26 -1.12 1.05 0.127 -0.0573 -0.0792 7.57e-25 ## # ℹ 2 more variables: log10pvalue &lt;dbl&gt;, stars &lt;fct&gt; p1 &lt;- sig_box(data = input, signature = res$sig_names[1], variable = &quot;Subtype&quot;, jitter = FALSE, cols = NULL, palette = &quot;jco&quot;, show_pvalue = TRUE, size_of_pvalue = 5, hjust = 1, angle_x_text = 60, size_of_font = 8) ## # A tibble: 6 × 8 ## .y. group1 group2 p p.adj p.format p.signif method ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 signature EMT MSI 3.64e-17 2.20e-16 &lt; 2e-16 **** Wilcoxon ## 2 signature EMT MSS/TP53- 1.08e-13 3.20e-13 1.1e-13 **** Wilcoxon ## 3 signature EMT MSS/TP53+ 2.64e-14 1.10e-13 2.6e-14 **** Wilcoxon ## 4 signature MSI MSS/TP53- 1.27e-15 6.40e-15 1.3e-15 **** Wilcoxon ## 5 signature MSI MSS/TP53+ 5.96e- 9 1.20e- 8 6.0e-09 **** Wilcoxon ## 6 signature MSS/TP53- MSS/TP53+ 7.71e- 3 7.7 e- 3 0.0077 ** Wilcoxon p2 &lt;- sig_box(data = input, signature = res$sig_names[2], variable = &quot;Subtype&quot;, jitter = FALSE, cols = NULL, palette = &quot;jco&quot;, show_pvalue = TRUE, angle_x_text = 60, hjust = 1, size_of_pvalue = 5, size_of_font = 8) ## # A tibble: 6 × 8 ## .y. group1 group2 p p.adj p.format p.signif method ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 signature EMT MSI 3.76e-19 1.9 e-18 &lt; 2e-16 **** Wilcoxon ## 2 signature EMT MSS/TP53- 4.26e-20 2.6 e-19 &lt; 2e-16 **** Wilcoxon ## 3 signature EMT MSS/TP53+ 5.19e-18 2.10e-17 &lt; 2e-16 **** Wilcoxon ## 4 signature MSI MSS/TP53- 5.43e- 5 1.1 e- 4 5.4e-05 **** Wilcoxon ## 5 signature MSI MSS/TP53+ 2.12e- 7 6.40e- 7 2.1e-07 **** Wilcoxon ## 6 signature MSS/TP53- MSS/TP53+ 2.84e- 1 2.8 e- 1 0.28 ns Wilcoxon p3 &lt;- sig_box(data = input, signature = res$sig_names[3], variable = &quot;Subtype&quot;, jitter = FALSE, cols = NULL, palette = &quot;jco&quot;, show_pvalue = TRUE, angle_x_text = 60, hjust = 1, size_of_pvalue = 5, size_of_font = 8) ## # A tibble: 6 × 8 ## .y. group1 group2 p p.adj p.format p.signif method ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 signature EMT MSI 9.59e-19 4.80e-18 &lt; 2e-16 **** Wilcoxon ## 2 signature EMT MSS/TP53- 6.07e-19 3.60e-18 &lt; 2e-16 **** Wilcoxon ## 3 signature EMT MSS/TP53+ 2.89e-18 1.20e-17 &lt; 2e-16 **** Wilcoxon ## 4 signature MSI MSS/TP53- 1.48e- 7 4.50e- 7 1.5e-07 **** Wilcoxon ## 5 signature MSI MSS/TP53+ 1.44e- 5 2.90e- 5 1.4e-05 **** Wilcoxon ## 6 signature MSS/TP53- MSS/TP53+ 3.17e- 1 3.2 e- 1 0.32 ns Wilcoxon p1|p2|p3 6.11 Reference Cristescu, R., Lee, J., Nebozhyn, M. et al. Molecular analysis of gastric cancer identifies subtypes associated with distinct clinical outcomes. Nat Med 21, 449–456 (2015). https://doi.org/10.1038/nm.3850 Dongqiang Zeng, …, WJ Liao et al., Tumor Microenvironment Characterization in Gastric Cancer Identifies Prognostic and Immunotherapeutically Relevant Gene Signatures, Cancer Immunol Res (2019) 7 (5): 737–750. https://doi.org/10.1158/2326-6066.CIR-18-0436 "],["tme-interaction-analysis.html", "Chapter 7 TME Interaction analysis 7.1 Loading packages 7.2 Downloading data for example 7.3 Gene Annotation: HGU133PLUS-2 (Affaymetrix) 7.4 TME deconvolution using CIBERSORT algorithm 7.5 Identifying TME patterns 7.6 Cell abundance of each cluster 7.7 DEG analysis between TME subtypes 7.8 Identifying LR associated with TME clusters 7.9 Identifying signatures associated with TME clusters 7.10 References", " Chapter 7 TME Interaction analysis 7.1 Loading packages library(IOBR) 7.2 Downloading data for example Obtaining data set from GEO Gastric cancer: GSE62254 using GEOquery R package. if (!requireNamespace(&quot;GEOquery&quot;, quietly = TRUE)) BiocManager::install(&quot;GEOquery&quot;) library(&quot;GEOquery&quot;) # NOTE: This process may take a few minutes which depends on the internet connection speed. Please wait for its completion. eset_geo&lt;- getGEO(GEO = &quot;GSE62254&quot;, getGPL = F, destdir = &quot;./&quot;) eset &lt;- eset_geo[[1]] eset &lt;- exprs(eset) eset[1:5,1:5] ## GSM1523727 GSM1523728 GSM1523729 GSM1523744 GSM1523745 ## 1007_s_at 3.2176645 3.0624323 3.0279131 2.921683 2.8456013 ## 1053_at 2.4050109 2.4394879 2.2442708 2.345916 2.4328582 ## 117_at 1.4933412 1.8067380 1.5959665 1.839822 1.8326058 ## 121_at 2.1965561 2.2812181 2.1865556 2.258599 2.1874363 ## 1255_g_at 0.8698382 0.9502466 0.8125414 1.012860 0.9441993 7.3 Gene Annotation: HGU133PLUS-2 (Affaymetrix) # Conduct gene annotation using `anno_hug133plus2` file; If identical gene symbols exists, these genes would be ordered by the mean expression levels. The gene symbol with highest mean expression level is selected and remove others. eset&lt;-anno_eset(eset = eset, annotation = anno_hug133plus2, symbol = &quot;symbol&quot;, probe = &quot;probe_id&quot;, method = &quot;mean&quot;) eset[1:5, 1:3] ## GSM1523727 GSM1523728 GSM1523729 ## SH3KBP1 4.327974 4.316195 4.351425 ## RPL41 4.246149 4.246808 4.257940 ## EEF1A1 4.293762 4.291038 4.262199 ## COX2 4.250288 4.283714 4.270508 ## LOC101928826 4.219303 4.219670 4.213252 7.4 TME deconvolution using CIBERSORT algorithm cell &lt;- deconvo_tme(eset = eset, method = &quot;cibersort&quot;, arrays = TRUE, perm = 500, absolute.mode = TRUE) head(cell) ## # A tibble: 6 × 27 ## ID B_cells_naive_CIBERS…¹ B_cells_memory_CIBER…² Plasma_cells_CIBERSORT ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 GSM15237… 0.00610 0.0136 0.149 ## 2 GSM15237… 0 0.0339 0.0765 ## 3 GSM15237… 0.00335 0.0183 0.0939 ## 4 GSM15237… 0 0.0594 0.0773 ## 5 GSM15237… 0 0.00738 0.109 ## 6 GSM15237… 0.0118 0.0115 0.138 ## # ℹ abbreviated names: ¹​B_cells_naive_CIBERSORT, ²​B_cells_memory_CIBERSORT ## # ℹ 23 more variables: T_cells_CD8_CIBERSORT &lt;dbl&gt;, ## # T_cells_CD4_naive_CIBERSORT &lt;dbl&gt;, ## # T_cells_CD4_memory_resting_CIBERSORT &lt;dbl&gt;, ## # T_cells_CD4_memory_activated_CIBERSORT &lt;dbl&gt;, ## # T_cells_follicular_helper_CIBERSORT &lt;dbl&gt;, ## # `T_cells_regulatory_(Tregs)_CIBERSORT` &lt;dbl&gt;, … 7.5 Identifying TME patterns Identification of optimal clustering based on cellular infiltration patterns in the microenvironment. tme &lt;- tme_cluster(input = cell, features = colnames(cell)[2:23], id = &quot;ID&quot;, scale = TRUE, method = &quot;kmeans&quot;, max.nc = 5) ## [1] &quot;&gt;&gt;&gt;== Best number of TME clusters is: &quot; ## Number_clusters Value_Index ## 3.0000 2.7259 ## [1] &quot;&gt;&gt;&gt;== Cluster of samples: &quot; ## TME1 TME2 TME3 ## 85 96 119 Use of heatmaps to reflect cellular differences between TME subtypes colnames(tme) &lt;- gsub(colnames(tme), pattern = &quot;_CIBERSORT&quot;, replacement = &quot;&quot;) res &lt;- sig_heatmap(input = tme, features = colnames(tme)[3:ncol(tme)], group = &quot;cluster&quot;, path = &quot;result&quot;, palette = 6) 7.6 Cell abundance of each cluster cols &lt;- c(&#39;#2692a4&#39;,&#39;#fc0d3a&#39;,&#39;#ffbe0b&#39;) p1 &lt;- sig_box(tme, variable = &quot;cluster&quot;, signature = &quot;Macrophages_M1&quot;, jitter = TRUE, cols = cols, show_pvalue = TRUE, size_of_pvalue = 4) ## # A tibble: 3 × 8 ## .y. group1 group2 p p.adj p.format p.signif method ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 signature TME3 TME2 2.25e-17 4.50e-17 &lt; 2e-16 **** Wilcoxon ## 2 signature TME3 TME1 3.52e- 6 3.5 e- 6 3.5e-06 **** Wilcoxon ## 3 signature TME2 TME1 6.50e-24 2 e-23 &lt; 2e-16 **** Wilcoxon p2 &lt;- sig_box(tme, variable = &quot;cluster&quot;, signature = &quot;Mast_cells_activated&quot;, jitter = TRUE, cols = cols, show_pvalue = TRUE, size_of_pvalue = 4) ## # A tibble: 3 × 8 ## .y. group1 group2 p p.adj p.format p.signif method ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 signature TME3 TME2 1.89e- 1 1.9 e- 1 0.19 ns Wilcoxon ## 2 signature TME3 TME1 6.89e-33 2.10e-32 &lt;2e-16 **** Wilcoxon ## 3 signature TME2 TME1 1.12e-25 2.20e-25 &lt;2e-16 **** Wilcoxon p3 &lt;- sig_box(tme, variable = &quot;cluster&quot;, signature = &quot;Macrophages_M2&quot;, jitter = TRUE, cols = cols, show_pvalue = TRUE, size_of_pvalue = 4) ## # A tibble: 3 × 8 ## .y. group1 group2 p p.adj p.format p.signif method ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 signature TME3 TME2 0.0997 0.1 0.0997 ns Wilcoxon ## 2 signature TME3 TME1 0.000504 0.0015 0.0005 *** Wilcoxon ## 3 signature TME2 TME1 0.0520 0.1 0.0520 ns Wilcoxon p1|p2|p3 7.7 DEG analysis between TME subtypes Identifying TME subtypes related differential genes using find_markers_in_bulk. We have developed a reliable classifier for the tumour microenvironment in gastric cancer using the same analysis pipelineTMEclassifier. The classifier was constructed by identifying the most robust gastric cancer TME classification through parsing the tumour microenvironment using the tme_cluster method. Next, genes specifically expressed by each microenvironmental subtype are obtained using the find_markers_in_bulk method. Finally, a machine learning approach was used to construct the classifier model. library(Seurat) res &lt;- find_markers_in_bulk(pdata = tme, eset = eset, group = &quot;cluster&quot;, nfeatures = 2000, top_n = 50, thresh.use = 0.15, only.pos = TRUE, min.pct = 0.10) top15 &lt;- res$top_markers %&gt;% dplyr:: group_by(cluster) %&gt;% dplyr::top_n(15, avg_log2FC) top15$gene ## [1] &quot;C2orf40&quot; &quot;LIPF&quot; &quot;OGN&quot; &quot;ADH1B&quot; &quot;PGA4&quot; &quot;SCN7A&quot; ## [7] &quot;C7&quot; &quot;MAMDC2&quot; &quot;ABCA8&quot; &quot;GIF&quot; &quot;SCRG1&quot; &quot;C6orf58&quot; ## [13] &quot;VIP&quot; &quot;TMEM100&quot; &quot;GHRL&quot; &quot;IDO1&quot; &quot;CXCL11&quot; &quot;SLCO1B3&quot; ## [19] &quot;AIM2&quot; &quot;IFNG&quot; &quot;GZMB&quot; &quot;CXCL10&quot; &quot;GBP4&quot; &quot;KRT13&quot; ## [25] &quot;CXCL9&quot; &quot;GNLY&quot; &quot;S100A2&quot; &quot;COL11A1&quot; &quot;SERPINB2&quot; &quot;KISS1R&quot; ## [31] &quot;IL1A&quot; &quot;REG1B&quot; &quot;PROK2&quot; &quot;PI15&quot; &quot;IL11&quot; &quot;PPBP&quot; ## [37] &quot;CLEC5A&quot; &quot;MAGEA6&quot; &quot;MAGEA12&quot; &quot;IGFBP1&quot; &quot;TREM1&quot; &quot;HCAR3&quot; ## [43] &quot;IL24&quot; &quot;MAGEA2B&quot; &quot;CXCL6&quot; Heatmap visualisation using Seurat’s DoHeatmap #Defining cluster colors cols &lt;- c(&#39;#2692a4&#39;,&#39;#fc0d3a&#39;,&#39;#ffbe0b&#39;) p1 &lt;- DoHeatmap(res$sce, top15$gene, group.colors = cols )+ scale_fill_gradientn(colours = rev(colorRampPalette(RColorBrewer::brewer.pal(11,&quot;RdBu&quot;))(256))) Extracting variables from the expression matrix to merge with TME subtype input &lt;- combine_pd_eset(eset = eset, pdata = tme, feas = top15$gene, scale = T) p2 &lt;- sig_box(input, variable = &quot;cluster&quot;, signature = &quot;IFNG&quot;, jitter = TRUE, cols = cols, show_pvalue = TRUE, size_of_pvalue = 4) ## # A tibble: 3 × 8 ## .y. group1 group2 p p.adj p.format p.signif method ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 signature TME3 TME2 1.11e-16 3.30e-16 &lt; 2e-16 **** Wilcoxon ## 2 signature TME3 TME1 6.70e- 1 6.7 e- 1 0.67 ns Wilcoxon ## 3 signature TME2 TME1 5.60e-14 1.10e-13 5.6e-14 **** Wilcoxon p3 &lt;- sig_box(input, variable = &quot;cluster&quot;, signature = &quot;IL1A&quot;, jitter = TRUE, cols = cols, show_pvalue = TRUE, size_of_pvalue = 4) ## # A tibble: 3 × 8 ## .y. group1 group2 p p.adj p.format p.signif method ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 signature TME3 TME2 5.94e- 9 1.20e- 8 5.9e-09 **** Wilcoxon ## 2 signature TME3 TME1 7.96e-18 2.40e-17 &lt; 2e-16 **** Wilcoxon ## 3 signature TME2 TME1 2.60e- 5 2.6 e- 5 2.6e-05 **** Wilcoxon Combining the results obtained above # if (!requireNamespace(&quot;patchwork&quot;, quietly = TRUE)) install.packages(&quot;patchwork&quot;) library(patchwork) p &lt;- (p1|p2/p3) + plot_layout(widths = c(2.3,1)) p + plot_annotation(tag_levels = &#39;A&#39;) 7.8 Identifying LR associated with TME clusters The LR_cal method originates from the study: Lapuente-Santana, Ó., van Genderen, M., Hilbers, P., Finotello, F., &amp; Eduati, F. (2021). “Interpretable systems biomarkers predict response to immune-checkpoint inhibitors.” Patterns (New York, N.Y.), 2(8), 100293. DOI: 10.1016/j.patter.2021.100293. The method calculates interaction weights for 813 ligand-receptor (LR) pairs. For this function to run successfully, you need to install the easier package following the tutorial available at easier GitHub repository. lr_data &lt;- LR_cal(eset = eset, data_type = &quot;tpm&quot;, id_type = &quot;symbol&quot;) lr &lt;- column_to_rownames(lr_data,var = &quot;ID&quot;) %&gt;% t() %&gt;% as.data.frame() res &lt;- find_markers_in_bulk(pdata = tme, eset = lr, group = &quot;cluster&quot;, nfeatures = 2000, top_n = 50, thresh.use = 0.15, only.pos = TRUE, min.pct = 0.10) top15 &lt;- res$top_markers %&gt;% dplyr:: group_by(cluster) %&gt;% dplyr::top_n(15, avg_log2FC) top15$gene ## [1] &quot;ANGPTL1-TEK&quot; &quot;FN1-ITGA8&quot; &quot;COL4A5-CD93&quot; ## [4] &quot;GNAI2-P2RY12&quot; &quot;NCAM1-GFRA1&quot; &quot;FGF7-FGFR1-NRP1&quot; ## [7] &quot;LTF-LRP11&quot; &quot;SFRP1-FZD6&quot; &quot;MYOC-FZD4&quot; ## [10] &quot;EFNB2-EPHA3&quot; &quot;ADAM10-EFNA1-EPHA3&quot; &quot;MYOC-FZD1&quot; ## [13] &quot;TSLP-IL7R&quot; &quot;NCAM1-FGFR1&quot; &quot;F13A1-ITGA9&quot; ## [16] &quot;IFNG-IFNGR1-IFNGR2&quot; &quot;GZMB-IGF2R&quot; &quot;HLA-B-HLA-E-KLRD1&quot; ## [19] &quot;CXCL10-SDC4&quot; &quot;FASLG-FAS&quot; &quot;CCL7-CCR1&quot; ## [22] &quot;CCL7-CCR5&quot; &quot;CCL8-CCR5&quot; &quot;CCL5-SDC4&quot; ## [25] &quot;CCL7-ACKR4&quot; &quot;CCL8-CCR1&quot; &quot;CCL7-CCR2&quot; ## [28] &quot;CCL7-CXCR3&quot; &quot;TNFSF9-TNFRSF9&quot; &quot;IL15-IL2RA&quot; ## [31] &quot;IL1A-IL1R1&quot; &quot;IL1A-IL1R2&quot; &quot;PPBP-CXCR2&quot; ## [34] &quot;IL1A-IL1RAP&quot; &quot;FN1-TNFRSF11B&quot; &quot;THBS1-TNFRSF11B&quot; ## [37] &quot;TNFSF10-TNFRSF11B&quot; &quot;OSM-IL6ST&quot; &quot;PPBP-CXCR1&quot; ## [40] &quot;VWF-TNFRSF11B&quot; &quot;EREG-EGFR&quot; &quot;OSM-OSMR&quot; ## [43] &quot;TNFSF13-TNFRSF11B&quot; &quot;IL6-IL6ST&quot; &quot;ANXA1-APP-FPR2&quot; Heatmap visualisation using Seurat’s DoHeatmap #cols &lt;- c(&#39;#2692a4&#39;,&#39;#fc0d3a&#39;,&#39;#ffbe0b&#39;) p1 &lt;- DoHeatmap(res$sce, top15$gene, group.colors = cols )+ scale_fill_gradientn(colours = rev(colorRampPalette(RColorBrewer::brewer.pal(11,&quot;RdBu&quot;))(256))) ## Scale for fill is already present. ## Adding another scale for fill, which will replace the existing scale. Extracting variables from the expression matrix to merge with TME subtype top15$gene &lt;- gsub(top15$gene, pattern = &quot;-&quot;, replacement = &quot;\\\\_&quot;) input &lt;- combine_pd_eset(eset = lr, pdata = tme, feas = top15$gene, scale = T) p2 &lt;- sig_box(input, variable = &quot;cluster&quot;, signature = top15$gene[1], jitter = TRUE, cols = cols, show_pvalue = TRUE, size_of_pvalue = 4) ## # A tibble: 3 × 8 ## .y. group1 group2 p p.adj p.format p.signif method ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 signature TME3 TME2 0.000000823 0.0000025 8.2e-07 **** Wilcoxon ## 2 signature TME3 TME1 0.0000336 0.000067 3.4e-05 **** Wilcoxon ## 3 signature TME2 TME1 0.649 0.65 0.65 ns Wilcoxon p3 &lt;- sig_box(input, variable = &quot;cluster&quot;, signature = top15$gene[5], jitter = TRUE, cols = cols, show_pvalue = TRUE, size_of_pvalue = 4) ## # A tibble: 3 × 8 ## .y. group1 group2 p p.adj p.format p.signif method ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 signature TME3 TME2 5.86e-16 1.80e-15 5.9e-16 **** Wilcoxon ## 2 signature TME3 TME1 1.31e-10 2.6 e-10 1.3e-10 **** Wilcoxon ## 3 signature TME2 TME1 1.14e- 1 1.1 e- 1 0.11 ns Wilcoxon Combining the results obtained above # if (!requireNamespace(&quot;patchwork&quot;, quietly = TRUE)) install.packages(&quot;patchwork&quot;) library(patchwork) p &lt;- (p1|p2/p3) + plot_layout(widths = c(2.3,1)) p + plot_annotation(tag_levels = &#39;A&#39;) 7.9 Identifying signatures associated with TME clusters Calculate TME associated signatures-(through PCA method). sig_tme&lt;-calculate_sig_score(pdata = NULL, eset = eset, signature = signature_collection, method = &quot;pca&quot;, mini_gene_count = 2) sig_tme &lt;- t(column_to_rownames(sig_tme, var = &quot;ID&quot;)) sig_tme[1:5, 1:3] ## GSM1523727 GSM1523728 GSM1523729 ## CD_8_T_effector -2.5513794 0.7789141 -2.1770675 ## DDR -0.8747614 0.7425162 -1.3272054 ## APM 1.1098368 2.1988688 -0.9516419 ## Immune_Checkpoint -2.3701787 0.9455120 -1.4844104 ## CellCycle_Reg 0.1063358 0.7583302 -0.3649795 Finding characteristic variables associated with TME clusters res &lt;- find_markers_in_bulk(pdata = tme, eset = sig_tme, group = &quot;cluster&quot;, nfeatures = 1000, top_n = 20, min.pct = 0.10) top15 &lt;- res$top_markers %&gt;% dplyr:: group_by(cluster) %&gt;% dplyr::top_n(15, avg_log2FC) p1 &lt;- DoHeatmap(res$sce, top15$gene, group.colors = cols)+ scale_fill_gradientn(colours = rev(colorRampPalette(RColorBrewer::brewer.pal(11,&quot;RdBu&quot;))(256))) Visualizing results and selecting feature variables top15$gene &lt;- gsub(top15$gene, pattern = &quot;-&quot;, replacement = &quot;\\\\_&quot;) input &lt;- combine_pd_eset(eset = sig_tme, pdata = tme, feas = top15$gene, scale = T) p2 &lt;- sig_box(input, variable = &quot;cluster&quot;, signature = &quot;CD_8_T_effector&quot;, jitter = TRUE, cols = cols, show_pvalue = TRUE, size_of_pvalue = 4, size_of_font = 6) ## # A tibble: 3 × 8 ## .y. group1 group2 p p.adj p.format p.signif method ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 signature TME3 TME2 3.18e-12 6.40e-12 3.2e-12 **** Wilcoxon ## 2 signature TME3 TME1 1.01e- 1 1 e- 1 0.1 ns Wilcoxon ## 3 signature TME2 TME1 4.53e-13 1.4 e-12 4.5e-13 **** Wilcoxon p3 &lt;- sig_box(input, variable = &quot;cluster&quot;, signature = &quot;Neutrophils_Bindea_et_al&quot;, jitter = TRUE, cols = cols, show_pvalue = TRUE, size_of_pvalue = 4, size_of_font = 6) ## # A tibble: 3 × 8 ## .y. group1 group2 p p.adj p.format p.signif method ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 signature TME3 TME2 0.0000416 0.000097 4.2e-05 **** Wilcoxon ## 2 signature TME3 TME1 0.0000323 0.000097 3.2e-05 **** Wilcoxon ## 3 signature TME2 TME1 0.149 0.15 0.15 ns Wilcoxon p &lt;- (p1|p2/p3) + plot_layout(widths = c(2.3,1)) p + plot_annotation(tag_levels = &#39;A&#39;) Survival differences between tumour microenvironment subtypes library(survminer) data(pdata_acrg, package = &quot;IOBR&quot;) input &lt;- merge(pdata_acrg, input, by = &quot;ID&quot;) p1&lt;-surv_group(input_pdata = input, target_group = &quot;cluster&quot;, ID = &quot;ID&quot;, reference_group = &quot;High&quot;, project = &quot;ACRG&quot;, cols = cols, time = &quot;OS_time&quot;, status = &quot;OS_status&quot;, time_type = &quot;month&quot;, save_path = &quot;result&quot;) ## &gt;&gt;&gt; Dataset&#39;s survival follow up time is range between 1 to 105.7 months ## TME1 TME2 TME3 ## 85 96 119 ## 8596119 ## Maximum of follow up time is 105.7 months; and will be divided into 6 sections; ## Warning in geom_segment(aes(x = 0, y = max(y2), xend = max(x1), yend = max(y2)), : All aesthetics have length 1, but the data has 2 rows. ## ℹ Please consider using `annotate()` or provide this layer with data containing ## a single row. ## Registered S3 methods overwritten by &#39;ggpp&#39;: ## method from ## heightDetails.titleGrob ggplot2 ## widthDetails.titleGrob ggplot2 ## Warning in geom_segment(aes(x = 0, y = max(y2), xend = max(x1), yend = max(y2)), : All aesthetics have length 1, but the data has 2 rows. ## ℹ Please consider using `annotate()` or provide this layer with data containing ## a single row. ## All aesthetics have length 1, but the data has 2 rows. ## ℹ Please consider using `annotate()` or provide this layer with data containing ## a single row. ## All aesthetics have length 1, but the data has 2 rows. ## ℹ Please consider using `annotate()` or provide this layer with data containing ## a single row. p1 Relationship between tumour microenvironmental subtypes and other subtypes p1&lt;- percent_bar_plot(input, x = &quot;cluster&quot; , y = &quot;Subtype&quot;, palette = &quot;jama&quot;, axis_angle = 60) ## # A tibble: 12 × 5 ## # Groups: cluster [3] ## cluster Subtype Freq Prop count ## &lt;chr&gt; &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 TME1 EMT 14 0.16 85 ## 2 TME1 MSI 12 0.14 85 ## 3 TME1 MSS/TP53- 34 0.4 85 ## 4 TME1 MSS/TP53+ 25 0.29 85 ## 5 TME2 EMT 6 0.06 96 ## 6 TME2 MSI 47 0.49 96 ## 7 TME2 MSS/TP53- 22 0.23 96 ## 8 TME2 MSS/TP53+ 21 0.22 96 ## 9 TME3 EMT 26 0.22 119 ## 10 TME3 MSI 9 0.08 119 ## 11 TME3 MSS/TP53- 51 0.43 119 ## 12 TME3 MSS/TP53+ 33 0.28 119 ## [1] &quot;&#39;#374E55FF&#39;, &#39;#DF8F44FF&#39;, &#39;#00A1D5FF&#39;, &#39;#B24745FF&#39;, &#39;#79AF97FF&#39;, &#39;#6A6599FF&#39;, &#39;#80796BFF&#39;&quot; p2&lt;- percent_bar_plot(input, x = &quot;cluster&quot; , y = &quot;Lauren&quot;, palette = &quot;jama&quot;, axis_angle = 60) ## # A tibble: 9 × 5 ## # Groups: cluster [3] ## cluster Lauren Freq Prop count ## &lt;chr&gt; &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 TME1 Diffuse 37 0.44 85 ## 2 TME1 Intestinal 47 0.55 85 ## 3 TME1 Mixed 1 0.01 85 ## 4 TME2 Diffuse 31 0.32 96 ## 5 TME2 Intestinal 54 0.56 96 ## 6 TME2 Mixed 11 0.11 96 ## 7 TME3 Diffuse 67 0.56 119 ## 8 TME3 Intestinal 45 0.38 119 ## 9 TME3 Mixed 7 0.06 119 ## [1] &quot;&#39;#374E55FF&#39;, &#39;#DF8F44FF&#39;, &#39;#00A1D5FF&#39;, &#39;#B24745FF&#39;, &#39;#79AF97FF&#39;, &#39;#6A6599FF&#39;, &#39;#80796BFF&#39;&quot; p3&lt;- percent_bar_plot(input, x = &quot;cluster&quot; , y = &quot;TMEscore_binary&quot;, palette = &quot;jama&quot;, axis_angle = 60) ## # A tibble: 7 × 5 ## # Groups: cluster [3] ## cluster TMEscore_binary Freq Prop count ## &lt;chr&gt; &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 TME1 High 5 0.06 85 ## 2 TME1 Low 79 0.93 85 ## 3 TME1 &lt;NA&gt; 1 0.01 85 ## 4 TME2 High 59 0.61 96 ## 5 TME2 Low 37 0.39 96 ## 6 TME3 High 7 0.06 119 ## 7 TME3 Low 112 0.94 119 ## [1] &quot;&#39;#374E55FF&#39;, &#39;#DF8F44FF&#39;, &#39;#00A1D5FF&#39;, &#39;#B24745FF&#39;, &#39;#79AF97FF&#39;, &#39;#6A6599FF&#39;, &#39;#80796BFF&#39;&quot; p1|p2|p3 7.10 References Cristescu, R., Lee, J., Nebozhyn, M. et al. Molecular analysis of gastric cancer identifies subtypes associated with distinct clinical outcomes. Nat Med 21, 449–456 (2015). https://doi.org/10.1038/nm.3850 CIBERSORT; Newman, A. M., Liu, C. L., Green, M. R., Gentles, A. J., Feng, W., Xu, Y., … Alizadeh, A. A. (2015). Robust enumeration of cell subsets from tissue expression profiles. Nature Methods, 12(5), 453–457. https://doi.org/10.1038/nmeth.3337; Seurat: Hao and Hao et al. Integrated analysis of multimodal single-cell data. Cell (2021) easier; Lapuente-Santana, Ó., van Genderen, M., Hilbers, P., Finotello, F., &amp; Eduati, F. (2021). ‘Interpretable systems biomarkers predict response to immune-checkpoint inhibitors.’ Patterns (New York, N.Y.), 2(8), 100293. "],["tumor-ecosystem-analysis.html", "Chapter 8 Tumor ecosystem analysis 8.1 Loading packages 8.2 Downloading data for example 8.3 Gene Annotation: HGU133PLUS-2 (Affaymetrix) 8.4 Determine TME subtype of gastric cancer using TMEclassifier R package 8.5 DEG analysis: method1 8.6 GSEA analysis based on differential express gene analysis results 8.7 DEG analysis: method2 8.8 Identifying signatures associated with TME clusters 8.9 References", " Chapter 8 Tumor ecosystem analysis 8.1 Loading packages library(IOBR) 8.2 Downloading data for example Obtaining data set from GEO Gastric cancer: GSE62254 using GEOquery R package. if (!requireNamespace(&quot;GEOquery&quot;, quietly = TRUE)) BiocManager::install(&quot;GEOquery&quot;) library(&quot;GEOquery&quot;) # NOTE: This process may take a few minutes which depends on the internet connection speed. Please wait for its completion. eset_geo&lt;-getGEO(GEO = &quot;GSE62254&quot;, getGPL = F, destdir = &quot;./&quot;) eset &lt;-eset_geo[[1]] eset &lt;-exprs(eset) eset[1:5,1:5] ## GSM1523727 GSM1523728 GSM1523729 GSM1523744 GSM1523745 ## 1007_s_at 3.2176645 3.0624323 3.0279131 2.921683 2.8456013 ## 1053_at 2.4050109 2.4394879 2.2442708 2.345916 2.4328582 ## 117_at 1.4933412 1.8067380 1.5959665 1.839822 1.8326058 ## 121_at 2.1965561 2.2812181 2.1865556 2.258599 2.1874363 ## 1255_g_at 0.8698382 0.9502466 0.8125414 1.012860 0.9441993 8.3 Gene Annotation: HGU133PLUS-2 (Affaymetrix) # Conduct gene annotation using `anno_hug133plus2` file; If identical gene symbols exists, these genes would be ordered by the mean expression levels. The gene symbol with highest mean expression level is selected and remove others. eset&lt;-anno_eset(eset = eset, annotation = anno_hug133plus2, symbol = &quot;symbol&quot;, probe = &quot;probe_id&quot;, method = &quot;mean&quot;) eset[1:5, 1:3] ## GSM1523727 GSM1523728 GSM1523729 ## SH3KBP1 4.327974 4.316195 4.351425 ## RPL41 4.246149 4.246808 4.257940 ## EEF1A1 4.293762 4.291038 4.262199 ## COX2 4.250288 4.283714 4.270508 ## LOC101928826 4.219303 4.219670 4.213252 8.4 Determine TME subtype of gastric cancer using TMEclassifier R package if (!requireNamespace(&quot;TMEclassifier&quot;, quietly = TRUE)) devtools::install_github(&quot;LiaoWJLab/TMEclassifier&quot;) library(TMEclassifier) tme &lt;- tme_classifier(eset = eset, scale = TRUE) ## Step-1: Expression data preprocessing... ## Step-2: TME deconvolution... ## Step-3: Predicting TME phenotypes... ## [09:52:29] WARNING: src/learner.cc:1203: ## If you are loading a serialized model (like pickle in Python, RDS in R) generated by ## older XGBoost, please export the model by calling `Booster.save_model` from that version ## first, then load it back in current version. See: ## ## https://xgboost.readthedocs.io/en/latest/tutorials/saving_model.html ## ## for more details about differences between saving model and serializing. ## ## [09:52:29] WARNING: src/learner.cc:888: Found JSON model saved before XGBoost 1.6, please save the model using current version again. The support for old JSON model will be discontinued in XGBoost 2.3. ## [09:52:29] WARNING: src/learner.cc:553: ## If you are loading a serialized model (like pickle in Python, RDS in R) generated by ## older XGBoost, please export the model by calling `Booster.save_model` from that version ## first, then load it back in current version. See: ## ## https://xgboost.readthedocs.io/en/latest/tutorials/saving_model.html ## ## for more details about differences between saving model and serializing. ## &gt;&gt;&gt;--- DONE! table(tme$TMEcluster) ## ## IA IE IS ## 107 96 97 head(tme) ## ID IE IS IA TMEcluster ## 1 GSM1523727 0.204623557 0.11212681 0.68324962 IA ## 2 GSM1523728 0.009599504 0.11179146 0.87860903 IA ## 3 GSM1523729 0.852615046 0.11369089 0.03369407 IE ## 4 GSM1523744 0.053842233 0.06994632 0.87621145 IA ## 5 GSM1523745 0.055973019 0.80839488 0.13563209 IS ## 6 GSM1523746 0.545343299 0.37437568 0.08028102 IE table(tme$TMEcluster) ## ## IA IE IS ## 107 96 97 head(tme) ## ID IE IS IA TMEcluster ## 1 GSM1523727 0.204623557 0.11212681 0.68324962 IA ## 2 GSM1523728 0.009599504 0.11179146 0.87860903 IA ## 3 GSM1523729 0.852615046 0.11369089 0.03369407 IE ## 4 GSM1523744 0.053842233 0.06994632 0.87621145 IA ## 5 GSM1523745 0.055973019 0.80839488 0.13563209 IS ## 6 GSM1523746 0.545343299 0.37437568 0.08028102 IE 8.5 DEG analysis: method1 Differential analysis of selected immune-activated and immune-expelled gastric cancers pdata &lt;- tme[!tme$TMEcluster==&quot;IS&quot;, ] deg &lt;- iobr_deg(eset = eset, annotation = NULL, pdata = pdata, group_id = &quot;TMEcluster&quot;, pdata_id = &quot;ID&quot;, array = TRUE, method = &quot;limma&quot;, contrast = c(&quot;IA&quot;,&quot;IE&quot;), path = &quot;result&quot;, padj_cutoff = 0.01, logfc_cutoff = 0.5) ## &gt;&gt;&gt;== Matching grouping information and expression matrix ## &gt;&gt;&gt;== limma was selected for differential gene analysis of Array data ## group1 = IE ## group2 = NA ## # A tibble: 6 × 11 ## symbol log2FoldChange AveExpr t pvalue padj B sigORnot label ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; ## 1 TMEM100 0.774 1.84 13.9 2.47e-31 5.37e-27 60.4 Up_regulat… Both ## 2 ABCA8 0.933 1.90 12.9 3.11e-28 3.38e-24 53.4 Up_regulat… Both ## 3 HHIP 0.613 1.73 12.1 7.62e-26 4.46e-22 48.0 Up_regulat… Both ## 4 LMNB2 -0.287 2.25 -12.1 9.28e-26 4.46e-22 47.8 NOT Sign… ## 5 MCM6 -0.211 3.02 -12.1 1.02e-25 4.46e-22 47.7 NOT Sign… ## 6 ADH1B 0.907 1.86 12.0 2.27e-25 7.04e-22 47.0 Up_regulat… Both ## # ℹ 2 more variables: IE &lt;dbl&gt;, `` &lt;dbl&gt; 8.6 GSEA analysis based on differential express gene analysis results Select the gene set list in IOBR’s signature collection. head(deg) ## # A tibble: 6 × 11 ## symbol log2FoldChange AveExpr t pvalue padj B sigORnot label ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; ## 1 TMEM100 0.774 1.84 13.9 2.47e-31 5.37e-27 60.4 Up_regulat… Both ## 2 ABCA8 0.933 1.90 12.9 3.11e-28 3.38e-24 53.4 Up_regulat… Both ## 3 HHIP 0.613 1.73 12.1 7.62e-26 4.46e-22 48.0 Up_regulat… Both ## 4 LMNB2 -0.287 2.25 -12.1 9.28e-26 4.46e-22 47.8 NOT Sign… ## 5 MCM6 -0.211 3.02 -12.1 1.02e-25 4.46e-22 47.7 NOT Sign… ## 6 ADH1B 0.907 1.86 12.0 2.27e-25 7.04e-22 47.0 Up_regulat… Both ## # ℹ 2 more variables: IE &lt;dbl&gt;, `` &lt;dbl&gt; sig_list &lt;- signature_collection[c(&quot;TMEscoreB_CIR&quot;, &quot;TMEscoreA_CIR&quot;, &quot;DNA_replication&quot;, &quot;Base_excision_repair&quot;, &quot;Pan_F_TBRs&quot;, &quot;TGFb.myCAF&quot;, &quot;Ferroptosis&quot;, &quot;TLS_Nature&quot;, &quot;Glycolysis&quot;)] sig_list ## $TMEscoreB_CIR ## [1] &quot;DCN&quot; &quot;SEPP1&quot; &quot;ACTA2&quot; &quot;SPARCL1&quot; &quot;BEX3&quot; ## [6] &quot;MYLK&quot; &quot;AKR1C1&quot; &quot;TIMP2&quot; &quot;MXRA7&quot; &quot;C11orf96&quot; ## [11] &quot;CAV1&quot; &quot;PDGFRA&quot; &quot;FHL1&quot; &quot;MGP&quot; &quot;EID1&quot; ## [16] &quot;LOC101930400&quot; &quot;DST&quot; &quot;GREM1&quot; &quot;FERMT2&quot; &quot;TNC&quot; ## [21] &quot;CYBRD1&quot; &quot;LTBP1&quot; &quot;ACTG2&quot; &quot;TMEM47&quot; &quot;SERPINE2&quot; ## [26] &quot;ANTXR2&quot; &quot;GNG11&quot; &quot;TAGLN&quot; &quot;GSTA4&quot; &quot;PKIG&quot; ## [31] &quot;MAOA&quot; &quot;PTRF&quot; &quot;FAM3B&quot; &quot;PBX1&quot; &quot;WLS&quot; ## [36] &quot;SELM&quot; &quot;SVIL&quot; &quot;MYH11&quot; &quot;AGT&quot; &quot;SPON1&quot; ## [41] &quot;TGFB1I1&quot; &quot;PDLIM3&quot; &quot;PDK4&quot; &quot;SYNPO2&quot; &quot;MSRB3&quot; ## [46] &quot;PROS1&quot; &quot;EDNRA&quot; &quot;AKAP12&quot; &quot;PSD3&quot; &quot;TNS1&quot; ## [51] &quot;JAM3&quot; &quot;PDZRN3&quot; &quot;DDR2&quot; &quot;HMGCS2&quot; &quot;SGCE&quot; ## [56] &quot;MRVI1&quot; &quot;WFDC1&quot; &quot;FBLN1&quot; &quot;FMO5&quot; &quot;MAOB&quot; ## [61] &quot;AMOTL1&quot; &quot;AKT3&quot; &quot;CNRIP1&quot; &quot;CPE&quot; &quot;MAP1B&quot; ## [66] &quot;RBP1&quot; &quot;GNAI1&quot; &quot;FOXF2&quot; &quot;SORBS2&quot; &quot;ZCCHC24&quot; ## [71] &quot;ZNF704&quot; &quot;ARMCX1&quot; &quot;DIXDC1&quot; &quot;SSTR1&quot; &quot;THRB&quot; ## [76] &quot;C3orf70&quot; &quot;PKIB&quot; &quot;CNN1&quot; &quot;SYTL5&quot; &quot;DACT1&quot; ## [81] &quot;SYNPO&quot; &quot;GAS1&quot; &quot;DPYSL3&quot; &quot;CCDC80&quot; &quot;TSPYL5&quot; ## [86] &quot;DCHS1&quot; &quot;SOBP&quot; &quot;AOC3&quot; &quot;NDN&quot; &quot;FGF7P3&quot; ## [91] &quot;SMAD9&quot; &quot;MCC&quot; &quot;CLMP&quot; &quot;MYL9&quot; &quot;RBP4&quot; ## [96] &quot;PLN&quot; &quot;SPOCK1&quot; &quot;COL14A1&quot; &quot;CRYAB&quot; &quot;SRPX&quot; ## [101] &quot;EML1&quot; &quot;RERG&quot; &quot;PPP1R3C&quot; &quot;LOC100506718&quot; &quot;CH25H&quot; ## [106] &quot;HSPB8&quot; &quot;PID1&quot; &quot;TTC28&quot; &quot;STON1&quot; &quot;ABCG2&quot; ## [111] &quot;ZSCAN18&quot; &quot;SCIN&quot; &quot;C14orf132&quot; &quot;TMEM55A&quot; &quot;WASF3&quot; ## [116] &quot;PAPLN&quot; &quot;COLEC12&quot; &quot;ACKR1&quot; &quot;TMEM150C&quot; &quot;RAI2&quot; ## [121] &quot;TSPAN7&quot; &quot;MRGPRF&quot; &quot;ABCA8&quot; &quot;CHIC1&quot; &quot;NBEA&quot; ## [126] &quot;FAM13C&quot; &quot;SETBP1&quot; &quot;LDOC1&quot; &quot;TMEM100&quot; &quot;LOC101930349&quot; ## [131] &quot;PRICKLE2&quot; &quot;TSPAN18&quot; &quot;FABP4&quot; &quot;ARHGEF26&quot; &quot;ERICH5&quot; ## [136] &quot;MYOCD&quot; &quot;BEX2&quot; &quot;PPP1R14A&quot; &quot;FGF13&quot; &quot;RUNX1T1&quot; ## [141] &quot;MAGI2-AS3&quot; &quot;LINC01279&quot; &quot;REEP1&quot; &quot;PLAC9&quot; &quot;MYEF2&quot; ## [146] &quot;PRKD1&quot; &quot;RGN&quot; &quot;CLDN11&quot; &quot;ANK2&quot; &quot;ESRRG&quot; ## [151] &quot;SYNC&quot; &quot;ZNF667-AS1&quot; &quot;FGF7&quot; &quot;SFRP1&quot; &quot;HMCN1&quot; ## [156] &quot;TCEAL7&quot; &quot;OGN&quot; &quot;MAGI2&quot; &quot;MIR100HG&quot; &quot;FILIP1&quot; ## [161] &quot;LOC100507334&quot; &quot;ANKRD6&quot; &quot;PLEKHH2&quot; &quot;ZNF542P&quot; &quot;ARMCX4&quot; ## [166] &quot;NOV&quot; &quot;DCLK1&quot; &quot;ARHGAP28&quot; &quot;C2orf40&quot; &quot;TRHDE&quot; ## [171] &quot;EPHA7&quot; &quot;SCRG1&quot; &quot;ZNF677&quot; &quot;ZFPM2&quot; &quot;PEG3&quot; ## [176] &quot;SERP2&quot; &quot;ZNF415&quot; &quot;MAMDC2&quot; &quot;RBM24&quot; &quot;MEOX2&quot; ## ## $TMEscoreA_CIR ## [1] &quot;HLA-DPB1&quot; &quot;UBD&quot; &quot;LOC100509457&quot; &quot;WARS&quot; ## [5] &quot;TAP1&quot; &quot;HLA-DMA&quot; &quot;TRIM22&quot; &quot;PSAT1&quot; ## [9] &quot;CXCL10&quot; &quot;SOCS3&quot; &quot;CXCL9&quot; &quot;PBK&quot; ## [13] &quot;CCL4&quot; &quot;CCL5&quot; &quot;BCL2A1&quot; &quot;TRBC1&quot; ## [17] &quot;IDO1&quot; &quot;NFE2L3&quot; &quot;CCL3L3&quot; &quot;DTL&quot; ## [21] &quot;MMP9&quot; &quot;SLC2A3&quot; &quot;ZNF367&quot; &quot;RCC1&quot; ## [25] &quot;STIL&quot; &quot;TRAC&quot; &quot;HELLS&quot; &quot;GZMB&quot; ## [29] &quot;RTEL1-TNFRSF6B&quot; &quot;CXCL11&quot; &quot;GBP5&quot; &quot;CD2&quot; ## [33] &quot;CDCA2&quot; &quot;CDT1&quot; &quot;TNFAIP2&quot; &quot;TYMP&quot; ## [37] &quot;MICB&quot; &quot;SLC2A14&quot; &quot;GZMK&quot; &quot;CD8A&quot; ## [41] &quot;CENPH&quot; &quot;MND1&quot; &quot;BATF2&quot; &quot;BRIP1&quot; ## [45] &quot;E2F7&quot; &quot;KIF18A&quot; &quot;AIM2&quot; &quot;ETV7&quot; ## [49] &quot;ITK&quot; &quot;GNLY&quot; &quot;GPR171&quot; &quot;WDHD1&quot; ## [53] &quot;GBP4&quot; &quot;MB21D1&quot; &quot;NLRP3&quot; &quot;MCEMP1&quot; ## [57] &quot;POLR3G&quot; &quot;NLRC3&quot; &quot;KLRC2&quot; &quot;CLEC5A&quot; ## [61] &quot;ARHGAP11A&quot; &quot;GPR84&quot; &quot;IFNG&quot; &quot;ZBED2&quot; ## ## $DNA_replication ## [1] &quot;RNASEH2A&quot; &quot;POLD3&quot; &quot;DNA2&quot; &quot;FEN1&quot; &quot;POLA2&quot; &quot;RNASEH1&quot; ## [7] &quot;RPA4&quot; &quot;LIG1&quot; &quot;MCM2&quot; &quot;MCM3&quot; &quot;MCM4&quot; &quot;MCM5&quot; ## [13] &quot;MCM6&quot; &quot;MCM7&quot; &quot;PCNA&quot; &quot;POLE3&quot; &quot;POLA1&quot; &quot;POLD1&quot; ## [19] &quot;POLD2&quot; &quot;POLE&quot; &quot;POLE2&quot; &quot;PRIM1&quot; &quot;PRIM2&quot; &quot;POLE4&quot; ## [25] &quot;POLD4&quot; &quot;RFC1&quot; &quot;RFC2&quot; &quot;RFC3&quot; &quot;RFC4&quot; &quot;RFC5&quot; ## [31] &quot;RPA1&quot; &quot;RPA2&quot; &quot;RPA3&quot; &quot;SSBP1&quot; &quot;RNASEH2B&quot; &quot;RNASEH2C&quot; ## ## $Base_excision_repair ## [1] &quot;PARP2&quot; &quot;PARP3&quot; &quot;POLD3&quot; &quot;PARP1&quot; &quot;PARP4&quot; &quot;FEN1&quot; &quot;SMUG1&quot; &quot;NEIL2&quot; &quot;APEX2&quot; ## [10] &quot;POLL&quot; &quot;HMGB1&quot; &quot;APEX1&quot; &quot;LIG1&quot; &quot;LIG3&quot; &quot;MPG&quot; &quot;MUTYH&quot; &quot;NTHL1&quot; &quot;OGG1&quot; ## [19] &quot;PCNA&quot; &quot;POLE3&quot; &quot;POLB&quot; &quot;POLD1&quot; &quot;POLD2&quot; &quot;POLE&quot; &quot;POLE2&quot; &quot;NEIL3&quot; &quot;POLE4&quot; ## [28] &quot;POLD4&quot; &quot;UNG&quot; &quot;XRCC1&quot; &quot;NEIL1&quot; &quot;MBD4&quot; ## ## $Pan_F_TBRs ## [1] &quot;ACTA2&quot; &quot;ACTG2&quot; &quot;ADAM12&quot; &quot;ADAM19&quot; &quot;CNN1&quot; &quot;COL4A1&quot; ## [7] &quot;CTGF&quot; &quot;CTPS1&quot; &quot;FAM101B&quot; &quot;FSTL3&quot; &quot;HSPB1&quot; &quot;IGFBP3&quot; ## [13] &quot;PXDC1&quot; &quot;SEMA7A&quot; &quot;SH3PXD2A&quot; &quot;TAGLN&quot; &quot;TGFBI&quot; &quot;TNS1&quot; ## [19] &quot;TPM1&quot; ## ## $&lt;NA&gt; ## NULL ## ## $Ferroptosis ## [1] &quot;ACSL4&quot; &quot;AKR1C1-3&quot; &quot;ALOXs&quot; &quot;ATP5G3&quot; &quot;CARS&quot; ## [6] &quot;CBS&quot; &quot;CD44v&quot; &quot;CHAC1&quot; &quot;CISD1&quot; &quot;CS&quot; ## [11] &quot;DPP4&quot; &quot;FANCD2&quot; &quot;GCLC/GCLM&quot; &quot;GLS2&quot; &quot;GPX4&quot; ## [16] &quot;GSS&quot; &quot;HMGCR&quot; &quot;HSPB1/5&quot; &quot;KOD&quot; &quot;LPCAT3&quot; ## [21] &quot;MT1G&quot; &quot;NCOA4&quot; &quot;NFE2L2&quot; &quot;PTGS2&quot; &quot;RPL8&quot; ## [26] &quot;SAT1&quot; &quot;SLC7A11&quot; &quot;SQS&quot; &quot;TFRC&quot; &quot;TP53&quot; ## [31] &quot;TTC35/EMC2&quot; &quot;MESH1&quot; ## ## $TLS_Nature ## [1] &quot;CD79B&quot; &quot;CD1D&quot; &quot;CCR6&quot; &quot;LAT&quot; &quot;SKAP1&quot; &quot;CETP&quot; &quot;EIF1AY&quot; &quot;RBP5&quot; ## [9] &quot;PTGDS&quot; ## ## $Glycolysis ## [1] &quot;ACSS1&quot; &quot;ACSS2&quot; &quot;ADH1A&quot; &quot;ADH1B&quot; &quot;ADH1C&quot; &quot;ADH4&quot; &quot;ADH5&quot; ## [8] &quot;ADH6&quot; &quot;ADH7&quot; &quot;ADPGK&quot; &quot;AKR1A1&quot; &quot;ALDH1A3&quot; &quot;ALDH1B1&quot; &quot;ALDH2&quot; ## [15] &quot;ALDH3A1&quot; &quot;ALDH3A2&quot; &quot;ALDH3B1&quot; &quot;ALDH3B2&quot; &quot;ALDH7A1&quot; &quot;ALDH9A1&quot; &quot;ALDOA&quot; ## [22] &quot;ALDOB&quot; &quot;ALDOC&quot; &quot;BPGM&quot; &quot;DLAT&quot; &quot;DLD&quot; &quot;ENO1&quot; &quot;ENO2&quot; ## [29] &quot;ENO3&quot; &quot;FBP1&quot; &quot;FBP2&quot; &quot;G6PC&quot; &quot;G6PC2&quot; &quot;GALM&quot; &quot;GAPDH&quot; ## [36] &quot;GAPDHS&quot; &quot;GCK&quot; &quot;GPI&quot; &quot;HK1&quot; &quot;HK2&quot; &quot;HK3&quot; &quot;HKDC1&quot; ## [43] &quot;LDHA&quot; &quot;LDHAL6A&quot; &quot;LDHAL6B&quot; &quot;LDHB&quot; &quot;LDHC&quot; &quot;PANK1&quot; &quot;PCK1&quot; ## [50] &quot;PCK2&quot; &quot;PDHA1&quot; &quot;PDHA2&quot; &quot;PDHB&quot; &quot;PFKFB1&quot; &quot;PFKFB2&quot; &quot;PFKFB3&quot; ## [57] &quot;PFKFB4&quot; &quot;PFKL&quot; &quot;PFKM&quot; &quot;PFKP&quot; &quot;PGAM1&quot; &quot;PGAM2&quot; &quot;PGAM4&quot; ## [64] &quot;PGK1&quot; &quot;PGK2&quot; &quot;PGM1&quot; &quot;PGM2&quot; &quot;PKLR&quot; &quot;PKM&quot; &quot;SLC2A2&quot; ## [71] &quot;TPI1&quot; gsea&lt;- sig_gsea(deg, genesets = sig_list, path = &quot;result&quot;, gene_symbol = &quot;symbol&quot;, logfc = &quot;log2FoldChange&quot;, org = &quot;hsa&quot;, show_plot = FALSE, msigdb = TRUE, category = &quot;H&quot;, subcategory = NULL, palette_bar = &quot;set2&quot;) Figure 8.1: GSEA of TME gent sets Hallmark gene signatures gsea&lt;- sig_gsea(deg, genesets = NULL, path = &quot;GSEA&quot;, gene_symbol = &quot;symbol&quot;, logfc = &quot;log2FoldChange&quot;, org = &quot;hsa&quot;, show_plot = FALSE, msigdb = TRUE, category = &quot;H&quot;, subcategory = NULL, palette_bar = &quot;aaas&quot;, show_bar = 5, show_gsea = 6) Figure 8.2: GSEA of Hallmark gent sets 8.7 DEG analysis: method2 Identifing TME subtype-related differential genes using find_markers_in_bulk library(Seurat) res &lt;- find_markers_in_bulk(pdata = tme, eset = eset, group = &quot;TMEcluster&quot;, nfeatures = 2000, top_n = 50, thresh.use = 0.15, only.pos = TRUE, min.pct = 0.10) top15 &lt;- res$top_markers %&gt;% dplyr:: group_by(cluster) %&gt;% dplyr::top_n(15, avg_log2FC) top15$gene ## [1] &quot;IDO1&quot; &quot;CXCL11&quot; &quot;SLCO1B3&quot; &quot;IFNG&quot; ## [5] &quot;AIM2&quot; &quot;GZMB&quot; &quot;VSNL1&quot; &quot;CXCL10&quot; ## [9] &quot;CXCL9&quot; &quot;GBP4&quot; &quot;KLRC2&quot; &quot;GNLY&quot; ## [13] &quot;GZMH&quot; &quot;KISS1R&quot; &quot;WARS&quot; &quot;C2orf40&quot; ## [17] &quot;OGN&quot; &quot;PGA4&quot; &quot;SCN7A&quot; &quot;C7&quot; ## [21] &quot;ADH1B&quot; &quot;GIF&quot; &quot;SCRG1&quot; &quot;LIPF&quot; ## [25] &quot;GHRL&quot; &quot;MAMDC2&quot; &quot;VIP&quot; &quot;ABCA8&quot; ## [29] &quot;ATP4A&quot; &quot;TMEM100&quot; &quot;REG1B&quot; &quot;MAGEA12&quot; ## [33] &quot;MAGEA4&quot; &quot;IL1A&quot; &quot;PI15&quot; &quot;IL11&quot; ## [37] &quot;MAGEA6&quot; &quot;MAGEA10-MAGEA5&quot; &quot;PPBP&quot; &quot;PROK2&quot; ## [41] &quot;MAGEA2B&quot; &quot;CLEC5A&quot; &quot;IL24&quot; &quot;CTAG1A&quot; ## [45] &quot;EREG&quot; Heatmap visualisation using Seurat’s DoHeatmap #定义分型对应的颜色 cols &lt;- c(&#39;#2692a4&#39;,&#39;#fc0d3a&#39;,&#39;#ffbe0b&#39;) p1 &lt;- DoHeatmap(res$sce, top15$gene, group.colors = cols )+ scale_fill_gradientn(colours = rev(colorRampPalette(RColorBrewer::brewer.pal(11,&quot;RdBu&quot;))(256))) Extracting variables from the expression matrix to merge with TME subtypes input &lt;- combine_pd_eset(eset = eset, pdata = tme, feas = top15$gene, scale = T) p2 &lt;- sig_box(input, variable = &quot;TMEcluster&quot;, signature = &quot;IFNG&quot;, jitter = TRUE, cols = cols, show_pvalue = TRUE, size_of_pvalue = 4) ## # A tibble: 3 × 8 ## .y. group1 group2 p p.adj p.format p.signif method ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 signature IA IE 4.09e-17 1.20e-16 &lt; 2e-16 **** Wilcoxon ## 2 signature IA IS 1.44e-13 2.90e-13 1.4e-13 **** Wilcoxon ## 3 signature IE IS 8.35e- 2 8.4 e- 2 0.084 ns Wilcoxon p3 &lt;- sig_box(input, variable = &quot;TMEcluster&quot;, signature = &quot;IL1A&quot;, jitter = TRUE, cols = cols, show_pvalue = TRUE, size_of_pvalue = 4) ## # A tibble: 3 × 8 ## .y. group1 group2 p p.adj p.format p.signif method ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 signature IA IE 1.46e-10 2.90e-10 1.5e-10 **** Wilcoxon ## 2 signature IA IS 8.22e- 7 8.2 e- 7 8.2e-07 **** Wilcoxon ## 3 signature IE IS 4.90e-20 1.5 e-19 &lt; 2e-16 **** Wilcoxon if (!requireNamespace(&quot;patchwork&quot;, quietly = TRUE)) install.packages(&quot;patchwork&quot;) library(patchwork) p &lt;- (p1|p2/p3) + plot_layout(widths = c(2.3,1)) p + plot_annotation(tag_levels = &#39;A&#39;) 8.8 Identifying signatures associated with TME clusters Calculate TME associated signatures-(through PCA method). sig_tme&lt;-calculate_sig_score(pdata = NULL, eset = eset, signature = signature_collection, method = &quot;pca&quot;, mini_gene_count = 2) sig_tme &lt;- t(column_to_rownames(sig_tme, var = &quot;ID&quot;)) sig_tme[1:5, 1:3] ## GSM1523727 GSM1523728 GSM1523729 ## CD_8_T_effector -2.5513794 0.7789141 -2.1770675 ## DDR -0.8747614 0.7425162 -1.3272054 ## APM 1.1098368 2.1988688 -0.9516419 ## Immune_Checkpoint -2.3701787 0.9455120 -1.4844104 ## CellCycle_Reg 0.1063358 0.7583302 -0.3649795 Finding signatures or cell types associated with TMEcluster res &lt;- find_markers_in_bulk(pdata = tme, eset = sig_tme, group = &quot;TMEcluster&quot;, nfeatures = 1000, top_n = 20, min.pct = 0.10) top15 &lt;- res$top_markers %&gt;% dplyr:: group_by(cluster) %&gt;% dplyr::top_n(15, avg_log2FC) p1 &lt;- DoHeatmap(res$sce, top15$gene, group.colors = cols)+ scale_fill_gradientn(colours = rev(colorRampPalette(RColorBrewer::brewer.pal(11,&quot;RdBu&quot;))(256))) top15$gene &lt;- gsub(top15$gene, pattern = &quot;-&quot;, replacement = &quot;\\\\_&quot;) input &lt;- combine_pd_eset(eset = sig_tme, pdata = tme, feas = top15$gene, scale = T) p2 &lt;- sig_box(input, variable = &quot;TMEcluster&quot;, signature = &quot;CD_8_T_effector&quot;, jitter = TRUE, cols = cols, show_pvalue = TRUE, size_of_pvalue = 4, size_of_font = 6) ## # A tibble: 3 × 8 ## .y. group1 group2 p p.adj p.format p.signif method ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 signature IA IE 3.53e-10 7.10e-10 3.5e-10 **** Wilcoxon ## 2 signature IA IS 8.49e-13 2.5 e-12 8.5e-13 **** Wilcoxon ## 3 signature IE IS 1.41e- 1 1.4 e- 1 0.14 ns Wilcoxon p3 &lt;- sig_box(input, variable = &quot;TMEcluster&quot;, signature = &quot;Neutrophils_Bindea_et_al&quot;, jitter = TRUE, cols = cols, show_pvalue = TRUE, size_of_pvalue = 4, size_of_font = 6) ## # A tibble: 3 × 8 ## .y. group1 group2 p p.adj p.format p.signif method ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 signature IA IE 0.00639 0.013 0.0064 ** Wilcoxon ## 2 signature IA IS 0.0584 0.058 0.0584 ns Wilcoxon ## 3 signature IE IS 0.0000929 0.00028 9.3e-05 **** Wilcoxon p &lt;- (p1|p2/p3) + plot_layout(widths = c(2.3,1)) p + plot_annotation(tag_levels = &#39;A&#39;) library(survminer) data(pdata_acrg, package = &quot;IOBR&quot;) input &lt;- merge(pdata_acrg, input, by = &quot;ID&quot;) p1&lt;-surv_group(input_pdata = input, target_group = &quot;TMEcluster&quot;, ID = &quot;ID&quot;, reference_group = &quot;High&quot;, project = &quot;ACRG&quot;, cols = cols, time = &quot;OS_time&quot;, status = &quot;OS_status&quot;, time_type = &quot;month&quot;, save_path = &quot;result&quot;) ## &gt;&gt;&gt; Dataset&#39;s survival follow up time is range between 1 to 105.7 months ## IA IE IS ## 107 96 97 ## 1079697 ## Maximum of follow up time is 105.7 months; and will be divided into 6 sections; ## Warning in geom_segment(aes(x = 0, y = max(y2), xend = max(x1), yend = max(y2)), : All aesthetics have length 1, but the data has 2 rows. ## ℹ Please consider using `annotate()` or provide this layer with data containing ## a single row. ## Registered S3 methods overwritten by &#39;ggpp&#39;: ## method from ## heightDetails.titleGrob ggplot2 ## widthDetails.titleGrob ggplot2 ## Warning in geom_segment(aes(x = 0, y = max(y2), xend = max(x1), yend = max(y2)), : All aesthetics have length 1, but the data has 2 rows. ## ℹ Please consider using `annotate()` or provide this layer with data containing ## a single row. ## All aesthetics have length 1, but the data has 2 rows. ## ℹ Please consider using `annotate()` or provide this layer with data containing ## a single row. ## All aesthetics have length 1, but the data has 2 rows. ## ℹ Please consider using `annotate()` or provide this layer with data containing ## a single row. p1 p1&lt;- percent_bar_plot(input, x = &quot;TMEcluster&quot; , y = &quot;Subtype&quot;, palette = &quot;jama&quot;) ## # A tibble: 12 × 5 ## # Groups: TMEcluster [3] ## TMEcluster Subtype Freq Prop count ## &lt;chr&gt; &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 IA EMT 7 0.07 107 ## 2 IA MSI 49 0.46 107 ## 3 IA MSS/TP53- 27 0.25 107 ## 4 IA MSS/TP53+ 24 0.22 107 ## 5 IE EMT 24 0.25 96 ## 6 IE MSI 3 0.03 96 ## 7 IE MSS/TP53- 40 0.42 96 ## 8 IE MSS/TP53+ 29 0.3 96 ## 9 IS EMT 15 0.15 97 ## 10 IS MSI 16 0.16 97 ## 11 IS MSS/TP53- 40 0.41 97 ## 12 IS MSS/TP53+ 26 0.27 97 ## [1] &quot;&#39;#374E55FF&#39;, &#39;#DF8F44FF&#39;, &#39;#00A1D5FF&#39;, &#39;#B24745FF&#39;, &#39;#79AF97FF&#39;, &#39;#6A6599FF&#39;, &#39;#80796BFF&#39;&quot; p2&lt;- percent_bar_plot(input, x = &quot;TMEcluster&quot; , y = &quot;Lauren&quot;, palette = &quot;jama&quot;) ## # A tibble: 9 × 5 ## # Groups: TMEcluster [3] ## TMEcluster Lauren Freq Prop count ## &lt;chr&gt; &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 IA Diffuse 34 0.32 107 ## 2 IA Intestinal 60 0.56 107 ## 3 IA Mixed 13 0.12 107 ## 4 IE Diffuse 60 0.62 96 ## 5 IE Intestinal 32 0.33 96 ## 6 IE Mixed 4 0.04 96 ## 7 IS Diffuse 41 0.42 97 ## 8 IS Intestinal 54 0.56 97 ## 9 IS Mixed 2 0.02 97 ## [1] &quot;&#39;#374E55FF&#39;, &#39;#DF8F44FF&#39;, &#39;#00A1D5FF&#39;, &#39;#B24745FF&#39;, &#39;#79AF97FF&#39;, &#39;#6A6599FF&#39;, &#39;#80796BFF&#39;&quot; p3&lt;- percent_bar_plot(input, x = &quot;TMEcluster&quot; , y = &quot;TMEscore_binary&quot;, palette = &quot;jama&quot;) ## # A tibble: 7 × 5 ## # Groups: TMEcluster [3] ## TMEcluster TMEscore_binary Freq Prop count ## &lt;chr&gt; &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 IA High 60 0.56 107 ## 2 IA Low 47 0.44 107 ## 3 IE High 5 0.05 96 ## 4 IE Low 91 0.95 96 ## 5 IS High 6 0.06 97 ## 6 IS Low 90 0.93 97 ## 7 IS &lt;NA&gt; 1 0.01 97 ## [1] &quot;&#39;#374E55FF&#39;, &#39;#DF8F44FF&#39;, &#39;#00A1D5FF&#39;, &#39;#B24745FF&#39;, &#39;#79AF97FF&#39;, &#39;#6A6599FF&#39;, &#39;#80796BFF&#39;&quot; p1|p2|p3 8.9 References Cristescu, R., Lee, J., Nebozhyn, M. et al. Molecular analysis of gastric cancer identifies subtypes associated with distinct clinical outcomes. Nat Med 21, 449–456 (2015). https://doi.org/10.1038/nm.3850 CIBERSORT; Newman, A. M., Liu, C. L., Green, M. R., Gentles, A. J., Feng, W., Xu, Y., … Alizadeh, A. A. (2015). Robust enumeration of cell subsets from tissue expression profiles. Nature Methods, 12(5), 453–457. https://doi.org/10.1038/nmeth.3337; Seurat: Hao and Hao et al. Integrated analysis of multimodal single-cell data. Cell (2021) Zeng D, Yu Y, Qiu W, Mao Q, …, Zhang K, Liao W; Tumor microenvironment immunotyping heterogeneity reveals distinct molecular mechanisms to clinical immunotherapy applications in gastric cancer. (2024) Under Review. "],["tme-and-genomic-interaction.html", "Chapter 9 TME and genomic interaction 9.1 Loading packages 9.2 Genomic data prepare 9.3 Identifying Mutations Associated with TME 9.4 OncoPrint of result 9.5 Boxplot of top 10 mutated genes 9.6 Other methods to obtaind genomic data 9.7 References", " Chapter 9 TME and genomic interaction 9.1 Loading packages library(IOBR) 9.2 Genomic data prepare In this section, we are going to use the MAF data of TCGA-STAD cohort as an example dataset. This dataset could be found in multiple places, here we show two ways to get it. 9.2.1 Using TCGAbiolinks to download genomic data R Bioconductor package TCGAbiolinks provides an R interface of GDC data portal, which stores updating TCGA data. You can check and install this package with the following code. if (!requireNamespace(&quot;TCGAbiolinks&quot;, quietly = TRUE)) BiocManager::install(&quot;TCGAbiolinks&quot;) Then you can query, download and prepare the required dataset. library(TCGAbiolinks) query &lt;- GDCquery( project = &quot;TCGA-STAD&quot;, data.category = &quot;Simple Nucleotide Variation&quot;, access = &quot;open&quot;, data.type = &quot;Masked Somatic Mutation&quot;, workflow.type = &quot;Aliquot Ensemble Somatic Variant Merging and Masking&quot; ) GDCdownload(query) maf &lt;- GDCprepare(query) This maf object is a data.frame, you can use read.maf() from R package Maftools to convert it to a MAF object. In this example, we used the maf file of TCGA-STAD to extract the SNPs in it,and then transformed it into a non-negative matrix. (load(&quot;TCGA-STAD.maf.RData&quot;)) ## [1] &quot;maf&quot; mut_list &lt;- make_mut_matrix(maf = maf, isTCGA = T, category = &quot;multi&quot;) ## -Validating ## -Silent variants: 45460 ## -Summarizing ## --Possible FLAGS among top ten genes: ## TTN ## MUC16 ## SYNE1 ## FLG ## -Processing clinical data ## --Missing clinical data ## -Finished in 7.250s elapsed (7.100s cpu) ## Frame_Shift_Del Frame_Shift_Ins In_Frame_Del ## 21547 4526 1196 ## In_Frame_Ins Missense_Mutation Nonsense_Mutation ## 106 102137 5669 ## Nonstop_Mutation Splice_Site Translation_Start_Site ## 117 2242 107 ## DEL INS ONP SNP ## 22997 4675 10 109965 mut &lt;- mut_list$snp 9.3 Identifying Mutations Associated with TME The microenvironmental data from the TCGA-STAD expression matrix was merged. The Cuzick or Wilcoxon test was used to identify genetic variants associated with microenvironmental factors. CD_8_T_effector was used as the target variable in this example. data(&quot;tcga_stad_sig&quot;, package = &quot;IOBR&quot;) res&lt;-find_mutations(mutation_matrix = mut, signature_matrix = tcga_stad_sig, id_signature_matrix = &quot;ID&quot;, signature = &quot;CD_8_T_effector&quot;, palette = &quot;nrc&quot;, min_mut_freq = 0.01, plot = TRUE, jitter = TRUE, point.alpha = 0.25) ## [1] &quot;&gt;&gt;&gt;&gt; Result of Cuzick Test&quot; ## p.value names statistic adjust_pvalue ## PIK3CA 6.279087e-10 PIK3CA 6.183261 3.139543e-07 ## PLXNA4 8.196539e-05 PLXNA4 3.938580 2.049135e-02 ## DMD 3.514677e-04 DMD 3.574075 3.882570e-02 ## SPEG 3.665757e-04 SPEG 3.563047 3.882570e-02 ## AHNAK2 3.882570e-04 AHNAK2 3.547940 3.882570e-02 ## TCHH 6.571311e-04 TCHH 3.406867 5.476093e-02 ## ABCC9 1.043516e-03 ABCC9 3.278524 7.453684e-02 ## ANK3 1.470480e-03 ANK3 3.180447 7.713409e-02 ## WDFY3 1.690248e-03 WDFY3 3.139867 7.713409e-02 ## LRP1 1.762002e-03 LRP1 3.127666 7.713409e-02 ## [1] &quot;&gt;&gt;&gt; Result of Wilcoxon test (top 10)&quot; ## p.value names statistic adjust_pvalue ## PIK3CA 3.045532e-11 PIK3CA 4006 1.522766e-08 ## TCHH 2.585594e-05 TCHH 2929 6.463985e-03 ## PLXNA4 5.257043e-05 PLXNA4 2904 7.754311e-03 ## LRP1 6.203449e-05 LRP1 2330 7.754311e-03 ## RNF213 1.066555e-04 RNF213 3827 1.066555e-02 ## SPEG 1.809850e-04 SPEG 1854 1.439761e-02 ## WDFY3 2.420595e-04 WDFY3 2626 1.439761e-02 ## DMD 2.430706e-04 DMD 4995 1.439761e-02 ## ANK3 2.591569e-04 ANK3 3845 1.439761e-02 ## AHNAK2 3.456706e-04 AHNAK2 4828 1.728353e-02 ## All mutation types: mut. ## Warning: You defined `cell_fun` for a heatmap with more than 100 rows or ## columns, which might be very slow to draw. Consider to use the ## vectorized version `layer_fun`. ## All mutation types: mut. ## Warning: You defined `cell_fun` for a heatmap with more than 100 rows or ## columns, which might be very slow to draw. Consider to use the ## vectorized version `layer_fun`. 9.4 OncoPrint of result Figure 9.1: OncoPrint 9.5 Boxplot of top 10 mutated genes Figure 9.2: Top 10 mutated genes 9.6 Other methods to obtaind genomic data 9.6.1 Using TCGAmutations As its name, the R package TCGAmutations provides pre-compiled, curated somatic mutations from 33 TCGA cohorts along with relevant clinical information for all sequenced samples. You can install it similar to the TCGAbiolinks. if (!requireNamespace(&quot;TCGAmutations&quot;, quietly = TRUE)) BiocManager::install(&quot;PoisonAlien/TCGAmutations&quot;) It’s quite simple to use: maf = TCGAmutations::tcga_load(study = &quot;STAD&quot;) # Change `source` argument to Firehose for MAF files from Broad Firehose # maf = TCGAmutations::tcga_load(study = &quot;STAD&quot;, source = &quot;Firehose&quot;) 9.6.2 Using maftools If you are a user of R package Maftools, you can access and load the data in a similar way (because the author of TCGAmutations and Maftools is the same person). # The following github can be changed to gitee # it maybe fast in China mainland maftools::tcgaAvailable(repo = &quot;github&quot;) maftools::tcgaLoad(&quot;STAD&quot;, repo = &quot;github&quot;) MAF data transformation To prepare the data for the downstream analysis. We need to extract the SNV data in it and transform it into a non-negative matrix. mut_list &lt;- make_mut_matrix(maf = maf, isTCGA = TRUE, category = &quot;multi&quot;) 9.7 References Wang et al., (2019). The UCSCXenaTools R package: a toolkit for accessing genomics data from UCSC Xena platform, from cancer multi-omics to single-cell RNA-seq. Journal of Open Source Software, 4(40), 1627, https://doi.org/10.21105/joss.01627 Gu, Z. (2022) Complex Heatmap Visualization. iMeta. Anand Mayakonda et al., (2018) Maftools: efficient and comprehensive analysis of somatic variants in cancer. Genome Research "],["tme-modeling.html", "Chapter 10 TME Modeling 10.1 Loading packages 10.2 Data prepare 10.3 Input data (overall survival) prepare 10.4 Constructing survival prediction models 10.5 Input data (Response) prepare 10.6 Constructing prediction models for response 10.7 References", " Chapter 10 TME Modeling Previous studies have shown that the tumour microenvironment is a complex ecosystem. No single cell or gene is sufficient to influence the phenotype. Therefore, machine learning models of the tumour microenvironment or models of tumour microenvironment typing are used to predict tumour phenotypes and treatment response. In the last section, we present common considerations and scenarios for constructing tumour microenvironment models. 10.1 Loading packages library(IOBR) 10.2 Data prepare Using data from IMvigor210, we demonstrate two common scenarios for building models of the tumour microenvironment: predicting survival and predicting treatment response (BOR, RECIEST 1.1). data(&quot;imvigor210_sig&quot;, package = &quot;IOBR&quot;) data(&quot;imvigor210_pdata&quot;, package = &quot;IOBR&quot;) 10.3 Input data (overall survival) prepare pdata_prog &lt;- imvigor210_pdata %&gt;% dplyr::select(ID, OS_days, OS_status) %&gt;% mutate(OS_days = as.numeric(.$OS_days)) %&gt;% mutate(OS_status = as.numeric(.$OS_status)) head(pdata_prog) ## # A tibble: 6 × 3 ## ID OS_days OS_status ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 SAM00b9e5c52da9 57.2 1 ## 2 SAM0257bbbbd388 469. 1 ## 3 SAM025b45c27e05 263. 1 ## 4 SAM032c642382a7 74.9 1 ## 5 SAM04c589eb3fb3 20.7 0 ## 6 SAM0571f17f4045 136. 1 10.4 Constructing survival prediction models prognostic_result &lt;- PrognosticModel(x = imvigor210_sig, y = pdata_prog, scale = T, seed = 123456, train_ratio = 0.7, nfold = 8, plot = TRUE) 10.5 Input data (Response) prepare pdata_group &lt;- imvigor210_pdata[!imvigor210_pdata$BOR_binary==&quot;NA&quot;,c(&quot;ID&quot;,&quot;BOR_binary&quot;)] pdata_group$BOR_binary &lt;- ifelse(pdata_group$BOR_binary == &quot;R&quot;, 1, 0) head(pdata_group) ## # A tibble: 6 × 2 ## ID BOR_binary ## &lt;chr&gt; &lt;dbl&gt; ## 1 SAM0257bbbbd388 0 ## 2 SAM025b45c27e05 0 ## 3 SAM032c642382a7 0 ## 4 SAM0571f17f4045 0 ## 5 SAM065890737112 1 ## 6 SAM0684af734db1 1 10.6 Constructing prediction models for response binom_res &lt;- BinomialModel(x = imvigor210_sig, y = pdata_group, seed = 123456, scale = TRUE, train_ratio = 0.7, nfold = 8, plot = T) ## NULL ## NULL ## NULL ## NULL ## NULL 10.7 References Cristescu, R., Lee, J., Nebozhyn, M. et al. Molecular analysis of gastric cancer identifies subtypes associated with distinct clinical outcomes. Nat Med 21, 449–456 (2015). https://doi.org/10.1038/nm.3850 CIBERSORT; Newman, A. M., Liu, C. L., Green, M. R., Gentles, A. J., Feng, W., Xu, Y., … Alizadeh, A. A. (2015). Robust enumeration of cell subsets from tissue expression profiles. Nature Methods, 12(5), 453–457. https://doi.org/10.1038/nmeth.3337; Seurat: Hao and Hao et al. Integrated analysis of multimodal single-cell data. Cell (2021) "],["some-tips-about-iobr.html", "Chapter 11 Some tips about IOBR 11.1 Loading packages 11.2 Colour Configuration", " Chapter 11 Some tips about IOBR In this section, we’ll cover some of the tips inside the IOBR package in terms of data processing and visualisation. 11.1 Loading packages library(IOBR) 11.2 Colour Configuration 11.2.1 categorical variable In IOBR, we created a function for get_col. The user can get the colours with some parameters in it. Please refer to the following example. In order to better suit the requirements of the journal, we have provided some of the more commonly used colour schemes. These include nrc, jama, aaas, jco, paired1, paired2, paired3, paired4, accent, set2. cols &lt;- get_cols(palette = &quot;jama&quot;, show_col = T) ## [1] &quot;&#39;#374E55FF&#39;, &#39;#DF8F44FF&#39;, &#39;#00A1D5FF&#39;, &#39;#B24745FF&#39;, &#39;#79AF97FF&#39;, &#39;#6A6599FF&#39;, &#39;#80796BFF&#39;&quot; cols ## [1] &quot;#374E55FF&quot; &quot;#DF8F44FF&quot; &quot;#00A1D5FF&quot; &quot;#B24745FF&quot; &quot;#79AF97FF&quot; &quot;#6A6599FF&quot; ## [7] &quot;#80796BFF&quot; cols &lt;- get_cols( palette = &quot;jco&quot;, show_col = T) ## [1] &quot;&#39;#0073C2FF&#39;, &#39;#EFC000FF&#39;, &#39;#868686FF&#39;, &#39;#CD534CFF&#39;, &#39;#7AA6DCFF&#39;, &#39;#003C67FF&#39;, &#39;#8F7700FF&#39;, &#39;#3B3B3BFF&#39;, &#39;#A73030FF&#39;&quot; cols ## [1] &quot;#0073C2FF&quot; &quot;#EFC000FF&quot; &quot;#868686FF&quot; &quot;#CD534CFF&quot; &quot;#7AA6DCFF&quot; &quot;#003C67FF&quot; ## [7] &quot;#8F7700FF&quot; &quot;#3B3B3BFF&quot; &quot;#A73030FF&quot; cols &lt;- get_cols(palette = &quot;nrc&quot;, show_col = T) ## [1] &quot;&#39;#E64B35FF&#39;, &#39;#4DBBD5FF&#39;, &#39;#00A087FF&#39;, &#39;#3C5488FF&#39;, &#39;#F39B7FFF&#39;, &#39;#8491B4FF&#39;, &#39;#91D1C2FF&#39;, &#39;#DC0000FF&#39;, &#39;#7E6148FF&#39;&quot; cols ## [1] &quot;#E64B35FF&quot; &quot;#4DBBD5FF&quot; &quot;#00A087FF&quot; &quot;#3C5488FF&quot; &quot;#F39B7FFF&quot; &quot;#8491B4FF&quot; ## [7] &quot;#91D1C2FF&quot; &quot;#DC0000FF&quot; &quot;#7E6148FF&quot; cols &lt;- get_cols(palette = &quot;aaas&quot;, show_col = T) ## [1] &quot;&#39;#3B4992FF&#39;, &#39;#EE0000FF&#39;, &#39;#008B45FF&#39;, &#39;#631879FF&#39;, &#39;#008280FF&#39;, &#39;#BB0021FF&#39;, &#39;#5F559BFF&#39;, &#39;#A20056FF&#39;, &#39;#808180FF&#39;&quot; cols ## [1] &quot;#3B4992FF&quot; &quot;#EE0000FF&quot; &quot;#008B45FF&quot; &quot;#631879FF&quot; &quot;#008280FF&quot; &quot;#BB0021FF&quot; ## [7] &quot;#5F559BFF&quot; &quot;#A20056FF&quot; &quot;#808180FF&quot; cols &lt;- get_cols(palette = &quot;paired4&quot;, show_col = T) ## [1] &quot;&#39;#FDBF6F&#39;, &#39;#FF7F00&#39;, &#39;#CAB2D6&#39;, &#39;#6A3D9A&#39;, &#39;#FFFF99&#39;&quot; cols ## [1] &quot;#FDBF6F&quot; &quot;#FF7F00&quot; &quot;#CAB2D6&quot; &quot;#6A3D9A&quot; &quot;#FFFF99&quot; cols &lt;- get_cols(palette = &quot;set2&quot;, show_col = T) ## [1] &quot;&#39;#66C2A5&#39;, &#39;#FC8D62&#39;, &#39;#8DA0CB&#39;, &#39;#E78AC3&#39;, &#39;#A6D854&#39;, &#39;#FFD92F&#39;, &#39;#E5C494&#39;&quot; cols ## [1] &quot;#66C2A5&quot; &quot;#FC8D62&quot; &quot;#8DA0CB&quot; &quot;#E78AC3&quot; &quot;#A6D854&quot; &quot;#FFD92F&quot; &quot;#E5C494&quot; 11.2.2 Higher number of subgroups In order to cope with multiple groupings, we have selected some colours that are more identifiable with each other and stored these colourways in the objects palette1-4. The user can obtain them by setting the parameter palette. cols &lt;- get_cols(palette = 1, show_col = T) ## &gt;&gt;&gt;&gt;=== Palette option for random: 1: palette1; 2: palette2; 3: palette3; 4: palette4 ## [1] &quot;&#39;#5f75ae&#39;, &#39;#64a841&#39;, &#39;#e5486e&#39;, &#39;#de8e06&#39;, &#39;#b5aa0f&#39;, &#39;#7ba39d&#39;, &#39;#b15928&#39;, &#39;#6a3d9a&#39;, &#39;#cab2d6&#39;, &#39;#374E55FF&#39;, &#39;#00A1D5FF&#39;, &#39;#6A6599FF&#39;, &#39;#80796BFF&#39;, &#39;#e31a1c&#39;, &#39;#fb9a99&#39;, &#39;#1f78b4&#39;, &#39;#a6cee3&#39;, &#39;#008280FF&#39;, &#39;#3C5488FF&#39;, &#39;#8F7700FF&#39;, &#39;#666666&#39;, &#39;#A20056FF&#39;, &#39;#fdbf6f&#39;, &#39;#E78AC3&#39;, &#39;#b2df8a&#39;, &#39;#386CB0&#39;, &#39;#CD534CFF&#39;, &#39;#008B45FF&#39;, &#39;#7AA6DCFF&#39;, &#39;#00A087FF&#39;, &#39;#A73030FF&#39;, &#39;#631879FF&#39;, &#39;#003C67FF&#39;&quot; cols ## [1] &quot;#5f75ae&quot; &quot;#64a841&quot; &quot;#e5486e&quot; &quot;#de8e06&quot; &quot;#b5aa0f&quot; &quot;#7ba39d&quot; ## [7] &quot;#b15928&quot; &quot;#6a3d9a&quot; &quot;#cab2d6&quot; &quot;#374E55FF&quot; &quot;#00A1D5FF&quot; &quot;#6A6599FF&quot; ## [13] &quot;#80796BFF&quot; &quot;#e31a1c&quot; &quot;#fb9a99&quot; &quot;#1f78b4&quot; &quot;#a6cee3&quot; &quot;#008280FF&quot; ## [19] &quot;#3C5488FF&quot; &quot;#8F7700FF&quot; &quot;#666666&quot; &quot;#A20056FF&quot; &quot;#fdbf6f&quot; &quot;#E78AC3&quot; ## [25] &quot;#b2df8a&quot; &quot;#386CB0&quot; &quot;#CD534CFF&quot; &quot;#008B45FF&quot; &quot;#7AA6DCFF&quot; &quot;#00A087FF&quot; ## [31] &quot;#A73030FF&quot; &quot;#631879FF&quot; &quot;#003C67FF&quot; 11.2.3 Gradient colour or heatmap colour scheme palettes(category = &quot;continue&quot;, palette = &quot;puor&quot;, show_col = TRUE, show_message = TRUE) ## There are seven categories you can choose: box, continue2, continue, random, heatmap, heatmap3, tidyheatmap ## There are four palettes you can choose: rdbu, puor, blues, reds ## [1] &quot;&#39;#7F3B08&#39;, &#39;#B35806&#39;, &#39;#E08214&#39;, &#39;#FDB863&#39;, &#39;#FEE0B6&#39;, &#39;#F7F7F7&#39;, &#39;#D8DAEB&#39;, &#39;#B2ABD2&#39;, &#39;#8073AC&#39;, &#39;#542788&#39;, &#39;#2D004B&#39;&quot; ## [1] &quot;#7F3B08&quot; &quot;#B35806&quot; &quot;#E08214&quot; &quot;#FDB863&quot; &quot;#FEE0B6&quot; &quot;#F7F7F7&quot; &quot;#D8DAEB&quot; ## [8] &quot;#B2ABD2&quot; &quot;#8073AC&quot; &quot;#542788&quot; &quot;#2D004B&quot; palettes(category = &quot;continue&quot;, palette = &quot;rdbu&quot;, show_col = TRUE, show_message = TRUE) ## There are seven categories you can choose: box, continue2, continue, random, heatmap, heatmap3, tidyheatmap ## There are four palettes you can choose: rdbu, puor, blues, reds ## [1] &quot;&#39;#67001F&#39;, &#39;#B2182B&#39;, &#39;#D6604D&#39;, &#39;#F4A582&#39;, &#39;#FDDBC7&#39;, &#39;#F7F7F7&#39;, &#39;#D1E5F0&#39;, &#39;#92C5DE&#39;, &#39;#4393C3&#39;, &#39;#2166AC&#39;, &#39;#053061&#39;&quot; ## [1] &quot;#67001F&quot; &quot;#B2182B&quot; &quot;#D6604D&quot; &quot;#F4A582&quot; &quot;#FDDBC7&quot; &quot;#F7F7F7&quot; &quot;#D1E5F0&quot; ## [8] &quot;#92C5DE&quot; &quot;#4393C3&quot; &quot;#2166AC&quot; &quot;#053061&quot; palettes(category = &quot;continue&quot;, palette = &quot;blues&quot;, show_col = TRUE, show_message = TRUE) ## There are seven categories you can choose: box, continue2, continue, random, heatmap, heatmap3, tidyheatmap ## There are four palettes you can choose: rdbu, puor, blues, reds ## Warning in RColorBrewer::brewer.pal(11, &quot;Blues&quot;): n too large, allowed maximum for palette Blues is 9 ## Returning the palette you asked for with that many colors ## [1] &quot;&#39;#F7FBFF&#39;, &#39;#DEEBF7&#39;, &#39;#C6DBEF&#39;, &#39;#9ECAE1&#39;, &#39;#6BAED6&#39;, &#39;#4292C6&#39;, &#39;#2171B5&#39;, &#39;#08519C&#39;, &#39;#08306B&#39;&quot; ## [1] &quot;#F7FBFF&quot; &quot;#DEEBF7&quot; &quot;#C6DBEF&quot; &quot;#9ECAE1&quot; &quot;#6BAED6&quot; &quot;#4292C6&quot; &quot;#2171B5&quot; ## [8] &quot;#08519C&quot; &quot;#08306B&quot; palettes(category = &quot;continue&quot;, palette = &quot;reds&quot;, show_col = TRUE, show_message = TRUE) ## There are seven categories you can choose: box, continue2, continue, random, heatmap, heatmap3, tidyheatmap ## There are four palettes you can choose: rdbu, puor, blues, reds ## Warning in RColorBrewer::brewer.pal(11, &quot;Reds&quot;): n too large, allowed maximum for palette Reds is 9 ## Returning the palette you asked for with that many colors ## [1] &quot;&#39;#FFF5F0&#39;, &#39;#FEE0D2&#39;, &#39;#FCBBA1&#39;, &#39;#FC9272&#39;, &#39;#FB6A4A&#39;, &#39;#EF3B2C&#39;, &#39;#CB181D&#39;, &#39;#A50F15&#39;, &#39;#67000D&#39;&quot; ## [1] &quot;#FFF5F0&quot; &quot;#FEE0D2&quot; &quot;#FCBBA1&quot; &quot;#FC9272&quot; &quot;#FB6A4A&quot; &quot;#EF3B2C&quot; &quot;#CB181D&quot; ## [8] &quot;#A50F15&quot; &quot;#67000D&quot; For heatmap colour configuration, usually more colours are needed. Users can adjust the number of colours to be returned by setting the parameter category to heatmap and by adjusting count. In IOBR, we offer a total of 7 colour schemes. Users can choose the colour scheme by setting the palette. palettes(category = &quot;heatmap&quot;, palette = &quot;1&quot;, counts = 20, show_col = TRUE, show_message = TRUE) ## There are seven categories you can choose: box, continue2, continue, random, heatmap, heatmap3, tidyheatmap ## There are five palettes you can choose: 1 = pheatmap, 2 = peach, 3 = blues, 4 = virids, 5 = reds, 6 = RdBu, 7 = navy_firebrick ## [1] &quot;&#39;#4575B4&#39;, &#39;#5D8CC0&#39;, &#39;#75A3CC&#39;, &#39;#8CBBD8&#39;, &#39;#A5CCE2&#39;, &#39;#BEDDEB&#39;, &#39;#D7EDF4&#39;, &#39;#E6F5EC&#39;, &#39;#F0F9DA&#39;, &#39;#FAFDC8&#39;, &#39;#FEFAB7&#39;, &#39;#FEF0A8&#39;, &#39;#FEE699&#39;, &#39;#FDD78A&#39;, &#39;#FDBD78&#39;, &#39;#FCA267&#39;, &#39;#FA8856&#39;, &#39;#EE6A46&#39;, &#39;#E24D36&#39;, &#39;#D73027&#39;&quot; ## [1] &quot;#4575B4&quot; &quot;#5D8CC0&quot; &quot;#75A3CC&quot; &quot;#8CBBD8&quot; &quot;#A5CCE2&quot; &quot;#BEDDEB&quot; &quot;#D7EDF4&quot; ## [8] &quot;#E6F5EC&quot; &quot;#F0F9DA&quot; &quot;#FAFDC8&quot; &quot;#FEFAB7&quot; &quot;#FEF0A8&quot; &quot;#FEE699&quot; &quot;#FDD78A&quot; ## [15] &quot;#FDBD78&quot; &quot;#FCA267&quot; &quot;#FA8856&quot; &quot;#EE6A46&quot; &quot;#E24D36&quot; &quot;#D73027&quot; palettes(category = &quot;heatmap&quot;, palette = &quot;2&quot;, counts = 20, show_col = TRUE, show_message = TRUE) ## There are seven categories you can choose: box, continue2, continue, random, heatmap, heatmap3, tidyheatmap ## There are five palettes you can choose: 1 = pheatmap, 2 = peach, 3 = blues, 4 = virids, 5 = reds, 6 = RdBu, 7 = navy_firebrick ## [1] &quot;&#39;#3182BD&#39;, &#39;#468FC3&#39;, &#39;#5C9CCA&#39;, &#39;#72A9D1&#39;, &#39;#87B6D8&#39;, &#39;#9DC3DF&#39;, &#39;#B3D0E6&#39;, &#39;#C8DEED&#39;, &#39;#DEEBF4&#39;, &#39;#F4F8FB&#39;, &#39;#FDF3F7&#39;, &#39;#F9DBE9&#39;, &#39;#F6C3DB&#39;, &#39;#F2ABCC&#39;, &#39;#EE93BE&#39;, &#39;#EB7BB0&#39;, &#39;#E763A1&#39;, &#39;#E44B93&#39;, &#39;#E03385&#39;, &#39;#DD1C77&#39;&quot; ## [1] &quot;#3182BD&quot; &quot;#468FC3&quot; &quot;#5C9CCA&quot; &quot;#72A9D1&quot; &quot;#87B6D8&quot; &quot;#9DC3DF&quot; &quot;#B3D0E6&quot; ## [8] &quot;#C8DEED&quot; &quot;#DEEBF4&quot; &quot;#F4F8FB&quot; &quot;#FDF3F7&quot; &quot;#F9DBE9&quot; &quot;#F6C3DB&quot; &quot;#F2ABCC&quot; ## [15] &quot;#EE93BE&quot; &quot;#EB7BB0&quot; &quot;#E763A1&quot; &quot;#E44B93&quot; &quot;#E03385&quot; &quot;#DD1C77&quot; palettes(category = &quot;heatmap&quot;, palette = &quot;3&quot;, counts = 20, show_col = TRUE, show_message = TRUE) ## There are seven categories you can choose: box, continue2, continue, random, heatmap, heatmap3, tidyheatmap ## There are five palettes you can choose: 1 = pheatmap, 2 = peach, 3 = blues, 4 = virids, 5 = reds, 6 = RdBu, 7 = navy_firebrick ## [1] &quot;&#39;#084594&#39;, &#39;#1155A0&#39;, &#39;#1A65AC&#39;, &#39;#2474B6&#39;, &#39;#3080BD&#39;, &#39;#3C8CC3&#39;, &#39;#4A97C9&#39;, &#39;#59A2CF&#39;, &#39;#68ACD5&#39;, &#39;#7BB6D9&#39;, &#39;#8DC1DD&#39;, &#39;#A0CAE1&#39;, &#39;#AED1E6&#39;, &#39;#BDD7EC&#39;, &#39;#C9DDF0&#39;, &#39;#D2E3F3&#39;, &#39;#DBE9F6&#39;, &#39;#E4EFF9&#39;, &#39;#EDF5FC&#39;, &#39;#F7FBFF&#39;&quot; ## [1] &quot;#084594&quot; &quot;#1155A0&quot; &quot;#1A65AC&quot; &quot;#2474B6&quot; &quot;#3080BD&quot; &quot;#3C8CC3&quot; &quot;#4A97C9&quot; ## [8] &quot;#59A2CF&quot; &quot;#68ACD5&quot; &quot;#7BB6D9&quot; &quot;#8DC1DD&quot; &quot;#A0CAE1&quot; &quot;#AED1E6&quot; &quot;#BDD7EC&quot; ## [15] &quot;#C9DDF0&quot; &quot;#D2E3F3&quot; &quot;#DBE9F6&quot; &quot;#E4EFF9&quot; &quot;#EDF5FC&quot; &quot;#F7FBFF&quot; palettes(category = &quot;heatmap&quot;, palette = &quot;7&quot;, counts = 20, show_col = TRUE, show_message = TRUE) ## There are seven categories you can choose: box, continue2, continue, random, heatmap, heatmap3, tidyheatmap ## There are five palettes you can choose: 1 = pheatmap, 2 = peach, 3 = blues, 4 = virids, 5 = reds, 6 = RdBu, 7 = navy_firebrick ## [1] &quot;&#39;#000080&#39;, &#39;#1A1A8D&#39;, &#39;#35359A&#39;, &#39;#5050A8&#39;, &#39;#6B6BB5&#39;, &#39;#8686C2&#39;, &#39;#A1A1D0&#39;, &#39;#BBBBDD&#39;, &#39;#D6D6EA&#39;, &#39;#F1F1F8&#39;, &#39;#FAF3F3&#39;, &#39;#F2DCDC&#39;, &#39;#EAC4C4&#39;, &#39;#E2ADAD&#39;, &#39;#DA9696&#39;, &#39;#D27F7F&#39;, &#39;#CA6767&#39;, &#39;#C25050&#39;, &#39;#BA3939&#39;, &#39;#B22222&#39;&quot; ## [1] &quot;#000080&quot; &quot;#1A1A8D&quot; &quot;#35359A&quot; &quot;#5050A8&quot; &quot;#6B6BB5&quot; &quot;#8686C2&quot; &quot;#A1A1D0&quot; ## [8] &quot;#BBBBDD&quot; &quot;#D6D6EA&quot; &quot;#F1F1F8&quot; &quot;#FAF3F3&quot; &quot;#F2DCDC&quot; &quot;#EAC4C4&quot; &quot;#E2ADAD&quot; ## [15] &quot;#DA9696&quot; &quot;#D27F7F&quot; &quot;#CA6767&quot; &quot;#C25050&quot; &quot;#BA3939&quot; &quot;#B22222&quot; "],["references-7.html", "Chapter 12 References 12.1 TME deconvolution 12.2 TME Signatures 12.3 Data sets 12.4 Others", " Chapter 12 References If IOBR R package is utilized in your published research, please cite: Zeng D, Ye Z, Shen R, Yu G, Wu J, Xiong Y,…, Liao W (2021) IOBR: Multi-Omics Immuno-Oncology Biological Research to Decode Tumor Microenvironment and Signatures. Frontiers in Immunology. 12:687975. doi: 10.3389/fimmu.2021.687975 12.1 TME deconvolution Please cite the following papers appropriately for TME deconvolution algorithm if used: CIBERSORT: Newman, A. M., Liu, C. L., Green, M. R., Gentles, A. J., Feng, W., Xu, Y., … Alizadeh, A. A. (2015). Robust enumeration of cell subsets from tissue expression profiles. Nature Methods, 12(5), 453–457. https://doi.org/10.1038/nmeth.3337 ESTIMATE: Vegesna R, Kim H, Torres-Garcia W, …, Verhaak R.*(2013). Inferring tumour purity and stromal and immune cell admixture from expression data. Nature Communications 4, 2612. http://doi.org/10.1038/ncomms3612 quanTIseq: Finotello, F., Mayer, C., Plattner, C., Laschober, G., Rieder, D., Hackl, H., …, Sopper, S.* (2019). Molecular and pharmacological modulators of the tumor immune contexture revealed by deconvolution of RNA-seq data. Genome medicine, 11(1), 34. https://doi.org/10.1186/s13073-019-0638-6 TIMER: Li, B., Severson, E., Pignon, J.-C., Zhao, H., Li, T., Novak, J., … Liu, X. S.* (2016). Comprehensive analyses of tumor immunity: implications for cancer immunotherapy. Genome Biology, 17(1), 174. IPS: P. Charoentong et al.*, Pan-cancer Immunogenomic Analyses Reveal Genotype-Immunophenotype Relationships and Predictors of Response to Checkpoint Blockade. Cell Reports 18, 248-262 (2017). https://doi.org/10.1016/j.celrep.2016.12.019 MCPCounter: Becht, E., Giraldo, N. A., Lacroix, L., Buttard, B., Elarouci, N., Petitprez, F., … de Reyniès, A*. (2016). Estimating the population abundance of tissue-infiltrating immune and stromal cell populations using gene expression. Genome Biology, 17(1), 218. https://doi.org/10.1186/s13059-016-1070-5 xCell: Aran, D., Hu, Z., &amp; Butte, A. J.* (2017). xCell: digitally portraying the tissue cellular heterogeneity landscape. Genome Biology, 18(1), 220. https://doi.org/10.1186/s13059-017-1349-1 EPIC: Racle, J., de Jonge, K., Baumgaertner, P., Speiser, D. E., &amp; Gfeller, D*. (2017). Simultaneous enumeration of cancer and immune cell types from bulk tumor gene expression data. ELife, 6, e26476. https://doi.org/10.7554/eLife.26476 12.2 TME Signatures For signature score estimation, please cite corresponding literature below: ssgsea: Barbie, D.A. et al (2009). Systematic RNA interference reveals that oncogenic KRAS-driven cancers require TBK1. Nature, 462(5):108-112. gsva: Hänzelmann, S., Castelo, R. and Guinney, J. (2013). GSVA: Gene set variation analysis for microarray and RNA-Seq data. BMC Bioinformatics, 14(1):7. zscore: Lee, E. et al (2008). Inferring pathway activity toward precise disease classification. PLoS Comp Biol, 4(11):e1000217. 12.3 Data sets For the datasets enrolled in IOBR, please cite the data sources: UCSCXena: Wang et al.,et al (2019). The UCSCXenaTools R package: a toolkit for accessing genomics data from UCSC Xena platform, from cancer multi-omics to single-cell RNA-seq. Journal of Open Source Software, 4(40), 1627 TLSscore: Helmink BA, Reddy SM, Gao J, et al. B cells and tertiary lymphoid structures promote immunotherapy response. Nature. 2020 Jan;577(7791):549-555. IMvigor210 immuntherapy cohort: Mariathasan S, Turley SJ, Nickles D, et al. TGFβ attenuates tumour response to PD-L1 blockade by contributing to exclusion of T cells. Nature. 2018 Feb 22;554(7693):544-548. HCP5: Kulski, J.K. Long Noncoding RNA HCP5, a Hybrid HLA Class I Endogenous Retroviral Gene: Structure, Expression, and Disease Associations. Cells 2019, 8, 480. HCP5: Li, Y., Jiang, T., Zhou, W. et al. Pan-cancer characterization of immune-related lncRNAs identifies potential oncogenic biomarkers. Nat Commun 11, 1000 (2020). HCP5: Sun J, Zhang Z, Bao S, et alIdentification of tumor immune infiltration-associated lncRNAs for improving prognosis and immunotherapy response of patients with non-small cell lung cancerJournal for ImmunoTherapy of Cancer 2020;8:e000110. LINC00657: Feng Q, Zhang H, Yao D, Chen WD, Wang YD. Emerging Role of Non-Coding RNAs in Esophageal Squamous Cell Carcinoma. Int J Mol Sci. 2019 Dec 30;21(1):258. doi: 10.3390/ijms21010258. LINC00657: Qin X, Zhou M, Lv H, Mao X, Li X, Guo H, Li L, Xing H. Long noncoding RNA LINC00657 inhibits cervical cancer development by sponging miR-20a-5p and targeting RUNX3. Cancer Lett. 2020 Oct 28:S0304-3835(20)30578-4. doi: 10.1016/j.canlet.2020.10.044. LINC00657: Zhang XM, Wang J, Liu ZL, Liu H, Cheng YF, Wang T. LINC00657/miR-26a-5p/CKS2 ceRNA network promotes the growth of esophageal cancer cells via the MDM2/p53/Bcl2/Bax pathway. Biosci Rep. 2020;40(6):BSR20200525. TCGA-STAD: Cancer Genome Atlas Research Network. Comprehensive molecular characterization of gastric adenocarcinoma. Nature. 2014 Sep 11;513(7517):202-9. doi: 10.1038/nature13480. TCGA.STAD MAF data: https://api.gdc.cancer.gov/data/c06465a3-50e7-46f7-b2dd-7bd654ca206b 12.4 Others Newman, A. M., Liu, C. L., Green, M. R., Gentles, A. J., Feng, W., Xu, Y., … Alizadeh, A. A. (2015). Robust enumeration of cell subsets from tissue expression profiles. Nature Methods, 12(5), 453–457. Vegesna R, Kim H, Torres-Garcia W, …, Verhaak R.*(2013). Inferring tumour purity and stromal and immune cell admixture from expression data. Nature Communications 4, 2612. Rieder, D., Hackl, H., …, Sopper, S.* (2019). Molecular and pharmacological modulators of the tumor immune contexture revealed by deconvolution of RNA-seq data. Genome medicine, 11(1), 34. Li, B., Severson, E., Pignon, J.-C., Zhao, H., Li, T., Novak, J., … Liu, X. S.* (2016). Comprehensive analyses of tumor immunity: implications for cancer immunotherapy. Genome Biology, 17(1), 174. P. Charoentong et al.*, Pan-cancer Immunogenomic Analyses Reveal Genotype-Immunophenotype Relationships and Predictors of Response to Checkpoint Blockade. Cell Reports 18, 248-262 (2017). Becht, E., Giraldo, N. A., Lacroix, L., Buttard, B., Elarouci, N., Petitprez, F., … de Reyniès, A*. (2016). Estimating the population abundance of tissue-infiltrating immune and stromal cell populations using gene expression. Genome Biology, 17(1), 218. Aran, D., Hu, Z., &amp; Butte, A. J.* (2017). xCell: digitally portraying the tissue cellular heterogeneity landscape. Genome Biology, 18(1), 220. Racle, J., de Jonge, K., Baumgaertner, P., Speiser, D. E., &amp; Gfeller, D*. (2017). Simultaneous enumeration of cancer and immune cell types from bulk tumor gene expression data. ELife, 6, e26476. Barbie, D.A. et al (2009). Systematic RNA interference reveals that oncogenic KRAS-driven cancers require TBK1. Nature, 462(5):108-112. Hänzelmann, S., Castelo, R. and Guinney, J. (2013). GSVA: Gene set variation analysis for microarray and RNA-Seq data. BMC Bioinformatics, 14(1):7. Lee, E. et al (2008). Inferring pathway activity toward precise disease classification. PLoS Comp Biol, 4(11):e1000217. Wang et al.,et al (2019). The UCSCXenaTools R package: a toolkit for accessing genomics data from UCSC Xena platform, from cancer multi-omics to single-cell RNA-seq. Journal of Open Source Software, 4(40), 1627 Helmink BA, Reddy SM, Gao J, et al. B cells and tertiary lymphoid structures promote immunotherapy response. Nature. 2020 Jan;577(7791):549-555. Mariathasan S, Turley SJ, Nickles D, et al. TGFβ attenuates tumour response to PD-L1 blockade by contributing to exclusion of T cells. Nature. 2018 Feb 22;554(7693):544-548. Kulski, J.K. Long Noncoding RNA HCP5, a Hybrid HLA Class I Endogenous Retroviral Gene: Structure, Expression, and Disease Associations. Cells 2019, 8, 480. Li, Y., Jiang, T., Zhou, W. et al. Pan-cancer characterization of immune-related lncRNAs identifies potential oncogenic biomarkers. Nat Commun 11, 1000 (2020). Sun J, Zhang Z, Bao S, et alIdentification of tumor immune infiltration-associated lncRNAs for improving prognosis and immunotherapy response of patients with non-small cell lung cancerJournal for ImmunoTherapy of Cancer 2020;8:e000110. Feng Q, Zhang H, Yao D, Chen WD, Wang YD. Emerging Role of Non-Coding RNAs in Esophageal Squamous Cell Carcinoma. Int J Mol Sci. 2019 Dec 30;21(1):258. doi: 10.3390/ijms21010258. Qin X, Zhou M, Lv H, Mao X, Li X, Guo H, Li L, Xing H. Long noncoding RNA LINC00657 inhibits cervical cancer development by sponging miR-20a-5p and targeting RUNX3. Cancer Lett. 2020 Oct Zhang XM, Wang J, Liu ZL, Liu H, Cheng YF, Wang T. LINC00657/miR-26a-5p/CKS2 ceRNA network promotes the growth of esophageal cancer cells via the MDM2/p53/Bcl2/Bax pathway. Biosci Rep. 2020;40(6):BSR20200525. Cancer Genome Atlas Research Network. Comprehensive molecular characterization of gastric adenocarcinoma. Nature. 2014 Sep 11;513(7517):202-9. doi: 10.1038/nature13480. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
